From d946f04b8a1e4b578c83bd81b0e55c24f8b853fa Mon Sep 17 00:00:00 2001
From: Xiao-Long Chen <chenxiaolong@cxl.epac.to>
Date: Thu, 10 Apr 2014 20:17:13 -0400
Subject: [PATCH 6/6] Remove Upstart stuff

---
 lockscreen/LockScreenController.cpp             |  4 --
 lockscreen/LockScreenController.h               |  5 +-
 services/CMakeLists.txt                         |  9 ---
 services/panel-service.c                        | 64 ---------------------
 services/unity-panel-service-lockscreen.conf.in |  8 ---
 services/unity-panel-service.conf.in            | 18 ------
 tools/unity.cmake                               |  3 +-
 unity-shared/CMakeLists.txt                     |  1 -
 unity-shared/UpstartWrapper.cpp                 | 74 -------------------------
 unity-shared/UpstartWrapper.h                   | 53 ------------------
 10 files changed, 2 insertions(+), 237 deletions(-)
 delete mode 100644 services/unity-panel-service-lockscreen.conf.in
 delete mode 100644 services/unity-panel-service.conf.in
 delete mode 100644 unity-shared/UpstartWrapper.cpp
 delete mode 100644 unity-shared/UpstartWrapper.h

diff --git a/lockscreen/LockScreenController.cpp b/lockscreen/LockScreenController.cpp
index 07db7ac..e8bc70e 100644
--- a/lockscreen/LockScreenController.cpp
+++ b/lockscreen/LockScreenController.cpp
@@ -51,13 +51,11 @@ DECLARE_LOGGER(logger, "unity.lockscreen");
 
 Controller::Controller(DBusManager::Ptr const& dbus_manager,
                        session::Manager::Ptr const& session_manager,
-                       UpstartWrapper::Ptr const& upstart_wrapper,
                        ShieldFactoryInterface::Ptr const& shield_factory,
                        bool test_mode)
   : opacity([this] { return fade_animator_.GetCurrentValue(); })
   , dbus_manager_(dbus_manager)
   , session_manager_(session_manager)
-  , upstart_wrapper_(upstart_wrapper)
   , shield_factory_(shield_factory)
   , fade_animator_(LOCK_FADE_DURATION)
   , blank_window_animator_(IDLE_FADE_DURATION)
@@ -106,7 +104,6 @@ Controller::Controller(DBusManager::Ptr const& dbus_manager,
 
       shields_.clear();
 
-      upstart_wrapper_->Emit("desktop-unlock");
       indicators_.reset();
     }
     else if (!prompt_activation_)
@@ -387,7 +384,6 @@ void Controller::OnScreenSaverActivationRequest(bool activate)
 void Controller::LockScreen()
 {
   indicators_ = std::make_shared<indicator::LockScreenDBusIndicators>();
-  upstart_wrapper_->Emit("desktop-lock");
 
   ShowShields();
 }
diff --git a/lockscreen/LockScreenController.h b/lockscreen/LockScreenController.h
index 434b95c..4faa97b 100644
--- a/lockscreen/LockScreenController.h
+++ b/lockscreen/LockScreenController.h
@@ -27,7 +27,6 @@
 #include "LockScreenShieldFactory.h"
 #include "ScreenSaverDBusManager.h"
 #include "unity-shared/BackgroundEffectHelper.h"
-#include "unity-shared/UpstartWrapper.h"
 
 namespace unity
 {
@@ -38,7 +37,6 @@ class Controller : public sigc::trackable
 {
 public:
   Controller(DBusManager::Ptr const&, session::Manager::Ptr const&,
-             UpstartWrapper::Ptr const& upstart_wrapper = std::make_shared<UpstartWrapper>(),
              ShieldFactoryInterface::Ptr const& shield_factory = std::make_shared<ShieldFactory>(),
              bool test_mode = false);
 
@@ -74,7 +72,6 @@ private:
   DBusManager::Ptr dbus_manager_;
   session::Manager::Ptr session_manager_;
   indicator::Indicators::Ptr indicators_;
-  UpstartWrapper::Ptr upstart_wrapper_;
   ShieldFactoryInterface::Ptr shield_factory_;
 
   nux::animation::AnimateValue<double> fade_animator_;
@@ -98,4 +95,4 @@ private:
 }
 }
 
-#endif
\ No newline at end of file
+#endif
diff --git a/services/CMakeLists.txt b/services/CMakeLists.txt
index 4514ff1..f53d053 100644
--- a/services/CMakeLists.txt
+++ b/services/CMakeLists.txt
@@ -12,9 +12,6 @@ set(UNITY_PANEL_SERVICE_DEPS
     indicator3-0.4>=12.10.2
     x11
     libido3-0.1>=13.0.0
-    libupstart
-    libnih
-    libnih-dbus
     dbus-1
 )
 
@@ -55,9 +52,3 @@ link_directories(${LIB_PATHS})
 add_executable(unity-panel-service ${PANEL_SOURCES})
 target_link_libraries(unity-panel-service ${LIBS})
 install(TARGETS unity-panel-service DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/unity/)
-
-configure_file(unity-panel-service.conf.in ${CMAKE_CURRENT_BINARY_DIR}/unity-panel-service.conf)
-install(FILES ${CMAKE_CURRENT_BINARY_DIR}/unity-panel-service.conf DESTINATION ${CMAKE_INSTALL_PREFIX}/share/upstart/sessions)
-
-configure_file(unity-panel-service-lockscreen.conf.in ${CMAKE_CURRENT_BINARY_DIR}/unity-panel-service-lockscreen.conf)
-install(FILES ${CMAKE_CURRENT_BINARY_DIR}/unity-panel-service-lockscreen.conf DESTINATION ${CMAKE_INSTALL_PREFIX}/share/upstart/sessions)
diff --git a/services/panel-service.c b/services/panel-service.c
index 5c7102a..4ac2792 100644
--- a/services/panel-service.c
+++ b/services/panel-service.c
@@ -33,10 +33,6 @@
 #include <X11/XKBlib.h>
 #include <X11/extensions/XInput2.h>
 
-#include <upstart.h>
-#include <nih/alloc.h>
-#include <nih/error.h>
-
 G_DEFINE_TYPE (PanelService, panel_service, G_TYPE_OBJECT);
 
 #define GET_PRIVATE(o) \
@@ -83,8 +79,6 @@ struct _PanelServicePrivate
 
   IndicatorObjectEntry *pressed_entry;
   gboolean use_event;
-
-  NihDBusProxy * upstart;
 };
 
 /* Globals */
@@ -150,22 +144,6 @@ panel_service_class_dispose (GObject *self)
   g_idle_remove_by_data (self);
   gdk_window_remove_filter (NULL, (GdkFilterFunc)event_filter, self);
 
-  if (priv->upstart != NULL && !lockscreen_mode)
-    {
-      int event_sent = 0;
-      event_sent = upstart_emit_event_sync (NULL, priv->upstart,
-                                            "indicator-services-end", NULL, 0);
-      if (event_sent != 0)
-        {
-          NihError * err = nih_error_get();
-          g_warning("Unable to signal for indicator services to stop: %s", err->message);
-          nih_free(err);
-        }
-
-      nih_unref (priv->upstart, NULL);
-      priv->upstart = NULL;
-    }
-
   if (GTK_IS_WIDGET (priv->last_menu) &&
       gtk_widget_get_realized (GTK_WIDGET (priv->last_menu)))
     {
@@ -617,24 +595,6 @@ initial_resync (PanelService *self)
   return FALSE;
 }
 
-static gboolean
-ready_signal (PanelService *self)
-{
-  if (PANEL_IS_SERVICE (self) && self->priv->upstart != NULL && !lockscreen_mode)
-    {
-      int event_sent = 0;
-      event_sent = upstart_emit_event_sync (NULL, self->priv->upstart, "indicator-services-start", NULL, 0);
-      if (event_sent != 0)
-        {
-          NihError * err = nih_error_get();
-          g_warning("Unable to signal for indicator services to start: %s", err->message);
-          nih_free(err);
-        }
-    }
-
-  return FALSE;
-}
-
 static void
 update_keybinding (GSettings *settings, const gchar *key, gpointer data)
 {
@@ -746,29 +706,6 @@ panel_service_init (PanelService *self)
   update_keybinding (priv->gsettings, MENU_TOGGLE_KEYBINDING_KEY, &priv->menu_toggle);
   update_keybinding (priv->gsettings, SHOW_DASH_KEY, &priv->show_dash);
   update_keybinding (priv->gsettings, SHOW_HUD_KEY, &priv->show_hud);
-
-  const gchar *upstartsession = g_getenv ("UPSTART_SESSION");
-  if (upstartsession != NULL && !lockscreen_mode)
-    {
-      DBusConnection *conn = dbus_connection_open (upstartsession, NULL);
-      if (conn != NULL)
-        {
-          priv->upstart = nih_dbus_proxy_new (NULL, conn,
-                                              NULL,
-                                              DBUS_PATH_UPSTART,
-                                              NULL, NULL);
-          if (priv->upstart == NULL)
-            {
-              NihError * err = nih_error_get();
-              g_warning("Unable to get Upstart proxy: %s", err->message);
-              nih_free(err);
-            }
-          dbus_connection_unref (conn);
-        }
-    }
-
-  if (priv->upstart != NULL)
-    priv->upstart->auto_start = FALSE;
 }
 
 static gboolean
@@ -915,7 +852,6 @@ initial_load_default_or_custom_indicators (PanelService *self, GList *indicators
   suppress_signals = FALSE;
 
   g_idle_add ((GSourceFunc)initial_resync, self);
-  g_idle_add ((GSourceFunc)ready_signal, self);
 }
 
 PanelService *
diff --git a/services/unity-panel-service-lockscreen.conf.in b/services/unity-panel-service-lockscreen.conf.in
deleted file mode 100644
index b6a3cb6..0000000
--- a/services/unity-panel-service-lockscreen.conf.in
+++ /dev/null
@@ -1,8 +0,0 @@
-description "Backing Service for the Unity Panel"
-author "Andrea Azzarone <andrea.azzarone@canonical.com>"
-
-start on desktop-lock
-stop on desktop-unlock
-
-respawn
-exec ${CMAKE_INSTALL_PREFIX}/lib/unity/unity-panel-service --lockscreen-mode
\ No newline at end of file
diff --git a/services/unity-panel-service.conf.in b/services/unity-panel-service.conf.in
deleted file mode 100644
index 742e39b..0000000
--- a/services/unity-panel-service.conf.in
+++ /dev/null
@@ -1,18 +0,0 @@
-description "Backing Service for the Unity Panel"
-author "Ted Gould <ted@ubuntu.com>"
-
-# These should be used when we have Unity full under upstart, but while
-# we have the pre-start work around for gnome-session starting it we're
-# going to comment them out.
-#
-# start on started unity7
-# stop on stopped unity7
-
-start on desktop-start DESKTOP_SESSION=ubuntu
-stop on desktop-end
-
-emits indicator-services-start
-emits indicator-services-end
-
-respawn
-exec ${CMAKE_INSTALL_PREFIX}/lib/unity/unity-panel-service
diff --git a/tools/unity.cmake b/tools/unity.cmake
index c761551..dd5b75e 100755
--- a/tools/unity.cmake
+++ b/tools/unity.cmake
@@ -113,9 +113,8 @@ def run_unity (verbose, debug, advanced_debug, compiz_path, compiz_args, log_fil
 
     try:
         debug_mode = 2 if advanced_debug else 1 if debug else 0
-        subprocess.call(["stop", "unity-panel-service"])
+        subprocess.call(["killall", "unity-panel-service"])
         unity_instance = process_and_start_unity (verbose, debug_mode, compiz_path, compiz_args, log_file)
-        subprocess.call(["start", "unity-panel-service"])
         unity_instance.wait()
     except KeyboardInterrupt, e:
         try:
diff --git a/unity-shared/CMakeLists.txt b/unity-shared/CMakeLists.txt
index b56c779..1e6233a 100644
--- a/unity-shared/CMakeLists.txt
+++ b/unity-shared/CMakeLists.txt
@@ -67,7 +67,6 @@ set (UNITY_SHARED_SOURCES
      UnitySettings.cpp
      UnityWindowStyle.cpp
      UnityWindowView.cpp
-     UpstartWrapper.cpp
      UserThumbnailProvider.cpp
      VScrollBarOverlayWindow.cpp
      WindowButtons.cpp
diff --git a/unity-shared/UpstartWrapper.cpp b/unity-shared/UpstartWrapper.cpp
deleted file mode 100644
index eda8239..0000000
--- a/unity-shared/UpstartWrapper.cpp
+++ /dev/null
@@ -1,74 +0,0 @@
-// -*- Mode: C++; indent-tabs-mode: nil; tab-width: 2 -*-
-/*
-* Copyright (C) 2014 Canonical Ltd
-*
-* This program is free software: you can redistribute it and/or modify
-* it under the terms of the GNU General Public License version 3 as
-* published by the Free Software Foundation.
-*
-* This program is distributed in the hope that it will be useful,
-* but WITHOUT ANY WARRANTY; without even the implied warranty of
-* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-* GNU General Public License for more details.
-*
-* You should have received a copy of the GNU General Public License
-* along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*
-* Authored by: Andrea Azzarone <andrea.azzarone@canonical.com>
-*/
-
-#include "UpstartWrapper.h"
-
-#include <UnityCore/GLibDBusProxy.h>
-
-namespace unity
-{
-
-//
-// Start private implementation
-//
-
-class UpstartWrapper::Impl
-{
-public:
-  Impl(bool test_mode = false);
-
-  void Emit(std::string const& name);
-
-private:
-  glib::DBusProxy::Ptr upstart_proxy_;
-};
-
-UpstartWrapper::Impl::Impl(bool test_mode)
-{
-  upstart_proxy_ = std::make_shared<unity::glib::DBusProxy>(test_mode ?  "com.canonical.Unity.Test.Upstart" : "com.ubuntu.Upstart",
-                                                            "/com/ubuntu/Upstart", 
-                                                            "com.ubuntu.Upstart0_6");
-}
-
-void UpstartWrapper::Impl::Emit(std::string const& name)
-{
-  upstart_proxy_->Call("EmitEvent", g_variant_new("(sasb)", name.c_str(), nullptr, 0));
-}
-
-//
-// End private implementation
-//
-
-UpstartWrapper::UpstartWrapper()
-  : pimpl_(new Impl)
-{}
-
-UpstartWrapper::UpstartWrapper(UpstartWrapper::TestMode const& tm)
-  : pimpl_(new Impl(true))
-{}
-
-UpstartWrapper::~UpstartWrapper()
-{}
-
-void UpstartWrapper::Emit(std::string const& name)
-{
-  pimpl_->Emit(name);
-}
-
-}
diff --git a/unity-shared/UpstartWrapper.h b/unity-shared/UpstartWrapper.h
deleted file mode 100644
index 3be88d9..0000000
--- a/unity-shared/UpstartWrapper.h
+++ /dev/null
@@ -1,53 +0,0 @@
-// -*- Mode: C++; indent-tabs-mode: nil; tab-width: 2 -*-
-/*
-* Copyright (C) 2014 Canonical Ltd
-*
-* This program is free software: you can redistribute it and/or modify
-* it under the terms of the GNU General Public License version 3 as
-* published by the Free Software Foundation.
-*
-* This program is distributed in the hope that it will be useful,
-* but WITHOUT ANY WARRANTY; without even the implied warranty of
-* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-* GNU General Public License for more details.
-*
-* You should have received a copy of the GNU General Public License
-* along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*
-* Authored by: Andrea Azzarone <andrea.azzarone@canonical.com>
-*/
-
-#ifndef UNITY_UPSTART_WRAPPER
-#define UNITY_UPSTART_WRAPPER
-
-#include <memory>
-
-namespace unity
-{
-
-class UpstartWrapper
-{
-public:
-  typedef std::shared_ptr<UpstartWrapper> Ptr;
-
-  UpstartWrapper();
-  ~UpstartWrapper();
-
-  void Emit(std::string const& name);
-
-protected:
-  struct TestMode {};
-  UpstartWrapper(TestMode const&);
-
-private:
-  // Noncopyable
-  UpstartWrapper(UpstartWrapper const&) = delete;
-  UpstartWrapper& operator=(UpstartWrapper const&) = delete;
-
-  class Impl;
-  std::unique_ptr<Impl> pimpl_;
-};
-
-}
-
-#endif
-- 
1.9.2

