From a37eb00ab09fea98e94cb7d941b02e194a5596b4 Mon Sep 17 00:00:00 2001
From: Xiao-Long Chen <chenxiaolong@cxl.epac.to>
Date: Sat, 5 Apr 2014 19:52:42 -0400
Subject: [PATCH 10/19] Remove User Accounts panel

---
 configure.ac                                       |   61 +-
 man/unity-control-center.xml                       |   13 -
 panels/Makefile.am                                 |    3 +-
 panels/user-accounts/Makefile.am                   |  128 --
 ...canonical.controlcenter.user-accounts.policy.in |   21 -
 panels/user-accounts/data/Makefile.am              |   18 -
 panels/user-accounts/data/account-dialog.ui        |  607 --------
 panels/user-accounts/data/account-fingerprint.ui   |  278 ----
 panels/user-accounts/data/history-dialog.ui        |  175 ---
 .../user-accounts/data/icons/left-index-finger.png |  Bin 1515 -> 0 bytes
 .../user-accounts/data/icons/left-index-finger.svg |  177 ---
 .../data/icons/left-little-finger.png              |  Bin 1500 -> 0 bytes
 .../data/icons/left-little-finger.svg              |  180 ---
 .../data/icons/left-middle-finger.png              |  Bin 1483 -> 0 bytes
 .../data/icons/left-middle-finger.svg              |  180 ---
 .../user-accounts/data/icons/left-ring-finger.png  |  Bin 1512 -> 0 bytes
 .../user-accounts/data/icons/left-ring-finger.svg  |  180 ---
 panels/user-accounts/data/icons/left-thumb.png     |  Bin 1512 -> 0 bytes
 panels/user-accounts/data/icons/left-thumb.svg     |  180 ---
 panels/user-accounts/data/icons/print_error.png    |  Bin 4160 -> 0 bytes
 panels/user-accounts/data/icons/print_error.svg    |  525 -------
 panels/user-accounts/data/icons/print_ok.png       |  Bin 3677 -> 0 bytes
 panels/user-accounts/data/icons/print_ok.svg       |  310 ----
 .../data/icons/right-index-finger.png              |  Bin 1506 -> 0 bytes
 .../data/icons/right-index-finger.svg              |  179 ---
 .../data/icons/right-little-finger.png             |  Bin 1479 -> 0 bytes
 .../data/icons/right-little-finger.svg             |  182 ---
 .../data/icons/right-middle-finger.png             |  Bin 1468 -> 0 bytes
 .../data/icons/right-middle-finger.svg             |  182 ---
 .../user-accounts/data/icons/right-ring-finger.png |  Bin 1506 -> 0 bytes
 .../user-accounts/data/icons/right-ring-finger.svg |  182 ---
 panels/user-accounts/data/icons/right-thumb.png    |  Bin 1486 -> 0 bytes
 panels/user-accounts/data/icons/right-thumb.svg    |  182 ---
 .../user-accounts/data/org.freedesktop.realmd.xml  |  666 ---------
 panels/user-accounts/data/password-dialog.ui       |  529 -------
 panels/user-accounts/data/photo-dialog.ui          |  305 ----
 .../data/unity-user-accounts-panel.desktop.in.in   |   13 -
 panels/user-accounts/data/user-accounts-dialog.ui  |  568 -------
 panels/user-accounts/fingerprint-strings.h         |  111 --
 panels/user-accounts/frob-account-dialog.c         |   61 -
 panels/user-accounts/pw-utils.c                    |  127 --
 panels/user-accounts/pw-utils.h                    |   31 -
 panels/user-accounts/run-passwd.c                  |  770 ----------
 panels/user-accounts/run-passwd.h                  |   58 -
 panels/user-accounts/um-account-dialog.c           | 1281 ----------------
 panels/user-accounts/um-account-dialog.h           |   49 -
 panels/user-accounts/um-account-type.c             |   41 -
 panels/user-accounts/um-account-type.h             |   36 -
 panels/user-accounts/um-crop-area.c                |  818 ----------
 panels/user-accounts/um-crop-area.h                |   65 -
 panels/user-accounts/um-editable-button.c          |  429 ------
 panels/user-accounts/um-editable-button.h          |   73 -
 panels/user-accounts/um-editable-combo.c           |  464 ------
 panels/user-accounts/um-editable-combo.h           |   77 -
 panels/user-accounts/um-fingerprint-dialog.c       |  774 ----------
 panels/user-accounts/um-fingerprint-dialog.h       |   28 -
 panels/user-accounts/um-history-dialog.c           |  375 -----
 panels/user-accounts/um-history-dialog.h           |   41 -
 panels/user-accounts/um-password-dialog.c          |  822 ----------
 panels/user-accounts/um-password-dialog.h          |   43 -
 panels/user-accounts/um-photo-dialog.c             |  716 ---------
 panels/user-accounts/um-photo-dialog.h             |   39 -
 panels/user-accounts/um-realm-manager.c            |  904 -----------
 panels/user-accounts/um-realm-manager.h            |  107 --
 panels/user-accounts/um-user-module.c              |   48 -
 panels/user-accounts/um-user-panel.c               | 1565 --------------------
 panels/user-accounts/um-user-panel.h               |   57 -
 panels/user-accounts/um-utils.c                    | 1100 --------------
 panels/user-accounts/um-utils.h                    |   90 --
 panels/user-accounts/user-accounts.gresource.xml   |   23 -
 po/POTFILES.in                                     |   19 -
 po/POTFILES.skip                                   |    2 -
 72 files changed, 7 insertions(+), 17261 deletions(-)
 delete mode 100644 panels/user-accounts/Makefile.am
 delete mode 100644 panels/user-accounts/com.canonical.controlcenter.user-accounts.policy.in
 delete mode 100644 panels/user-accounts/data/Makefile.am
 delete mode 100644 panels/user-accounts/data/account-dialog.ui
 delete mode 100644 panels/user-accounts/data/account-fingerprint.ui
 delete mode 100644 panels/user-accounts/data/history-dialog.ui
 delete mode 100644 panels/user-accounts/data/icons/left-index-finger.png
 delete mode 100644 panels/user-accounts/data/icons/left-index-finger.svg
 delete mode 100644 panels/user-accounts/data/icons/left-little-finger.png
 delete mode 100644 panels/user-accounts/data/icons/left-little-finger.svg
 delete mode 100644 panels/user-accounts/data/icons/left-middle-finger.png
 delete mode 100644 panels/user-accounts/data/icons/left-middle-finger.svg
 delete mode 100644 panels/user-accounts/data/icons/left-ring-finger.png
 delete mode 100644 panels/user-accounts/data/icons/left-ring-finger.svg
 delete mode 100644 panels/user-accounts/data/icons/left-thumb.png
 delete mode 100644 panels/user-accounts/data/icons/left-thumb.svg
 delete mode 100644 panels/user-accounts/data/icons/print_error.png
 delete mode 100644 panels/user-accounts/data/icons/print_error.svg
 delete mode 100644 panels/user-accounts/data/icons/print_ok.png
 delete mode 100644 panels/user-accounts/data/icons/print_ok.svg
 delete mode 100644 panels/user-accounts/data/icons/right-index-finger.png
 delete mode 100644 panels/user-accounts/data/icons/right-index-finger.svg
 delete mode 100644 panels/user-accounts/data/icons/right-little-finger.png
 delete mode 100644 panels/user-accounts/data/icons/right-little-finger.svg
 delete mode 100644 panels/user-accounts/data/icons/right-middle-finger.png
 delete mode 100644 panels/user-accounts/data/icons/right-middle-finger.svg
 delete mode 100644 panels/user-accounts/data/icons/right-ring-finger.png
 delete mode 100644 panels/user-accounts/data/icons/right-ring-finger.svg
 delete mode 100644 panels/user-accounts/data/icons/right-thumb.png
 delete mode 100644 panels/user-accounts/data/icons/right-thumb.svg
 delete mode 100644 panels/user-accounts/data/org.freedesktop.realmd.xml
 delete mode 100644 panels/user-accounts/data/password-dialog.ui
 delete mode 100644 panels/user-accounts/data/photo-dialog.ui
 delete mode 100644 panels/user-accounts/data/unity-user-accounts-panel.desktop.in.in
 delete mode 100644 panels/user-accounts/data/user-accounts-dialog.ui
 delete mode 100644 panels/user-accounts/fingerprint-strings.h
 delete mode 100644 panels/user-accounts/frob-account-dialog.c
 delete mode 100644 panels/user-accounts/pw-utils.c
 delete mode 100644 panels/user-accounts/pw-utils.h
 delete mode 100644 panels/user-accounts/run-passwd.c
 delete mode 100644 panels/user-accounts/run-passwd.h
 delete mode 100644 panels/user-accounts/um-account-dialog.c
 delete mode 100644 panels/user-accounts/um-account-dialog.h
 delete mode 100644 panels/user-accounts/um-account-type.c
 delete mode 100644 panels/user-accounts/um-account-type.h
 delete mode 100644 panels/user-accounts/um-crop-area.c
 delete mode 100644 panels/user-accounts/um-crop-area.h
 delete mode 100644 panels/user-accounts/um-editable-button.c
 delete mode 100644 panels/user-accounts/um-editable-button.h
 delete mode 100644 panels/user-accounts/um-editable-combo.c
 delete mode 100644 panels/user-accounts/um-editable-combo.h
 delete mode 100644 panels/user-accounts/um-fingerprint-dialog.c
 delete mode 100644 panels/user-accounts/um-fingerprint-dialog.h
 delete mode 100644 panels/user-accounts/um-history-dialog.c
 delete mode 100644 panels/user-accounts/um-history-dialog.h
 delete mode 100644 panels/user-accounts/um-password-dialog.c
 delete mode 100644 panels/user-accounts/um-password-dialog.h
 delete mode 100644 panels/user-accounts/um-photo-dialog.c
 delete mode 100644 panels/user-accounts/um-photo-dialog.h
 delete mode 100644 panels/user-accounts/um-realm-manager.c
 delete mode 100644 panels/user-accounts/um-realm-manager.h
 delete mode 100644 panels/user-accounts/um-user-module.c
 delete mode 100644 panels/user-accounts/um-user-panel.c
 delete mode 100644 panels/user-accounts/um-user-panel.h
 delete mode 100644 panels/user-accounts/um-utils.c
 delete mode 100644 panels/user-accounts/um-utils.h
 delete mode 100644 panels/user-accounts/user-accounts.gresource.xml

diff --git a/configure.ac b/configure.ac
index 1160053..6856bb0 100644
--- a/configure.ac
+++ b/configure.ac
@@ -86,6 +86,12 @@ else
         IBUS_MODULE=
 fi
 
+# This is a hard-dependency for the region and user-accounts panels
+PKG_CHECK_MODULES(ISOCODES, iso-codes)
+
+AC_DEFINE_UNQUOTED([ISO_CODES_PREFIX],["`$PKG_CONFIG --variable=prefix iso-codes`"],[ISO codes prefix])
+ISO_CODES=iso-codes
+
 dnl ==============================================
 dnl Check that we meet the  dependencies
 dnl ==============================================
@@ -130,59 +136,12 @@ PKG_CHECK_MODULES(SOUND_PANEL, $COMMON_MODULES libxml-2.0
                   libpulse >= $PA_REQUIRED_VERSION
                   libpulse-mainloop-glib >= $PA_REQUIRED_VERSION)
 PKG_CHECK_MODULES(UNIVERSAL_ACCESS_PANEL, $COMMON_MODULES)
-PKG_CHECK_MODULES(USER_ACCOUNTS_PANEL, $COMMON_MODULES
-                  polkit-gobject-1 >= $POLKIT_REQUIRED_VERSION
-                  gnome-desktop-3.0
-                  gdk-pixbuf-2.0 >= $GDKPIXBUF_REQUIRED_VERSION
-                  pwquality
-                  accountsservice >= $ACCOUNTSSERVICE_REQUIRED_VERSION)
 
 AM_PROG_VALAC([0.20.0])
 
 GDESKTOP_PREFIX=`$PKG_CONFIG --variable prefix gsettings-desktop-schemas`
 AC_SUBST(GDESKTOP_PREFIX)
 
-# Optional dependency for the user accounts panel
-AC_ARG_WITH([cheese],
-            AS_HELP_STRING([--with-cheese], [enable cheese webcam support]),,
-            with_cheese=auto)
-
-if test x"$with_cheese" != x"no" ; then
-   PKG_CHECK_MODULES(CHEESE, gstreamer-1.0 cheese-gtk >= 3.5.91 cheese clutter-gtk-1.0, [have_cheese=yes], [have_cheese=no])
-   if test x${have_cheese} = xyes; then
-     AC_DEFINE(HAVE_CHEESE, 1, [Define to 1 to enable cheese webcam support])
-   fi
-   if test x${with_cheese} = xyes && test x${have_cheese} = xno; then
-     AC_MSG_ERROR([Cheese configured but not found])
-   fi
-else
-   have_cheese=no
-fi
-AM_CONDITIONAL(BUILD_CHEESE, test x${have_cheese} = xyes)
-
-# This is a hard-dependency for the region and user-accounts panels
-PKG_CHECK_MODULES(ISOCODES, iso-codes)
-
-AC_DEFINE_UNQUOTED([ISO_CODES_PREFIX],["`$PKG_CONFIG --variable=prefix iso-codes`"],[ISO codes prefix])
-ISO_CODES=iso-codes
-
-# Kerberos kerberos support
-AC_PATH_PROG(KRB5_CONFIG, krb5-config, no)
-if test "$KRB5_CONFIG" = "no"; then
-  AC_MSG_ERROR([krb5-config executable not found in your path - should be installed with the kerberos libraries])
-fi
-
-AC_MSG_CHECKING(for krb5 libraries and flags)
-KRB5_CFLAGS="`$KRB5_CONFIG --cflags`"
-KRB5_LIBS="`$KRB5_CONFIG --libs`"
-AC_MSG_RESULT($KRB5_CFLAGS $KRB5_LIBS)
-
-AC_SUBST(KRB5_CFLAGS)
-AC_SUBST(KRB5_LIBS)
-
-USER_ACCOUNTS_PANEL_CFLAGS="$USER_ACCOUNTS_PANEL_CFLAGS $KRB5_CFLAGS"
-USER_ACCOUNTS_PANEL_LIBS="$USER_ACCOUNTS_PANEL_LIBS $KRB5_LIBS"
-
 dnl ==============================================
 dnl End: Check that we meet the  dependencies
 dnl ==============================================
@@ -350,9 +309,6 @@ panels/info/Makefile
 panels/info/unity-info-panel.desktop.in
 panels/universal-access/Makefile
 panels/universal-access/unity-universal-access-panel.desktop.in
-panels/user-accounts/Makefile
-panels/user-accounts/data/Makefile
-panels/user-accounts/data/unity-user-accounts-panel.desktop.in
 po/Makefile.in
 shell/Makefile
 shell/unity-control-center.desktop.in
@@ -360,11 +316,6 @@ man/Makefile
 ])
 
 AC_MSG_NOTICE([unity-control-center was configured with the following options:])
-if test "x$have_cheese" = "xyes"; then
-	AC_MSG_NOTICE([** Cheese (Users panel webcam support)])
-else
-	AC_MSG_NOTICE([   Users panel webcam support disabled])
-fi
 if test "x$with_libsocialweb" = "xyes"; then
 	AC_MSG_NOTICE([** libsocialweb (Appearance panel Flickr support)])
 else
diff --git a/man/unity-control-center.xml b/man/unity-control-center.xml
index f3c6247..2ef7839 100644
--- a/man/unity-control-center.xml
+++ b/man/unity-control-center.xml
@@ -145,19 +145,6 @@
                                 keyboard and AccessX options.</para></listitem>
                         </varlistentry>
 
-                        <varlistentry>
-                                <term><option>user-accounts</option></term>
-
-                                <listitem><para>The user-accounts panel
-                                shows all user accounts that exist on the
-                                computer and allows to change them in some
-                                ways, such as changing the user name, password
-                                or permissions. It also allows to create
-                                or remove accounts.</para>
-                                <para>Some operations in this panel require
-                                privileges.</para></listitem>
-                        </varlistentry>
-
                 </variablelist>
 
         </refsect1>
diff --git a/panels/Makefile.am b/panels/Makefile.am
index 32555e4..64b9336 100644
--- a/panels/Makefile.am
+++ b/panels/Makefile.am
@@ -6,7 +6,6 @@ SUBDIRS= \
 	mouse \
 	info \
 	sound \
-	universal-access \
-	user-accounts
+	universal-access
 
 -include $(top_srcdir)/git.mk
diff --git a/panels/user-accounts/Makefile.am b/panels/user-accounts/Makefile.am
deleted file mode 100644
index 7bc2ecb..0000000
--- a/panels/user-accounts/Makefile.am
+++ /dev/null
@@ -1,128 +0,0 @@
-SUBDIRS = data
-
-# This is used in PANEL_CFLAGS
-cappletname = user-accounts
-NULL =
-
-ccpanelsdir = $(PANELS_DIR)
-ccpanels_LTLIBRARIES = libuser-accounts.la
-
-AM_CPPFLAGS =						\
-	-DGNOMELOCALEDIR=\""$(datadir)/locale"\"        \
-	-DUM_PIXMAP_DIR=\""$(pkgdatadir)/pixmaps"\"	\
-	-DHAVE_LIBPWQUALITY				\
-	-I$(srcdir)/../common/				\
-	-I$(srcdir)/../../shell/			\
-	$(PANEL_CFLAGS)					\
-	$(USER_ACCOUNTS_PANEL_CFLAGS)
-
-if BUILD_CHEESE
-AM_CPPFLAGS += $(CHEESE_CFLAGS)
-endif
-
-BUILT_SOURCES = \
-	um-realm-generated.c \
-	um-realm-generated.h \
-	um-resources.c \
-	um-resources.h
-
-libuser_accounts_la_SOURCES =		\
-	um-account-type.h		\
-	um-account-type.c 		\
-	um-account-dialog.h		\
-	um-account-dialog.c		\
-	um-password-dialog.h		\
-	um-password-dialog.c		\
-	pw-utils.h			\
-	pw-utils.c			\
-	um-photo-dialog.h		\
-	um-photo-dialog.c		\
-	um-crop-area.h			\
-	um-crop-area.c			\
-	um-fingerprint-dialog.h		\
-	um-fingerprint-dialog.c		\
-	um-utils.h			\
-	um-utils.c			\
-	fingerprint-strings.h		\
-	run-passwd.h			\
-	run-passwd.c			\
-	um-editable-button.h		\
-	um-editable-button.c		\
-	um-editable-combo.h		\
-	um-editable-combo.c		\
-	um-user-panel.h 		\
-	um-user-panel.c			\
-	um-user-module.c		\
-	um-realm-manager.c		\
-	um-realm-manager.h		\
-	um-history-dialog.h		\
-	um-history-dialog.c		\
-	$(BUILT_SOURCES)
-
-libuser_accounts_la_LIBADD = 		\
-	$(PANEL_LIBS)			\
-	$(USER_ACCOUNTS_PANEL_LIBS)	\
-	$(top_builddir)/panels/common/liblanguage.la \
-	-lpwquality			\
-	-lcrypt				\
-	-lm
-
-if BUILD_CHEESE
-libuser_accounts_la_LIBADD += $(CHEESE_LIBS)
-endif
-
-libuser_accounts_la_LDFLAGS = $(PANEL_LDFLAGS)
-
-um-realm-generated.c: $(srcdir)/data/org.freedesktop.realmd.xml
-	$(AM_V_GEN) gdbus-codegen --interface-prefix org.freedesktop.realmd. \
-		--generate-c-code um-realm-generated --c-namespace UmRealm \
-		--annotate "org.freedesktop.realmd.Realm" org.gtk.GDBus.C.Name Common \
-		--c-generate-object-manager $<
-um-realm-generated.h: um-realm-generated.c
-
-resource_files = $(shell glib-compile-resources --sourcedir=$(srcdir) --generate-dependencies $(srcdir)/user-accounts.gresource.xml)
-um-resources.c: user-accounts.gresource.xml $(resource_files)
-	$(AM_V_GEN) glib-compile-resources --target=$@ --sourcedir=$(srcdir) --generate-source --c-name um $<
-um-resources.h: user-accounts.gresource.xml $(resource_files)
-	$(AM_V_GEN) glib-compile-resources --target=$@ --sourcedir=$(srcdir) --generate-header --c-name um $<
-
-noinst_PROGRAMS = frob-account-dialog
-
-frob_account_dialog_SOURCES = \
-	frob-account-dialog.c \
-	um-account-dialog.h \
-	um-account-dialog.c \
-	um-realm-manager.c \
-	um-realm-manager.h \
-	um-utils.h \
-	um-utils.c \
-	$(BUILT_SOURCES)
-
-frob_account_dialog_LDADD = \
-	$(libuser_accounts_la_LIBADD)
-
-frob_account_dialog_CFLAGS = \
-	$(AM_CFLAGS)
-
-polkitdir = $(datadir)/polkit-1/actions
-polkit_in_files = com.canonical.controlcenter.user-accounts.policy.in
-
-@INTLTOOL_POLICY_RULE@
-polkit_DATA = $(polkit_in_files:.policy.in=.policy)
-
-EXTRA_DIST =				\
-	$(polkit_in_files)		\
-	$(resource_files)		\
-	user-accounts.gresource.xml	\
-	$(NULL)
-
-CLEANFILES =				\
-	$(BUILT_SOURCES)		\
-	$(polkit_DATA)			\
-	$(NULL)
-
-MAINTAINERCLEANFILES =                  \
-        *~                              \
-        Makefile.in
-
--include $(top_srcdir)/git.mk
diff --git a/panels/user-accounts/com.canonical.controlcenter.user-accounts.policy.in b/panels/user-accounts/com.canonical.controlcenter.user-accounts.policy.in
deleted file mode 100644
index 3fecd4b..0000000
--- a/panels/user-accounts/com.canonical.controlcenter.user-accounts.policy.in
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE policyconfig PUBLIC
- "-//freedesktop//DTD PolicyKit Policy Configuration 1.0//EN"
- "http://www.freedesktop.org/standards/PolicyKit/1.0/policyconfig.dtd">
-
-<policyconfig>
-  <vendor>The GNOME Project</vendor>
-  <vendor_url>http://www.gnome.org/</vendor_url>
-
-  <action id="com.canonical.controlcenter.user-accounts.administration">
-    <_description>Manage user accounts</_description>
-    <_message>Authentication is required to change user data</_message>
-    <defaults>
-      <allow_any>no</allow_any>
-      <allow_inactive>no</allow_inactive>
-      <allow_active>auth_admin_keep</allow_active>
-    </defaults>
-    <annotate key="org.freedesktop.policykit.imply">org.freedesktop.accounts.user-administration org.freedesktop.realmd.configure-realm org.freedesktop.realmd.login-policy</annotate>
-  </action>
-
-</policyconfig>
diff --git a/panels/user-accounts/data/Makefile.am b/panels/user-accounts/data/Makefile.am
deleted file mode 100644
index 8266081..0000000
--- a/panels/user-accounts/data/Makefile.am
+++ /dev/null
@@ -1,18 +0,0 @@
-@INTLTOOL_DESKTOP_RULE@
-
-desktopdir = $(datadir)/applications
-Desktop_in_files = unity-user-accounts-panel.desktop.in
-desktop_DATA = $(Desktop_in_files:.desktop.in=.desktop)
-
-EXTRA_DIST = 					\
-	unity-user-accounts-panel.desktop.in.in	\
-	org.freedesktop.realmd.xml
-
-CLEANFILES =					\
-	unity-user-accounts-panel.desktop	\
-	$(NULL)
-
-DISTCLEANFILES =				\
-	$(NULL)
-
--include $(top_srcdir)/git.mk
diff --git a/panels/user-accounts/data/account-dialog.ui b/panels/user-accounts/data/account-dialog.ui
deleted file mode 100644
index c51daf5..0000000
--- a/panels/user-accounts/data/account-dialog.ui
+++ /dev/null
@@ -1,607 +0,0 @@
-<?xml version="1.0"?>
-<interface>
-  <!-- interface-requires gtk+ 3.8 -->
-  <!-- interface-naming-policy toplevel-contextual -->
-  <object class="GtkListStore" id="username-model">
-    <columns>
-      <!-- column-name gchararray -->
-      <column type="gchararray"/>
-    </columns>
-  </object>
-  <object class="GtkListStore" id="account-type-model">
-    <columns>
-      <!-- column-name gchararray -->
-      <column type="gchararray"/>
-      <!-- column-name gint -->
-      <column type="gint"/>
-    </columns>
-    <data>
-      <row>
-        <col id="0" translatable="yes" context="Account type">Standard</col>
-        <col id="1">0</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes" context="Account type">Administrator</col>
-        <col id="1">1</col>
-      </row>
-    </data>
-  </object>
-          <object class="GtkVBox" id="account-dialog">
-            <property name="visible">True</property>
-            <property name="border_width">6</property>
-            <property name="margin_bottom">6</property>
-            <property name="spacing">6</property>
-            <child>
-               <object class="GtkLabel" id="label2">
-                 <property name="visible">True</property>
-                 <property name="label" translatable="yes">Add account</property>
-                 <attributes>
-                   <attribute name="weight" value="bold"/>
-                   <attribute name="scale" value="1.200000"/>
-                 </attributes>
-               </object>
-            </child>
-            <child>
-              <object class="GtkAlignment" id="alignment1">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="xscale">0</property>
-                <property name="yscale">0</property>
-                <property name="bottom-padding">10</property>
-                <property name="top-padding">6</property>
-                <child>
-                  <object class="GtkBox" id="account-mode">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <style>
-                      <class name="linked"/>
-                    </style>
-                    <child>
-                      <object class="GtkToggleButton" id="local-button">
-                        <property name="label" translatable="yes">_Local Account</property>
-                        <property name="use_action_appearance">False</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                        <property name="use_action_appearance">False</property>
-                        <property name="focus_on_click">False</property>
-                        <property name="use_underline">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkToggleButton" id="enterprise-button">
-                        <property name="label" translatable="yes">_Enterprise Login</property>
-                        <property name="use_action_appearance">False</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                        <property name="use_action_appearance">False</property>
-                        <property name="focus_on_click">False</property>
-                        <property name="use_underline">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                      </packing>
-                    </child>
-                  </object>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkGrid" id="local-area">
-                <property name="visible">True</property>
-                <property name="hexpand">True</property>
-                <property name="column_spacing">10</property>
-                <property name="row_spacing">10</property>
-                <child>
-                  <object class="GtkComboBoxText" id="local-username">
-                    <property name="visible">True</property>
-                    <property name="has_entry">True</property>
-                    <property name="entry_text_column">0</property>
-                    <property name="model">username-model</property>
-                    <property name="hexpand">True</property>
-                    <child internal-child="entry">
-                      <object class="GtkEntry" id="userlocal-name">
-                        <property name="activates_default">True</property>
-                      </object>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="top_attach">3</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="label6">
-                    <property name="visible">True</property>
-                    <property name="xalign">1</property>
-                    <property name="label" translatable="yes">_Username</property>
-                    <property name="use_underline">True</property>
-                    <property name="mnemonic_widget">local-username</property>
-                    <style>
-                      <class name="dim-label-ucc"/>
-                    </style>
-                  </object>
-                  <packing>
-                    <property name="left_attach">0</property>
-                    <property name="top_attach">3</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkEntry" id="local-name">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="activates_default">True</property>
-                    <property name="hexpand">True</property>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="top_attach">2</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="label5">
-                    <property name="visible">True</property>
-                    <property name="xalign">1</property>
-                    <property name="label" translatable="yes">_Full name</property>
-                    <property name="use_underline">True</property>
-                    <property name="mnemonic_widget">local-name</property>
-                    <style>
-                      <class name="dim-label-ucc"/>
-                    </style>
-                  </object>
-                  <packing>
-                    <property name="left_attach">0</property>
-                    <property name="top_attach">2</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkComboBox" id="local-account-type">
-                    <property name="visible">True</property>
-                    <property name="model">account-type-model</property>
-                    <property name="hexpand">True</property>
-                    <child>
-                      <object class="GtkCellRendererText" id="account-type-cell"/>
-                      <attributes>
-                        <attribute name="text">0</attribute>
-                      </attributes>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="top_attach">0</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="label7">
-                    <property name="visible">True</property>
-                    <property name="xalign">1</property>
-                    <property name="label" translatable="yes">Account _Type</property>
-                    <property name="use_underline">True</property>
-                    <property name="mnemonic_widget">local-account-type</property>
-                    <style>
-                      <class name="dim-label-ucc"/>
-                    </style>
-                  </object>
-                  <packing>
-                    <property name="left_attach">0</property>
-                    <property name="top_attach">0</property>
-                  </packing>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">False</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkGrid" id="enterprise-area">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="hexpand">True</property>
-                <property name="row_spacing">10</property>
-                <property name="column_spacing">10</property>
-                <child>
-                  <object class="GtkLabel" id="label4">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="margin_top">5</property>
-                    <property name="xalign">1</property>
-                    <property name="yalign">0</property>
-                    <property name="label" translatable="yes">_Domain</property>
-                    <property name="use_underline">True</property>
-                    <property name="mnemonic_widget">enterprise-domain</property>
-                    <style>
-                      <class name="dim-label-ucc"/>
-                    </style>
-                  </object>
-                  <packing>
-                    <property name="left_attach">0</property>
-                    <property name="top_attach">0</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="label8">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="xalign">1</property>
-                    <property name="label" translatable="yes">_Login Name</property>
-                    <property name="use_underline">True</property>
-                    <property name="mnemonic_widget">enterprise-login</property>
-                    <style>
-                      <class name="dim-label-ucc"/>
-                    </style>
-                  </object>
-                  <packing>
-                    <property name="left_attach">0</property>
-                    <property name="top_attach">1</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="label9">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="xalign">1</property>
-                    <property name="label" translatable="yes">_Password</property>
-                    <property name="use_underline">True</property>
-                    <property name="mnemonic_widget">enterprise-password</property>
-                    <style>
-                      <class name="dim-label-ucc"/>
-                    </style>
-                  </object>
-                  <packing>
-                    <property name="left_attach">0</property>
-                    <property name="top_attach">2</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkBox" id="box1">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="orientation">vertical</property>
-                    <property name="spacing">3</property>
-                    <child>
-                      <object class="GtkComboBox" id="enterprise-domain">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="hexpand">True</property>
-                        <property name="has_entry">True</property>
-                        <property name="entry_text_column">0</property>
-                        <child internal-child="entry">
-                          <object class="GtkEntry" id="combobox-entry">
-                            <property name="can_focus">True</property>
-                            <property name="activates_default">True</property>
-                          </object>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkLabel" id="label10">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="xalign">0</property>
-                        <property name="label" translatable="yes">Tip: Enterprise domain or realm name</property>
-                        <attributes>
-                          <attribute name="scale" value="0.8"/>
-                        </attributes>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                      </packing>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="top_attach">0</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkEntry" id="enterprise-login">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="hexpand">True</property>
-                    <property name="invisible_char">●</property>
-                    <property name="activates_default">True</property>
-                    <property name="invisible_char_set">True</property>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="top_attach">1</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkEntry" id="enterprise-password">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="hexpand">True</property>
-                    <property name="visibility">False</property>
-                    <property name="invisible_char">●</property>
-                    <property name="activates_default">True</property>
-                    <property name="invisible_char_set">True</property>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="top_attach">2</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-              </object>
-            </child>
-          </object>
-  <object class="GtkDialog" id="join-dialog">
-    <property name="can_focus">False</property>
-    <property name="border_width">10</property>
-    <property name="resizable">False</property>
-    <property name="modal">True</property>
-    <property name="destroy_with_parent">True</property>
-    <property name="type_hint">dialog</property>
-    <child internal-child="vbox">
-      <object class="GtkBox" id="dialog-vbox1">
-        <property name="can_focus">False</property>
-        <property name="orientation">vertical</property>
-        <property name="spacing">2</property>
-        <child internal-child="action_area">
-          <object class="GtkButtonBox" id="dialog-action_area1">
-            <property name="can_focus">False</property>
-            <property name="layout_style">end</property>
-            <child>
-              <object class="GtkButton" id="button1">
-                <property name="label">gtk-cancel</property>
-                <property name="use_action_appearance">False</property>
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="can_default">True</property>
-                <property name="receives_default">True</property>
-                <property name="use_action_appearance">False</property>
-                <property name="use_stock">True</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkButton" id="button2">
-                <property name="label" translatable="yes">C_ontinue</property>
-                <property name="use_action_appearance">False</property>
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="can_default">True</property>
-                <property name="has_default">True</property>
-                <property name="receives_default">True</property>
-                <property name="use_action_appearance">False</property>
-                <property name="use_underline">True</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="pack_type">end</property>
-            <property name="position">0</property>
-          </packing>
-        </child>
-        <child>
-          <object class="GtkBox" id="box2">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="border_width">5</property>
-            <property name="orientation">vertical</property>
-            <property name="spacing">10</property>
-            <child>
-              <object class="GtkLabel" id="label71">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="label" translatable="yes">Domain Administrator Login</property>
-                <attributes>
-                  <attribute name="weight" value="bold"/>
-                  <attribute name="scale" value="1.2"/>
-                </attributes>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkLabel" id="label12">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="xalign">0</property>
-                <property name="yalign">0</property>
-                <property name="label" translatable="yes">In order to use enterprise logins, this computer needs to be
-enrolled in the domain. Please have your network administrator
-type their domain password here.</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkGrid" id="grid1">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="margin_left">12</property>
-                <property name="hexpand">True</property>
-                <property name="row_spacing">6</property>
-                <property name="column_spacing">12</property>
-                <child>
-                  <object class="GtkLabel" id="label13">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="xalign">1</property>
-                    <property name="label" translatable="yes">_Domain</property>
-                    <property name="use_underline">True</property>
-                    <property name="mnemonic_widget">join-domain</property>
-                    <style>
-                      <class name="dim-label-ucc"/>
-                    </style>
-                  </object>
-                  <packing>
-                    <property name="left_attach">0</property>
-                    <property name="top_attach">0</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="join-domain">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="margin_top">5</property>
-                    <property name="margin_bottom">5</property>
-                    <property name="xalign">0</property>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="top_attach">0</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="label14">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="xalign">1</property>
-                    <property name="label" translatable="yes">Administrator _Name</property>
-                    <property name="use_underline">True</property>
-                    <property name="mnemonic_widget">join-name</property>
-                    <style>
-                      <class name="dim-label-ucc"/>
-                    </style>
-                  </object>
-                  <packing>
-                    <property name="left_attach">0</property>
-                    <property name="top_attach">1</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkEntry" id="join-name">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="hexpand">True</property>
-                    <property name="invisible_char">●</property>
-                    <property name="invisible_char_set">True</property>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="top_attach">1</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="label15">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="xalign">1</property>
-                    <property name="label" translatable="yes">Administrator Password</property>
-                    <property name="use_underline">True</property>
-                    <property name="mnemonic_widget">join-password</property>
-                    <style>
-                      <class name="dim-label-ucc"/>
-                    </style>
-                  </object>
-                  <packing>
-                    <property name="left_attach">0</property>
-                    <property name="top_attach">2</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkEntry" id="join-password">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="hexpand">True</property>
-                    <property name="visibility">False</property>
-                    <property name="invisible_char">●</property>
-                    <property name="activates_default">True</property>
-                    <property name="invisible_char_set">True</property>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="top_attach">2</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">2</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="position">1</property>
-          </packing>
-        </child>
-      </object>
-    </child>
-    <action-widgets>
-      <action-widget response="-6">button1</action-widget>
-      <action-widget response="-5">button2</action-widget>
-    </action-widgets>
-  </object>
-  <object class="GtkSizeGroup" id="labels_sizegroup">
-    <widgets>
-      <widget name="label6"/>
-      <widget name="label5"/>
-      <widget name="label7"/>
-      <widget name="label4"/>
-      <widget name="label8"/>
-      <widget name="label9"/>
-    </widgets>
-  </object>
-  <object class="GtkSizeGroup" id="controls_sizegroup">
-    <widgets>
-      <widget name="local-username"/>
-      <widget name="local-name"/>
-      <widget name="local-account-type"/>
-      <widget name="box1"/>
-      <widget name="enterprise-login"/>
-      <widget name="enterprise-password"/>
-    </widgets>
-  </object>
-</interface>
diff --git a/panels/user-accounts/data/account-fingerprint.ui b/panels/user-accounts/data/account-fingerprint.ui
deleted file mode 100644
index e352e6d..0000000
--- a/panels/user-accounts/data/account-fingerprint.ui
+++ /dev/null
@@ -1,278 +0,0 @@
-<?xml version="1.0"?>
-<interface>
-  <!-- interface-requires gtk+ 3.8 -->
-  <!-- interface-naming-policy toplevel-contextual -->
-  <object class="GtkListStore" id="model1">
-    <columns>
-      <!-- column-name gchararray -->
-      <column type="gchararray"/>
-    </columns>
-    <data>
-      <row>
-        <col id="0" translatable="yes">Left thumb</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">Left middle finger</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">Left ring finger</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">Left little finger</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">Right thumb</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">Right middle finger</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">Right ring finger</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">Right little finger</col>
-      </row>
-    </data>
-  </object>
-  <object class="GtkAssistant" id="assistant">
-    <property name="border_width">12</property>
-    <property name="title" translatable="yes">Enable Fingerprint Login</property>
-    <property name="icon_name">system-users</property>
-    <property name="visible">False</property>
-    <child>
-      <placeholder/>
-    </child>
-    <child>
-      <object class="GtkVBox" id="page1">
-        <property name="visible">True</property>
-        <property name="border_width">12</property>
-        <property name="orientation">vertical</property>
-        <property name="spacing">12</property>
-        <child>
-          <object class="GtkHBox" id="hbox74">
-            <property name="visible">True</property>
-            <property name="spacing">6</property>
-            <child>
-              <object class="GtkImage" id="image">
-                <property name="visible">True</property>
-                <property name="stock">gtk-dialog-info</property>
-                <property name="icon-size">6</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkLabel" id="intro-label">
-                <property name="visible">True</property>
-                <property name="label">To enable fingerprint login, you need to save one of your fingerprints, using the Acme Foobar 5000.</property>
-                <property name="wrap">True</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">False</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="position">0</property>
-          </packing>
-        </child>
-        <child>
-          <object class="GtkVBox" id="vbox70">
-            <property name="visible">True</property>
-            <property name="orientation">vertical</property>
-            <child>
-              <object class="GtkRadioButton" id="radiobutton1">
-                <property name="label" translatable="yes">_Right index finger</property>
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="receives_default">False</property>
-                <property name="use_underline">True</property>
-                <property name="active">True</property>
-                <property name="draw_indicator">True</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">False</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkRadioButton" id="radiobutton2">
-                <property name="label" translatable="yes">_Left index finger</property>
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="receives_default">False</property>
-                <property name="use_underline">True</property>
-                <property name="draw_indicator">True</property>
-                <property name="group">radiobutton1</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">False</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkHBox" id="radiobutton3-hbox">
-                <property name="visible">True</property>
-                <property name="spacing">6</property>
-                <child>
-                  <object class="GtkRadioButton" id="radiobutton3">
-                    <property name="visible">True</property>
-                    <property name="label" translatable="yes">_Other finger:</property>
-                    <property name="can_focus">True</property>
-                    <property name="receives_default">False</property>
-                    <property name="use_underline">True</property>
-                    <property name="draw_indicator">True</property>
-                    <property name="group">radiobutton1</property>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">False</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkComboBox" id="finger_combobox">
-                    <property name="visible">True</property>
-                    <property name="sensitive">False</property>
-                    <property name="model">model1</property>
-                    <child>
-                      <object class="GtkCellRendererText" id="renderer1"/>
-                      <attributes>
-                        <attribute name="text">0</attribute>
-                      </attributes>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">False</property>
-                  </packing>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="position">2</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="position">1</property>
-          </packing>
-        </child>
-      </object>
-    </child>
-    <child>
-      <object class="GtkVBox" id="page2">
-        <property name="visible">True</property>
-        <property name="orientation">vertical</property>
-        <child>
-          <object class="GtkLabel" id="enroll-label">
-            <property name="visible">True</property>
-            <property name="label">In order to save your fingerprints, you need to swipe your thumb on the "Acme foobar" device.</property>
-            <property name="wrap">True</property>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">False</property>
-            <property name="position">0</property>
-          </packing>
-        </child>
-        <child>
-          <object class="GtkHBox" id="enroll_hbox">
-            <property name="visible">True</property>
-            <property name="margin-top">24</property>
-            <property name="margin-bottom">24</property>
-            <child>
-              <object class="GtkImage" id="image1">
-                <property name="visible">True</property>
-                <property name="stock">gtk-no</property>
-                <property name="icon-size">6</property>
-              </object>
-              <packing>
-                <property name="position">1</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkImage" id="image2">
-                <property name="visible">True</property>
-                <property name="stock">gtk-no</property>
-                <property name="icon-size">6</property>
-              </object>
-              <packing>
-                <property name="position">2</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkImage" id="image3">
-                <property name="visible">True</property>
-                <property name="stock">gtk-no</property>
-                <property name="icon-size">6</property>
-              </object>
-              <packing>
-                <property name="position">3</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkImage" id="image4">
-                <property name="visible">True</property>
-                <property name="stock">gtk-no</property>
-                <property name="icon-size">6</property>
-              </object>
-              <packing>
-                <property name="position">4</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkImage" id="image5">
-                <property name="visible">True</property>
-                <property name="stock">gtk-no</property>
-                <property name="icon-size">6</property>
-              </object>
-              <packing>
-                <property name="position">5</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">False</property>
-            <property name="position">1</property>
-          </packing>
-        </child>
-        <child>
-          <object class="GtkLabel" id="status-label">
-            <property name="visible">True</property>
-            <property name="wrap">True</property>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">False</property>
-            <property name="position">2</property>
-          </packing>
-        </child>
-      </object>
-    </child>
-    <child>
-      <object class="GtkLabel" id="page3">
-        <property name="visible">True</property>
-        <property name="label" translatable="yes">Your fingerprint was successfully saved. You should now be able to log in using your fingerprint reader.</property>
-        <property name="wrap">True</property>
-      </object>
-      <packing>
-        <property name="page_type">summary</property>
-      </packing>
-    </child>
-  </object>
-  <object class="GtkSizeGroup" id="sizegroup">
-    <property name="mode">both</property>
-    <widgets>
-      <widget name="radiobutton1"/>
-      <widget name="radiobutton2"/>
-      <widget name="radiobutton3-hbox"/>
-    </widgets>
-  </object>
-</interface>
diff --git a/panels/user-accounts/data/history-dialog.ui b/panels/user-accounts/data/history-dialog.ui
deleted file mode 100644
index 95ef411..0000000
--- a/panels/user-accounts/data/history-dialog.ui
+++ /dev/null
@@ -1,175 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<interface>
-  <!-- interface-requires gtk+ 3.8 -->
-  <object class="GtkDialog" id="dialog">
-    <property name="can_focus">False</property>
-    <property name="title" translatable="yes">Login History</property>
-    <property name="resizable">False</property>
-    <property name="modal">True</property>
-    <property name="window_position">center-on-parent</property>
-    <property name="icon_name">system-users</property>
-    <property name="type_hint">dialog</property>
-    <child internal-child="vbox">
-      <object class="GtkBox" id="dialog-vbox1">
-        <property name="can_focus">False</property>
-        <property name="orientation">vertical</property>
-        <property name="spacing">2</property>
-        <child internal-child="action_area">
-          <object class="GtkButtonBox" id="dialog-action_area1">
-            <property name="can_focus">False</property>
-            <property name="layout_style">end</property>
-            <child>
-              <object class="GtkButton" id="close-button">
-                <property name="label" translatable="yes">Close</property>
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="receives_default">True</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="pack_type">end</property>
-            <property name="position">0</property>
-          </packing>
-        </child>
-        <child>
-          <object class="GtkBox" id="box1">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="orientation">vertical</property>
-            <child>
-              <object class="GtkBox" id="box3">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="margin_left">6</property>
-                <property name="margin_right">6</property>
-                <property name="spacing">6</property>
-                <child>
-                  <object class="GtkButton" id="previous-button">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="receives_default">True</property>
-                    <child internal-child="accessible">
-                      <object class="AtkObject" id="previous-button-atkobject">
-                        <property name="accessible-name" translatable="yes">Previous Week</property>
-                      </object>
-                    </child>
-                    <child>
-                      <object class="GtkArrow" id="arrow1">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="arrow_type">left</property>
-                      </object>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">0</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="week-label">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <attributes>
-                      <attribute name="weight" value="bold"/>
-                    </attributes>
-                  </object>
-                  <packing>
-                    <property name="expand">True</property>
-                    <property name="fill">True</property>
-                    <property name="position">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkButton" id="next-button">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="receives_default">True</property>
-                    <child internal-child="accessible">
-                      <object class="AtkObject" id="next-button-atkobject">
-                        <property name="accessible-name" translatable="yes">Next Week</property>
-                      </object>
-                    </child>
-                    <child>
-                      <object class="GtkArrow" id="arrow2">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <child internal-child="accessible">
-                          <object class="AtkObject" id="arrow2-atkobject">
-                            <property name="accessible-name" translatable="yes">Next week</property>
-                          </object>
-                        </child>
-                      </object>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">2</property>
-                  </packing>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkScrolledWindow" id="scrolledwindow1">
-                <property name="width_request">350</property>
-                <property name="height_request">300</property>
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="hexpand">True</property>
-                <property name="vexpand">True</property>
-                <property name="border_width">6</property>
-                <property name="hscrollbar_policy">never</property>
-                <property name="shadow_type">in</property>
-                <child>
-                  <object class="GtkViewport" id="viewport1">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <child>
-                      <object class="GtkGrid" id="history-grid">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="hexpand">True</property>
-                        <property name="border_width">12</property>
-                        <property name="row_spacing">12</property>
-                        <property name="column_spacing">12</property>
-                        <property name="column_homogeneous">True</property>
-                      </object>
-                    </child>
-                  </object>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">True</property>
-                <property name="fill">True</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">True</property>
-            <property name="fill">True</property>
-            <property name="position">1</property>
-          </packing>
-        </child>
-      </object>
-    </child>
-    <action-widgets>
-      <action-widget response="0">close-button</action-widget>
-    </action-widgets>
-  </object>
-</interface>
diff --git a/panels/user-accounts/data/icons/left-index-finger.png b/panels/user-accounts/data/icons/left-index-finger.png
deleted file mode 100644
index 1a9cb2c7398ee2dde634d84624068b24f58c82d5..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1515
zcmV<H1r+*;P)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00004b3#c}2nYxW
zd<bNS00009a7bBm000fw000fw0YWI7cmMzZ8FWQhbW?9;ba!ELWdL_~cP?peYja~^
zaAhuUa%Y?FJQ@H11!ze`K~!jg)tPOGRAm&$e|KhQXWZBEZGGD^4BgVeW4S`4g$9NR
zMbZ+YnMhRNw}Oa1lu-m(L_$H920@`;3Jdf@kR_H@>&wv$cQ@ZkU0>GL)pgsM+1Z&s
z%&gwM``np(?@UJjFMFQnoacGY|DJRAKIe>;&1U&OqoUj!ibxn(48(x#s+zLvo4>a1
z%S589EGv8)+04OIf8wLV%d#heo>z7P!1KWRy!;mM5`guZ6_R=3_hS<$wM=ZdV_aP%
zP9k}2ap&n@S2S<0T-UlZwK>RPp&*MyBrYPeM8q<vm)qpWhlJV96)(pc8&^-8GIw0O
zeFB%(_YvAr$DF1mjkRMYzuCO4a$XQ$d=n6nCg4191bEwE(rA<G0p@J8;@MbubwhmG
zsCds<4!_dD*<BYny6G6vjv8j%I={iHif*_m1b`=iXkLEOt`LzZFwQnr2N1GY5E(OO
zYCIGt(VAv3Ie6V5)>Fm!NCVZ?@kz74v8w$#6NG^My=f4U+il~?fIY1$MI@SuR4j~D
z)m4lNRnhfx_pr_CqV?2-YN@Sh7#r#5F2BwMA>dqduiYPmeVqk;R>mTf4$*nw!Z2kl
z5+iI?KsGaw$&e`3nILQC+T>9N`<hH5y))h4m*_pyM>?4vrp!h&3}jRE_WsqAN^`VS
zXS`t0F>bQSRR;U&(O21<ywr8#^6@Jpl<Cnax>FZP{N2-jq$Qg&tS<;70THPdku@T+
z$e`|VjAz(nV+6iiolOj;243$v*xBz?Ua9M5U&r>-16O;W_3ri!xJBSqU^DQoh%9yJ
zE<46kMWiw>n<7vHaA;|IYjVGJ(yj>CgtFhaecE=d|Kg+jTC#uo^c`>~P;Zl8aOj)_
z!oak=Y>dElsV6ett{5ChpB%W{b$9EM)WPDen&C#E(<VP4BDdJaP6BWvja&(c$RuDG
z0g|D%JuTT0Y2^oQ1kO5aR@lbfjKmOuut7Hzfmub)2?RF+zdOeEFRm#9cjo_^2n>B)
zXBc$n++FhqHv&Ha_R!80k$Y^1rXBXp1@;??K$AgNQu??Zh^i)m9~{%G^13u|(xICr
zBDEAwAyWi=e|eoK^dbA!F<verL-(L#hJEHzn1Cq)H<iG6;Gw+id`AH82PPWk9~6-l
zz*K`SS=7TKC{&Rh04@L%Y;!At?Z6)f`*kk+Ob0%5(YZz-Uo1V7KXW>;2Y5<Vd+m0v
z5m40(u*EUGOhje^7v0wRgpq)VRFTVo4}tmQ9^zxbBTn05mpSK?s{}qLSL>DoBT^{e
z6xaeRbf_}GKBs*_0;;+nXmg%Hu5c*_OcB_C;YkCVRJGkX>E$}@e3{FMVFdCQ$F&B#
zPT)n;23`oX`uEE-uBVWQ)B_t`?AEI4$YKI-1bzwNm{-_481Dd63^re=>Nd9xybx#y
zdW%{G!vX*iSpYn3&=25}IzzC$^hQNQf!P5ZEQVg-Vc-*T|LdLDsH)Eu+Q4f~+*#Zt
z5Nd(ln4M1nZxq|$za~%!TUGT;F(a=8O1`%Tz`I_Iyb{=7f+In&TU8HvG4x7cCnJlP
ze-m518hRq2s#k%%f!*<k4Dh8_V?Uj_ul)NG2)k7EyjNpC1U?3gpYt-}G_c0c0?!2U
zY4m|#k9^=PuuxS``B~(*x%(bv=p-0$4p^kB$Net!ML<=%$n{Lii8JJ$d`FPQLE7sZ
zfO7q~d<vLvDpb6}Hvv^W2J8rWpbZ&drK*}51fCJ-XI64`ajE!CRevmXlb{4jKA4fU
zb|3^L&{c-B1LwURK?#)HQKL*%ULXSbrdO$#JLivufe<tTP<mrFQ{s96{sB9Rgg4N9
RLNovX002ovPDHLkV1fqQzLx+1

diff --git a/panels/user-accounts/data/icons/left-index-finger.svg b/panels/user-accounts/data/icons/left-index-finger.svg
deleted file mode 100644
index 3c36aea..0000000
--- a/panels/user-accounts/data/icons/left-index-finger.svg
+++ /dev/null
@@ -1,177 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!-- Generator: Adobe Illustrator 13.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->
-<svg
-   xmlns:dc="http://purl.org/dc/elements/1.1/"
-   xmlns:cc="http://creativecommons.org/ns#"
-   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-   xmlns:svg="http://www.w3.org/2000/svg"
-   xmlns="http://www.w3.org/2000/svg"
-   xmlns:xlink="http://www.w3.org/1999/xlink"
-   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
-   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
-   version="1.0"
-   x="0px"
-   y="0px"
-   width="48"
-   height="48"
-   viewBox="0 0 40.425 46.214"
-   enable-background="new 0 0 40.425 46.214"
-   xml:space="preserve"
-   id="svg2"
-   sodipodi:version="0.32"
-   inkscape:version="0.46"
-   sodipodi:docname="left-index-finger.svg"
-   inkscape:output_extension="org.inkscape.output.svg.inkscape"><metadata
-   id="metadata44"><rdf:RDF><cc:Work
-       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
-         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /></cc:Work></rdf:RDF></metadata><defs
-   id="defs42"><inkscape:perspective
-   sodipodi:type="inkscape:persp3d"
-   inkscape:vp_x="0 : 23.107 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_z="40.424999 : 23.107 : 1"
-   inkscape:persp3d-origin="20.2125 : 15.404667 : 1"
-   id="perspective46" />
-	
-	
-	
-	
-	
-	
-<radialGradient
-   r="8.341651"
-   fy="9.3411446"
-   fx="38.658855"
-   cy="9.3411446"
-   cx="38.658855"
-   gradientUnits="userSpaceOnUse"
-   id="radialGradient2479"
-   xlink:href="#linearGradient2378"
-   inkscape:collect="always" /><linearGradient
-   id="linearGradient2378"><stop
-     id="stop2386"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     style="stop-color:#27dc16;stop-opacity:1;"
-     offset="1"
-     id="stop2382" /></linearGradient><linearGradient
-   id="linearGradient3702"><stop
-     id="stop3704"
-     offset="0"
-     style="stop-color:black;stop-opacity:0;" /><stop
-     style="stop-color:black;stop-opacity:1;"
-     offset="0.5"
-     id="stop3710" /><stop
-     id="stop3706"
-     offset="1"
-     style="stop-color:black;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient6732"><stop
-     id="stop6734"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     id="stop6736"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:1;" /></linearGradient><linearGradient
-   id="linearGradient4585"><stop
-     id="stop4587"
-     offset="0"
-     style="stop-color:#9e9e9e;stop-opacity:1;" /><stop
-     id="stop4589"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:0;" /></linearGradient><inkscape:perspective
-   id="perspective2516"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 24 : 1"
-   sodipodi:type="inkscape:persp3d" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86956"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86964"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86966"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /></defs><sodipodi:namedview
-   inkscape:window-height="933"
-   inkscape:window-width="1054"
-   inkscape:pageshadow="2"
-   inkscape:pageopacity="0.0"
-   guidetolerance="10.0"
-   gridtolerance="10.0"
-   objecttolerance="10.0"
-   borderopacity="1.0"
-   bordercolor="#666666"
-   pagecolor="#ffffff"
-   id="base"
-   showgrid="false"
-   inkscape:zoom="11.122171"
-   inkscape:cx="22.316511"
-   inkscape:cy="30.299841"
-   inkscape:window-x="36"
-   inkscape:window-y="91"
-   inkscape:current-layer="svg2" />
-<g
-   id="g35"
-   style="fill:url(#radialGradient86956);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   transform="matrix(1.1605241,0,0,1.3370602,-4.3871473,-0.7984997)">
-		<circle
-   style="fill:url(#radialGradient86964);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   sodipodi:ry="3.829"
-   sodipodi:rx="3.829"
-   sodipodi:cy="5.5700002"
-   sodipodi:cx="26.49"
-   id="circle37"
-   r="3.829"
-   cy="5.5700002"
-   cx="26.49"
-   stroke-miterlimit="3.8637" />
-		<path
-   style="fill:url(#radialGradient86966);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path39"
-   stroke-miterlimit="3.8637"
-   d="" />
-	</g><g
-   id="Background">
-</g>
-<g
-   id="Guides"
-   display="none"
-   style="display:none">
-</g>
-<g
-   id="g7"
-   style="fill:#2f2f2f;fill-opacity:1">
-		<path
-   style="fill:#2f2f2f;fill-opacity:1;fill-rule:evenodd"
-   id="path9"
-   d="M 20.569,13.286 C 20.843,15.459 20.791,17.834 20.82,18.542 C 20.865,18.917 21.913,19.241 22.094,18.877 C 22.301,17.514 22.586,14.847 22.92,13.455 C 23.372,9.917 23.886,8.247 24.072,7.257 C 24.58,4.567 25.014,3.12 26.762,3.12 C 28.384,3.12 28.623,5.167 28.153,8.165 C 28.025,9.379 28.036,12.24 27.433,14.894 C 27.165,16.691 26.962,21.278 27.139,24.981 C 27.189,26.045 27.669,27.315 28.242,27.945 C 29.462,27.773 30.379,24.377 31.988,22.847 C 32.809,21.464 34.883,19.299 36.951,19.299 C 39.243,19.299 39.292,21 38.345,22.262 C 37.187,23.806 36.525,24.528 36.079,25.802 C 35.633,27.076 33.758,29.778 33.471,31.209 C 32.902,34.054 32.471,35.105 29.284,37.661 C 27.783,38.865 27.302,39.637 26.855,40.401 C 26.347,41.273 26.409,44.721 26.409,46.212 L 10.64,46.212 C 10.64,46.212 10.767,43.587 10.513,42.058 C 10.461,41.746 10.105,39.613 9.176,38.231 C 8.317,36.954 5.902,32.306 5.902,26.836 C 5.902,24.026 4.39,21.718 3.854,19.533 C 3.591,17.833 2.638,15.423 2.57,14.709 C 1.684,11.559 2.132,10.118 3.741,10.118 C 5.132,10.118 5.528,11.927 6.093,13.622 C 6.258,14.52 7.505,16.934 7.788,18.233 C 8.038,19.088 8.897,21.556 9.437,21.727 C 9.75,21.784 10.151,21.523 10.291,21.043 C 10.52,20.26 9.818,18.945 9.539,15.26 C 9.087,12.343 9.17,10.139 9.116,8.949 C 8.653,5.424 9.133,3.598 10.693,3.598 C 12.176,3.598 12.568,4.455 13.02,7.936 C 13.189,9.518 13.754,12.095 14.037,14.864 C 14.213,16.364 14.639,18.601 14.98,19.17 C 15.285,19.503 15.919,19.198 15.9,18.848 C 15.894,16.377 15.732,14.977 15.958,12.999 C 15.845,10.287 16.219,7.823 16.219,6.467 C 16.219,3.494 16.502,1.473 18.358,1.473 C 20.333,1.473 20.287,3.776 20.287,6.806 C 20.399,7.545 20.456,10.087 20.569,13.286 z"
-   clip-rule="evenodd" />
-	</g>
-<g
-   style="display:inline"
-   inkscape:label="Base"
-   id="layer1"
-   transform="translate(-52.466647,2.6102791)" /></svg>
\ No newline at end of file
diff --git a/panels/user-accounts/data/icons/left-little-finger.png b/panels/user-accounts/data/icons/left-little-finger.png
deleted file mode 100644
index 978942eeccad5b22bfa281232a028e6cd973431a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1500
zcmV<21ta>2P)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00004b3#c}2nYxW
zd<bNS00009a7bBm000fw000fw0YWI7cmMzZ8FWQhbW?9;ba!ELWdL_~cP?peYja~^
zaAhuUa%Y?FJQ@H11zAZ%K~!jg)tXyultmQBe|zcn4wkf(wrEx4BA9T*nn(f~Ady6f
zi9|F6h(?K;kdUZ}@sSu`P-5i42vK}cxdfFcvBZE74H1ZK@sPC2r6`vIEe#fErO<A7
zec0Xh>vXpLE=!F6r}^ew=KSZJo$s5O4JDIF{?CZ!+M$R<fG2?hpk7t`ay^C<;XB~-
z4PY;@8+hjq_#Xye84!`XfEwU;RW)mHg`@o}@V3Q%A@C~Dq^j@vi6H~e84!`_Ks(S3
zyl+vN>}Zd-*w+Bx1J3~)L}ael7@Y7^LeB&F>Go<PxO|}8(KXIuzZ58RJXiUMVGw=@
zILmILh)i)jR|6r(b1Y5Di6zE!pdWcw0&{kUYUQg?jSCxR3D{<QuunwtfJKHpw*+SI
zjjpLXSlUuLx%OyT?R^c89V}~pq&~WA6q`CnyO5D6akOUuMTY#Qr-%&<TZJC}A#Z(A
zW#zisN+~OkR*)Ym;8voy>U7)D&2#DtDvvF>^)WDD_?Yf!o52ATJKD1?^2`20PhoI2
z=j;hpCktXPR!^K+Ry8o0fgd9jG?#L3YznjPexjnVc--qV_Jm4-Yle?$j`mm?5R3ex
z|L`3I5_!>eMb$O66QbpGZ13X8#wP0D+)rOaf=SV8?x~TfC6WBqK$qd8Rzzaywk-or
z0%iuTs_Lzr5Fo@u#rb8FhQ|@U85!)>UCoq5CQx2dLntpimyrY_!2Rj=SQ#)01e$$t
z5(twQ4MoW##`yA~#iUiw(BBy+7LE}nQou+8FjPia35ZA)P+`d0f&`xmJB?60*&2`E
zW`H<_<wJ2K6G>Y3|3OdhHIj*eCg5+2pA3PBMV86HEQ>668HgkXwsv1>>-Z<pL$rGM
zO4+jSB<DMhUr5Azw`0%1gBdp#S!NZQW|0M2fxtnaacS~cUsu;p?LBAvnbuDve<+sg
z=WcNI@U_E@OOxl*gT@U%kDC4*$Yfx;Mb_&-bjyGb^z^N4`?K+j-`e)I7te?dQ|$YE
zQU`#l#(}>KKeI%nl+jDbmVrPk5Euk@El&<KEbe`|<NT?*p4**Y57SJtLPRnzzE+E$
zIz}g8%Rp`kWT4BF7ZWE+HW=L%z~XfKw8iXkV3MVOk%+7WYAv$cZUfDR(Ka;4fDWM2
z(YFey2hLga*JtrF75FlXENcctBm}&Y9&;*i7<fTdyPbMjzeZIx0qiikmx;(s;7T?-
zkFXLDks{y#uo;*~Y7(CTo;G#I+7FmB7X!8dW_kI=h!RR43hV$D7@`EwXzGtjKvkQ7
z6XqDCHZHk<Ed!gd%rx++s-84E-R#H?c#X;fh7k~vCBRyX-X-8In*%ol8obBl8iOSy
zBIAKAS@hPb>UEpI4S`>M1m+gb6O4_dj%rMNqpII#bKr)+NuYa7Eq|B~AR_aDH5Pe4
zSxP5^kejnn5mD^h!Jy~{o&r82wbq;1qN=Zr=D_W-$|aA1xkV{(2z&5-z`J8P_^%0!
zhMlT9=7z^DfxzGGKJbAXCAS2c0tDg*hg9{r8%4JS4l;5Rb0@LWt)eRes(J%B;yWB~
zNRYZ)a0M@iyWe?_#TR~7)pobaUI=^wSYPKk#0B6bF9xm&q|4|duMv5`MPPxdp7mnn
z^?u+(a&VGh!DV2fs-E#`=!t-;b^=?y4l)MXNX`5yKgND;Xf^@4x?DaB%(HD&+`=;f
zRc$48jT#gQV3n%c4hUSs?>+IhAcLmSqN=|Hb>f#m;DH&r*Y*X!1Uhptw(q)k!Y_fq
zCu-zqm*<N>`p_%r$DMgu=nFyq>=E=}HWAPsfPVqD4|8SpMasSa0000<MNUMnLSTa5
CoUok$

diff --git a/panels/user-accounts/data/icons/left-little-finger.svg b/panels/user-accounts/data/icons/left-little-finger.svg
deleted file mode 100644
index 0835854..0000000
--- a/panels/user-accounts/data/icons/left-little-finger.svg
+++ /dev/null
@@ -1,180 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!-- Generator: Adobe Illustrator 13.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->
-<svg
-   xmlns:dc="http://purl.org/dc/elements/1.1/"
-   xmlns:cc="http://creativecommons.org/ns#"
-   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-   xmlns:svg="http://www.w3.org/2000/svg"
-   xmlns="http://www.w3.org/2000/svg"
-   xmlns:xlink="http://www.w3.org/1999/xlink"
-   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
-   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
-   version="1.0"
-   x="0px"
-   y="0px"
-   width="48"
-   height="48"
-   viewBox="0 0 40.425 46.214"
-   enable-background="new 0 0 40.425 46.214"
-   xml:space="preserve"
-   id="svg2"
-   sodipodi:version="0.32"
-   inkscape:version="0.46"
-   sodipodi:docname="left-pinky-finger.svg"
-   inkscape:output_extension="org.inkscape.output.svg.inkscape"
-   inkscape:export-filename="/Users/mlanglie/Desktop/Fingerprint Enrollment Icons/Vector/left-ring-finger.png"
-   inkscape:export-xdpi="90"
-   inkscape:export-ydpi="90"><metadata
-   id="metadata44"><rdf:RDF><cc:Work
-       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
-         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /></cc:Work></rdf:RDF></metadata><defs
-   id="defs42"><inkscape:perspective
-   sodipodi:type="inkscape:persp3d"
-   inkscape:vp_x="0 : 23.107 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_z="40.424999 : 23.107 : 1"
-   inkscape:persp3d-origin="20.2125 : 15.404667 : 1"
-   id="perspective46" />
-	
-	
-	
-	
-	
-	
-<radialGradient
-   r="8.341651"
-   fy="9.3411446"
-   fx="38.658855"
-   cy="9.3411446"
-   cx="38.658855"
-   gradientUnits="userSpaceOnUse"
-   id="radialGradient2479"
-   xlink:href="#linearGradient2378"
-   inkscape:collect="always" /><linearGradient
-   id="linearGradient2378"><stop
-     id="stop2386"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     style="stop-color:#27dc16;stop-opacity:1;"
-     offset="1"
-     id="stop2382" /></linearGradient><linearGradient
-   id="linearGradient3702"><stop
-     id="stop3704"
-     offset="0"
-     style="stop-color:black;stop-opacity:0;" /><stop
-     style="stop-color:black;stop-opacity:1;"
-     offset="0.5"
-     id="stop3710" /><stop
-     id="stop3706"
-     offset="1"
-     style="stop-color:black;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient6732"><stop
-     id="stop6734"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     id="stop6736"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:1;" /></linearGradient><linearGradient
-   id="linearGradient4585"><stop
-     id="stop4587"
-     offset="0"
-     style="stop-color:#9e9e9e;stop-opacity:1;" /><stop
-     id="stop4589"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:0;" /></linearGradient><inkscape:perspective
-   id="perspective2516"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 24 : 1"
-   sodipodi:type="inkscape:persp3d" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86956"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86964"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86966"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /></defs><sodipodi:namedview
-   inkscape:window-height="933"
-   inkscape:window-width="1054"
-   inkscape:pageshadow="2"
-   inkscape:pageopacity="0.0"
-   guidetolerance="10.0"
-   gridtolerance="10.0"
-   objecttolerance="10.0"
-   borderopacity="1.0"
-   bordercolor="#666666"
-   pagecolor="#ffffff"
-   id="base"
-   showgrid="false"
-   inkscape:zoom="11.122171"
-   inkscape:cx="22.316511"
-   inkscape:cy="30.299841"
-   inkscape:window-x="122"
-   inkscape:window-y="443"
-   inkscape:current-layer="svg2" />
-<g
-   id="g35"
-   style="fill:url(#radialGradient86956);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   transform="matrix(1.1074589,0,0,1.2726911,-25.531655,5.5330271)">
-		<circle
-   style="fill:url(#radialGradient86964);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   sodipodi:ry="3.829"
-   sodipodi:rx="3.829"
-   sodipodi:cy="5.5700002"
-   sodipodi:cx="26.49"
-   id="circle37"
-   r="3.829"
-   cy="5.5700002"
-   cx="26.49"
-   stroke-miterlimit="3.8637" />
-		<path
-   style="fill:url(#radialGradient86966);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path39"
-   stroke-miterlimit="3.8637"
-   d="" />
-	</g><g
-   id="Background">
-</g>
-<g
-   id="Guides"
-   display="none"
-   style="display:none">
-</g>
-<g
-   id="g7"
-   style="fill:#2f2f2f;fill-opacity:1">
-		<path
-   style="fill:#2f2f2f;fill-opacity:1;fill-rule:evenodd"
-   id="path9"
-   d="M 20.569,13.286 C 20.843,15.459 20.791,17.834 20.82,18.542 C 20.865,18.917 21.913,19.241 22.094,18.877 C 22.301,17.514 22.586,14.847 22.92,13.455 C 23.372,9.917 23.886,8.247 24.072,7.257 C 24.58,4.567 25.014,3.12 26.762,3.12 C 28.384,3.12 28.623,5.167 28.153,8.165 C 28.025,9.379 28.036,12.24 27.433,14.894 C 27.165,16.691 26.962,21.278 27.139,24.981 C 27.189,26.045 27.669,27.315 28.242,27.945 C 29.462,27.773 30.379,24.377 31.988,22.847 C 32.809,21.464 34.883,19.299 36.951,19.299 C 39.243,19.299 39.292,21 38.345,22.262 C 37.187,23.806 36.525,24.528 36.079,25.802 C 35.633,27.076 33.758,29.778 33.471,31.209 C 32.902,34.054 32.471,35.105 29.284,37.661 C 27.783,38.865 27.302,39.637 26.855,40.401 C 26.347,41.273 26.409,44.721 26.409,46.212 L 10.64,46.212 C 10.64,46.212 10.767,43.587 10.513,42.058 C 10.461,41.746 10.105,39.613 9.176,38.231 C 8.317,36.954 5.902,32.306 5.902,26.836 C 5.902,24.026 4.39,21.718 3.854,19.533 C 3.591,17.833 2.638,15.423 2.57,14.709 C 1.684,11.559 2.132,10.118 3.741,10.118 C 5.132,10.118 5.528,11.927 6.093,13.622 C 6.258,14.52 7.505,16.934 7.788,18.233 C 8.038,19.088 8.897,21.556 9.437,21.727 C 9.75,21.784 10.151,21.523 10.291,21.043 C 10.52,20.26 9.818,18.945 9.539,15.26 C 9.087,12.343 9.17,10.139 9.116,8.949 C 8.653,5.424 9.133,3.598 10.693,3.598 C 12.176,3.598 12.568,4.455 13.02,7.936 C 13.189,9.518 13.754,12.095 14.037,14.864 C 14.213,16.364 14.639,18.601 14.98,19.17 C 15.285,19.503 15.919,19.198 15.9,18.848 C 15.894,16.377 15.732,14.977 15.958,12.999 C 15.845,10.287 16.219,7.823 16.219,6.467 C 16.219,3.494 16.502,1.473 18.358,1.473 C 20.333,1.473 20.287,3.776 20.287,6.806 C 20.399,7.545 20.456,10.087 20.569,13.286 z"
-   clip-rule="evenodd" />
-	</g>
-<g
-   style="display:inline"
-   inkscape:label="Base"
-   id="layer1"
-   transform="translate(-52.466647,2.6102791)" /></svg>
\ No newline at end of file
diff --git a/panels/user-accounts/data/icons/left-middle-finger.png b/panels/user-accounts/data/icons/left-middle-finger.png
deleted file mode 100644
index 406925e97133d5ca09515a1478d269eae0f5d303..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1483
zcmV;+1vL7JP)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00004b3#c}2nYxW
zd<bNS00009a7bBm000fw000fw0YWI7cmMzZ8FWQhbW?9;ba!ELWdL_~cP?peYja~^
zaAhuUa%Y?FJQ@H11xQImK~!jg#hF`dR7Duae`hb<cA*6<lol`qNGX>GKDoq@fC|JI
z5lyOz!~hzJF&Z9Cd{q+@LNo>>CKAO5FA+@??}-nXGzAr;bx63#EmSF`Tnd!Zc29S^
z>%(rF!|a^xxh(L1*_rwN^Ue34nR9mLJ60~2qg+_L*P2Xad}l14XpC6Vs%$3RJ)9nT
zzinOm`?3w9!77)42Y!q$u@V(u*UwrsyYj>&V(B>5%PQ&UYP;Hdz3bD%j}N|9mVq>s
zMZn^{RwSE@w>8XLD)Ap`_-}VN08Q)XFzv-!j-GGn>FGZEO#73Wme7M~hy>{*A`?Yq
zp@>)jxp?%|iiWB4C&%jOZRsE7U246`wD=4fr$1O5Pb9ZG`mYv|uSDeayDmUPnt*QL
zDDVzIE^0kmT~n8+iB816IyA~n_h+b!)-x$qOQLFg-QvAgOhl#wKLO7I+eBpfT@?VV
z2NH$yCV*TlQd<$JB#}vw>a|CS_JB=IWCF=Zl4NpH4KNE>2UI!yH3SPik01hKj&hxd
z%&~^E{T3EOJ!x<}QkisyY$k_Agmh|P5V#0Dq4^sk1cC_A`z*JzxudDnO$Pf@Mda&!
z*RXRbY`gD9_N_%WutuZYa{)^&dw6SKXUExFslFoerCZ%}TsxMsQ~i5@c|cO53<QY5
zH5e}#*6K~|&AFaTYH&yAx#Kr<@~O*5GN(HZv<=&-ZNMUfzl#B47==-Qh>R1F%_6ee
zVAg}23-I^a^v;2U>FqlCMEk*CQv)|2X>ZPD0WtWy;5TR|+*aTXU^lQ&MD&O5x>lbl
zA{79+L-!rm9Swa}zrDRVmnl^B73fh)6+bvW;3i;#qpTkRbOBLdcA;EFF~&Q}x`0r#
z5AFiG9OZ{a<bFq87XXEAL<s>R(f~}+Y@J?$ECn|K7c|ZWNBx?CKO!J%u#K$1!ZF4P
z1UCVvwfZJU*|Y-l3%@1-;|jlX4Yp8kAaED(Cot%!FA$L>jzKdTe_08CBP-Bkunij8
ze8DI{DP;ruwdUswwhVAivn>>nYD#Y*(+Y%o13~FOvVB_pIT0B-2c0qaSxRXErWLrW
z0;T|u70UWE0`L$}Z)jg5A{&622AgeY^MzOmTRU(GnCfWT2>cBEYv8}>;-?Y#+{Na)
z0)@-c%Y`u;f!~1_lv1}HxLj92DU}7j)S90bkp;kIw|+ih6d)o=@;l%|U<LU}YzCgv
zxnmvX^qH#wz5urQjnoB2TS!Er<R@;GX37GGb$&?!N~t#BAAJm9ny)b3VOoJ57-kyy
zSSfW<Z}f7U)*t3_;x++=gX0zhuM03H0K5qJ%YR&+F}j6BWCF0ug||g1)oU_%5pXC#
zU|uo9QGOSgZs2^Ql={xiffoTMf#SPjd9V^dL{<VX8SH6Xw$2DVW#&XgVZIKAMIW#h
z_=NnsUdJw_)GMVNc)b&MjZF!JYM>Q!@I%1cV>!6j0!m?zQfkZ#k5>Vq&+P&5o)?l=
z0c{}y34&Io)DbU4uL6Ff_!4s`vBxXXlK`dEP2i8f;rK%q_|_}gPiF3peJ0Y-qLk|P
zO7<h*Bf$7~UPhb;Hv8$|SwLYMec(4DAGiRlQc89B>Et)LyPYy*5)8NqtX4{$_1n>x
z0HxFw@;TFTqLcj0p9<1BNP2w-w|$2Rg$`ha>7wElz6B_y&H%pz9ngU+uu&;xN)UKP
zpwF!2@5NzpOeu9BtdpPuLJv&wT{{qh3b;~+u><dWCxQwHol&Dqx4b|C3Q4c9hdcda
lVITxu0SKR%&4%m`!2jM}mF6^M+0_65002ovPDHLkV1j=Tk4pdm

diff --git a/panels/user-accounts/data/icons/left-middle-finger.svg b/panels/user-accounts/data/icons/left-middle-finger.svg
deleted file mode 100644
index 1082da2..0000000
--- a/panels/user-accounts/data/icons/left-middle-finger.svg
+++ /dev/null
@@ -1,180 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!-- Generator: Adobe Illustrator 13.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->
-<svg
-   xmlns:dc="http://purl.org/dc/elements/1.1/"
-   xmlns:cc="http://creativecommons.org/ns#"
-   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-   xmlns:svg="http://www.w3.org/2000/svg"
-   xmlns="http://www.w3.org/2000/svg"
-   xmlns:xlink="http://www.w3.org/1999/xlink"
-   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
-   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
-   version="1.0"
-   x="0px"
-   y="0px"
-   width="48"
-   height="48"
-   viewBox="0 0 40.425 46.214"
-   enable-background="new 0 0 40.425 46.214"
-   xml:space="preserve"
-   id="svg2"
-   sodipodi:version="0.32"
-   inkscape:version="0.46"
-   sodipodi:docname="left-middle-finger.svg"
-   inkscape:output_extension="org.inkscape.output.svg.inkscape"
-   inkscape:export-filename="/Users/mlanglie/Desktop/Fingerprint Enrollment Icons/Vector/left-index-finger.png"
-   inkscape:export-xdpi="90"
-   inkscape:export-ydpi="90"><metadata
-   id="metadata44"><rdf:RDF><cc:Work
-       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
-         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /></cc:Work></rdf:RDF></metadata><defs
-   id="defs42"><inkscape:perspective
-   sodipodi:type="inkscape:persp3d"
-   inkscape:vp_x="0 : 23.107 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_z="40.424999 : 23.107 : 1"
-   inkscape:persp3d-origin="20.2125 : 15.404667 : 1"
-   id="perspective46" />
-	
-	
-	
-	
-	
-	
-<radialGradient
-   r="8.341651"
-   fy="9.3411446"
-   fx="38.658855"
-   cy="9.3411446"
-   cx="38.658855"
-   gradientUnits="userSpaceOnUse"
-   id="radialGradient2479"
-   xlink:href="#linearGradient2378"
-   inkscape:collect="always" /><linearGradient
-   id="linearGradient2378"><stop
-     id="stop2386"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     style="stop-color:#27dc16;stop-opacity:1;"
-     offset="1"
-     id="stop2382" /></linearGradient><linearGradient
-   id="linearGradient3702"><stop
-     id="stop3704"
-     offset="0"
-     style="stop-color:black;stop-opacity:0;" /><stop
-     style="stop-color:black;stop-opacity:1;"
-     offset="0.5"
-     id="stop3710" /><stop
-     id="stop3706"
-     offset="1"
-     style="stop-color:black;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient6732"><stop
-     id="stop6734"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     id="stop6736"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:1;" /></linearGradient><linearGradient
-   id="linearGradient4585"><stop
-     id="stop4587"
-     offset="0"
-     style="stop-color:#9e9e9e;stop-opacity:1;" /><stop
-     id="stop4589"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:0;" /></linearGradient><inkscape:perspective
-   id="perspective2516"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 24 : 1"
-   sodipodi:type="inkscape:persp3d" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86956"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86964"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86966"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /></defs><sodipodi:namedview
-   inkscape:window-height="933"
-   inkscape:window-width="1054"
-   inkscape:pageshadow="2"
-   inkscape:pageopacity="0.0"
-   guidetolerance="10.0"
-   gridtolerance="10.0"
-   objecttolerance="10.0"
-   borderopacity="1.0"
-   bordercolor="#666666"
-   pagecolor="#ffffff"
-   id="base"
-   showgrid="false"
-   inkscape:zoom="11.122171"
-   inkscape:cx="22.316511"
-   inkscape:cy="30.299841"
-   inkscape:window-x="122"
-   inkscape:window-y="443"
-   inkscape:current-layer="svg2" />
-<g
-   id="g35"
-   style="fill:url(#radialGradient86956);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   transform="matrix(1.1824583,0,0,1.3363867,-12.845608,-2.0066594)">
-		<circle
-   style="fill:url(#radialGradient86964);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   sodipodi:ry="3.829"
-   sodipodi:rx="3.829"
-   sodipodi:cy="5.5700002"
-   sodipodi:cx="26.49"
-   id="circle37"
-   r="3.829"
-   cy="5.5700002"
-   cx="26.49"
-   stroke-miterlimit="3.8637" />
-		<path
-   style="fill:url(#radialGradient86966);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path39"
-   stroke-miterlimit="3.8637"
-   d="" />
-	</g><g
-   id="Background">
-</g>
-<g
-   id="Guides"
-   display="none"
-   style="display:none">
-</g>
-<g
-   id="g7"
-   style="fill:#2f2f2f;fill-opacity:1">
-		<path
-   style="fill:#2f2f2f;fill-opacity:1;fill-rule:evenodd"
-   id="path9"
-   d="M 20.569,13.286 C 20.843,15.459 20.791,17.834 20.82,18.542 C 20.865,18.917 21.913,19.241 22.094,18.877 C 22.301,17.514 22.586,14.847 22.92,13.455 C 23.372,9.917 23.886,8.247 24.072,7.257 C 24.58,4.567 25.014,3.12 26.762,3.12 C 28.384,3.12 28.623,5.167 28.153,8.165 C 28.025,9.379 28.036,12.24 27.433,14.894 C 27.165,16.691 26.962,21.278 27.139,24.981 C 27.189,26.045 27.669,27.315 28.242,27.945 C 29.462,27.773 30.379,24.377 31.988,22.847 C 32.809,21.464 34.883,19.299 36.951,19.299 C 39.243,19.299 39.292,21 38.345,22.262 C 37.187,23.806 36.525,24.528 36.079,25.802 C 35.633,27.076 33.758,29.778 33.471,31.209 C 32.902,34.054 32.471,35.105 29.284,37.661 C 27.783,38.865 27.302,39.637 26.855,40.401 C 26.347,41.273 26.409,44.721 26.409,46.212 L 10.64,46.212 C 10.64,46.212 10.767,43.587 10.513,42.058 C 10.461,41.746 10.105,39.613 9.176,38.231 C 8.317,36.954 5.902,32.306 5.902,26.836 C 5.902,24.026 4.39,21.718 3.854,19.533 C 3.591,17.833 2.638,15.423 2.57,14.709 C 1.684,11.559 2.132,10.118 3.741,10.118 C 5.132,10.118 5.528,11.927 6.093,13.622 C 6.258,14.52 7.505,16.934 7.788,18.233 C 8.038,19.088 8.897,21.556 9.437,21.727 C 9.75,21.784 10.151,21.523 10.291,21.043 C 10.52,20.26 9.818,18.945 9.539,15.26 C 9.087,12.343 9.17,10.139 9.116,8.949 C 8.653,5.424 9.133,3.598 10.693,3.598 C 12.176,3.598 12.568,4.455 13.02,7.936 C 13.189,9.518 13.754,12.095 14.037,14.864 C 14.213,16.364 14.639,18.601 14.98,19.17 C 15.285,19.503 15.919,19.198 15.9,18.848 C 15.894,16.377 15.732,14.977 15.958,12.999 C 15.845,10.287 16.219,7.823 16.219,6.467 C 16.219,3.494 16.502,1.473 18.358,1.473 C 20.333,1.473 20.287,3.776 20.287,6.806 C 20.399,7.545 20.456,10.087 20.569,13.286 z"
-   clip-rule="evenodd" />
-	</g>
-<g
-   style="display:inline"
-   inkscape:label="Base"
-   id="layer1"
-   transform="translate(-52.466647,2.6102791)" /></svg>
\ No newline at end of file
diff --git a/panels/user-accounts/data/icons/left-ring-finger.png b/panels/user-accounts/data/icons/left-ring-finger.png
deleted file mode 100644
index 169ff6874edf7183f2ce0866fc2ffe01f5235171..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1512
zcmV<E1sD2>P)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00004b3#c}2nYxW
zd<bNS00009a7bBm000fw000fw0YWI7cmMzZ8FWQhbW?9;ba!ELWdL_~cP?peYja~^
zaAhuUa%Y?FJQ@H11!YM@K~!jg)tOstR8<s)zcZJ%Oj}9~<yHuUrXZlQKzY!B21r!E
z5K$x$P!b|)!kZ?>C-uP>j4^0pB2j!%1IB=8z!$6$kxRI46G)2OE2XsDnL^vS9UtaQ
zbLOzm%()C2|CiZ&uYc{m{<HSEtUZQln*5&;^Fv<ty%9Z?h^~r6V~ZmgiEK9Wi<!=B
zI`+JIv%nFNDDX5;1ME~vr79eA5j+c+`I9lmtc!1N7&Ade44V+IiPn<r?RmDV<M`_{
ze~7O>x+J~dqP_`yXtmb^?^HTyJ0f0*x$4-q;gcVk)zUO0J}%QjQ`cywG|poBLyKB#
zhSq;QW4kfTqOP#HE!E8>BJ)J#I}v$1Oz_}Qz>FQSwegWn(?(P`Q-8UU-<BVwZS6if
zH(h0Hd^{}^pJ<8H)O>2u$J$&QG{H9mJAh@tdJ%d2z6&s8#?pqy=DNmcBe#CPLpGfS
z;LNUbjEIe5WMUlE@x;R-QVk5ZxenD#_Z%?9)*l@-c<?MB@<5F-goIH`Rjz7qy!XZ(
z%*zI~kvgiXhcre;^-Tl}n`@ON%8o^jeyE$=+dW{CjTjN4MhwF&cIiIRLyQ=vNj7&g
zp3ry?W<f;az<h`O{tJj?a@VrC3>h;`CYLU<b+lh3ZKlYi`mfU;i)-BLZ0!dDr^vg$
zB6h~+iIrx<&F%}=dUHuq#z2v&r=y3?+h^11)ZI2sZ~(Qo_H>QC%WJSYXa$H!t%$4<
zk$C{e7N>XhU+p>2l{}wGCHjlFS39oLes=fCyS;tyQhak3V9$VP?41E)2i!C89<T{$
z6Oly#w~f?`ou?0P?d)yuwG;cg`_1H;fd$83GE?X?U>D%bz%`{*KOx{I!2bMx3*giO
zbKuazzU9finc_FAi4ob@S_raS2Al#yU43vDaLLwwN<_vD_Ab<((C{Z&zpesAWHiv^
zuwC>PraRmObUHXIZT;&SenCJ~V=H7}TA6hM!A-y^NB?D8`-X-;#ro9=C_IHGX>6gM
zK;SOm0MKXaPZg0zZHs0c{8=UDD`a4@#@449^98K{rPKiMhhz8^%a#GoIc(EJq@L1S
zNSA?7Par7$B5QN>SBOZVemJd}=P^nP&}HCX70?7cW3`?42*8uTD9!kM5m^b0*VqO$
zW4=(TB0CCn10!u?tAL%r1r7gwmw8%&Z(MAy84wWzc+Fa~71#%?R!Sx9Jl6~;rE<V#
z$M6dxG8O1?^YaO<01-)$-vOTkv&mn?CBR}Qx7^2^^U75L-;%F&D}j5qkaZ}q8JO!Z
z<$%LZen|mJsUtwUa}8jOuQ1)A%fKgSt~BtaQtG60(97qv^JcCjiUe36j_WkMOMvzO
zz>9!G{^RnD!7U^r4Zubh-a4h!EuF!OfP(=7^9uV3#z#Q2hO<>EwcTw3F9J>i$+E0q
zm;)dpbAVSh_B1YArvSst*{Fyp^yOe!B!Pv%SLC1dPHa?4y-{icuP1Yt%2NWN9@v9E
z_!RI#xe5Mj0j01-DOI-M@hTwncY6SQ?1ki2z>yGv1i>Dq)Sq66UIqNhy+zFZ#1^ka
zPXd%uw}Jg-iIqVP*yfe&`TqgnNB^+|!fvJ1Wv^sE0=@vWuk#AxZ(xld2hRemZS<Mn
zh<u<En5&dJ@5jkc1^_ltfs+Icx`25~sWW~ZeF;!XT_JyFT1i|af93xQ;_NpAkS{nY
z_2=?=V79JM@e1Dplv1aGpMx%FLk?J_l+qm#ct(&6K)x;xixWzzy<sN_Dj@X2+*@l0
zLQnx$DzJ9oeQ!rl0ijRSs8E#`NPu<d753vU8`2*Lo&gAdFq;eM55PZ2CXK;c9#-T4
O0000<MNUMnLSTZCSG=nL

diff --git a/panels/user-accounts/data/icons/left-ring-finger.svg b/panels/user-accounts/data/icons/left-ring-finger.svg
deleted file mode 100644
index 50ace80..0000000
--- a/panels/user-accounts/data/icons/left-ring-finger.svg
+++ /dev/null
@@ -1,180 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!-- Generator: Adobe Illustrator 13.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->
-<svg
-   xmlns:dc="http://purl.org/dc/elements/1.1/"
-   xmlns:cc="http://creativecommons.org/ns#"
-   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-   xmlns:svg="http://www.w3.org/2000/svg"
-   xmlns="http://www.w3.org/2000/svg"
-   xmlns:xlink="http://www.w3.org/1999/xlink"
-   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
-   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
-   version="1.0"
-   x="0px"
-   y="0px"
-   width="48"
-   height="48"
-   viewBox="0 0 40.425 46.214"
-   enable-background="new 0 0 40.425 46.214"
-   xml:space="preserve"
-   id="svg2"
-   sodipodi:version="0.32"
-   inkscape:version="0.46"
-   sodipodi:docname="left-ring-finger.svg"
-   inkscape:output_extension="org.inkscape.output.svg.inkscape"
-   inkscape:export-filename="/Users/mlanglie/Desktop/Fingerprint Enrollment Icons/Vector/left-middle-finger.png"
-   inkscape:export-xdpi="90"
-   inkscape:export-ydpi="90"><metadata
-   id="metadata44"><rdf:RDF><cc:Work
-       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
-         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /></cc:Work></rdf:RDF></metadata><defs
-   id="defs42"><inkscape:perspective
-   sodipodi:type="inkscape:persp3d"
-   inkscape:vp_x="0 : 23.107 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_z="40.424999 : 23.107 : 1"
-   inkscape:persp3d-origin="20.2125 : 15.404667 : 1"
-   id="perspective46" />
-	
-	
-	
-	
-	
-	
-<radialGradient
-   r="8.341651"
-   fy="9.3411446"
-   fx="38.658855"
-   cy="9.3411446"
-   cx="38.658855"
-   gradientUnits="userSpaceOnUse"
-   id="radialGradient2479"
-   xlink:href="#linearGradient2378"
-   inkscape:collect="always" /><linearGradient
-   id="linearGradient2378"><stop
-     id="stop2386"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     style="stop-color:#27dc16;stop-opacity:1;"
-     offset="1"
-     id="stop2382" /></linearGradient><linearGradient
-   id="linearGradient3702"><stop
-     id="stop3704"
-     offset="0"
-     style="stop-color:black;stop-opacity:0;" /><stop
-     style="stop-color:black;stop-opacity:1;"
-     offset="0.5"
-     id="stop3710" /><stop
-     id="stop3706"
-     offset="1"
-     style="stop-color:black;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient6732"><stop
-     id="stop6734"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     id="stop6736"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:1;" /></linearGradient><linearGradient
-   id="linearGradient4585"><stop
-     id="stop4587"
-     offset="0"
-     style="stop-color:#9e9e9e;stop-opacity:1;" /><stop
-     id="stop4589"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:0;" /></linearGradient><inkscape:perspective
-   id="perspective2516"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 24 : 1"
-   sodipodi:type="inkscape:persp3d" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86956"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86964"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86966"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /></defs><sodipodi:namedview
-   inkscape:window-height="933"
-   inkscape:window-width="1054"
-   inkscape:pageshadow="2"
-   inkscape:pageopacity="0.0"
-   guidetolerance="10.0"
-   gridtolerance="10.0"
-   objecttolerance="10.0"
-   borderopacity="1.0"
-   bordercolor="#666666"
-   pagecolor="#ffffff"
-   id="base"
-   showgrid="false"
-   inkscape:zoom="11.122171"
-   inkscape:cx="22.316511"
-   inkscape:cy="30.299841"
-   inkscape:window-x="122"
-   inkscape:window-y="443"
-   inkscape:current-layer="svg2" />
-<g
-   id="g35"
-   style="fill:url(#radialGradient86956);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   transform="matrix(1.1824583,0,0,1.3363867,-20.636466,-0.7947482)">
-		<circle
-   style="fill:url(#radialGradient86964);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   sodipodi:ry="3.829"
-   sodipodi:rx="3.829"
-   sodipodi:cy="5.5700002"
-   sodipodi:cx="26.49"
-   id="circle37"
-   r="3.829"
-   cy="5.5700002"
-   cx="26.49"
-   stroke-miterlimit="3.8637" />
-		<path
-   style="fill:url(#radialGradient86966);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path39"
-   stroke-miterlimit="3.8637"
-   d="" />
-	</g><g
-   id="Background">
-</g>
-<g
-   id="Guides"
-   display="none"
-   style="display:none">
-</g>
-<g
-   id="g7"
-   style="fill:#2f2f2f;fill-opacity:1">
-		<path
-   style="fill:#2f2f2f;fill-opacity:1;fill-rule:evenodd"
-   id="path9"
-   d="M 20.569,13.286 C 20.843,15.459 20.791,17.834 20.82,18.542 C 20.865,18.917 21.913,19.241 22.094,18.877 C 22.301,17.514 22.586,14.847 22.92,13.455 C 23.372,9.917 23.886,8.247 24.072,7.257 C 24.58,4.567 25.014,3.12 26.762,3.12 C 28.384,3.12 28.623,5.167 28.153,8.165 C 28.025,9.379 28.036,12.24 27.433,14.894 C 27.165,16.691 26.962,21.278 27.139,24.981 C 27.189,26.045 27.669,27.315 28.242,27.945 C 29.462,27.773 30.379,24.377 31.988,22.847 C 32.809,21.464 34.883,19.299 36.951,19.299 C 39.243,19.299 39.292,21 38.345,22.262 C 37.187,23.806 36.525,24.528 36.079,25.802 C 35.633,27.076 33.758,29.778 33.471,31.209 C 32.902,34.054 32.471,35.105 29.284,37.661 C 27.783,38.865 27.302,39.637 26.855,40.401 C 26.347,41.273 26.409,44.721 26.409,46.212 L 10.64,46.212 C 10.64,46.212 10.767,43.587 10.513,42.058 C 10.461,41.746 10.105,39.613 9.176,38.231 C 8.317,36.954 5.902,32.306 5.902,26.836 C 5.902,24.026 4.39,21.718 3.854,19.533 C 3.591,17.833 2.638,15.423 2.57,14.709 C 1.684,11.559 2.132,10.118 3.741,10.118 C 5.132,10.118 5.528,11.927 6.093,13.622 C 6.258,14.52 7.505,16.934 7.788,18.233 C 8.038,19.088 8.897,21.556 9.437,21.727 C 9.75,21.784 10.151,21.523 10.291,21.043 C 10.52,20.26 9.818,18.945 9.539,15.26 C 9.087,12.343 9.17,10.139 9.116,8.949 C 8.653,5.424 9.133,3.598 10.693,3.598 C 12.176,3.598 12.568,4.455 13.02,7.936 C 13.189,9.518 13.754,12.095 14.037,14.864 C 14.213,16.364 14.639,18.601 14.98,19.17 C 15.285,19.503 15.919,19.198 15.9,18.848 C 15.894,16.377 15.732,14.977 15.958,12.999 C 15.845,10.287 16.219,7.823 16.219,6.467 C 16.219,3.494 16.502,1.473 18.358,1.473 C 20.333,1.473 20.287,3.776 20.287,6.806 C 20.399,7.545 20.456,10.087 20.569,13.286 z"
-   clip-rule="evenodd" />
-	</g>
-<g
-   style="display:inline"
-   inkscape:label="Base"
-   id="layer1"
-   transform="translate(-52.466647,2.6102791)" /></svg>
\ No newline at end of file
diff --git a/panels/user-accounts/data/icons/left-thumb.png b/panels/user-accounts/data/icons/left-thumb.png
deleted file mode 100644
index eaf875d003cc8bd31f99591cd68632e9893104a3..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1512
zcmV<E1sD2>P)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00004b3#c}2nYxW
zd<bNS00009a7bBm000fw000fw0YWI7cmMzZ8FWQhbW?9;ba!ELWdL_~cP?peYja~^
zaAhuUa%Y?FJQ@H11!YM@K~!jg)tXyultmQBf7@-hl(sCDaw#pXDRQxRIi!U^6ubbE
zAQEB>il7EVB)-B6FUAW`pz-qHi^j_XRi3;>Kq8O`7>igu1~nE+Kub%x6a;EZx9zSE
zyIZES-)_I}+ii^hmz^``%*^?JXJ)>c^KBp&i}8O(ey%$dks$C0Fb3GIs*zleVIpr7
z`rHic0X_p>8-@Od!B+%CWIRv_{I06@99(OZp8&Qxw0{`b1T?Ga4nIC5;W+{#G7IPg
zeg$54FsU-iVTbmWz}LVUV7rJc^y-5NKU3&QpfFK>#&WI@C^xFcIkaC16d7`b4<Cl$
zhk!ZlCW**&L!Jr*3^|k_W#Umw&T5hSAz-&Lr-0KFAF30P0$_=y|IZ0D808{TQDT&5
z17j_Hj}ITxI^za|mORTS+s*+L8|8Z)^yhu}Fa*bKR78r2FV?fFdeBn;ZOJo@@<<U7
z2YvfUPG&;72)qn@02~kzd(mCB<QfqPCCW|_FbUWZ=u*|2t~^bHbOg-(dyA#B2?T-K
zM0unL*aWhA`jDPLhf#h&M5Y<CO#p69qqGD>qym^|>CU-vG857fXt!+E8S)he`y_#&
zgDx3?IU|hY3+V`)vSjm(>lA@I6TeOblDp7M2VGV>5Tqy21oRqmoru&MgAQ2s^D^|8
zjKC}hU9Ur(CpZ#N)jr^eRsC#2HvpWmbaO<cl+07eDFSJCp!z-e8|wFt*+2i=(&O{?
zj@@6sC$z!IF4J-P0I<xE*NVuN1c6pyhM~(N{zlG3z$pSL1RCB86bx1dKPj19xvXMx
zUAQz@N-P$o<3dYA!`?9~XzP3Wrx#-V=D?W<n3xDGPn7L70<ajE;!wXtMAiW{4!S<O
zVsL8yt3}n-t7<AFTphZd>VjHoLesgc^1g6Y&D>Q~hF&u5GZ8orT(IiaCw~8Quz!X4
zZOq0DU}u`KhDG3>-GQ=bQShmW<7+~bf>Y@JCc@Fp%Dy#+IJvEj>Y}<(;n;EO=6(?v
zKOzBDjRK!q)sKrv9dI#SJC7JfAUMFnf(d0+rTt+}Y;C3Kt!6q-bkcLRm%om*bMxpR
z<>j^00>N7+;E@h<J1sc`Gy>am<G(e93i2N;EF4$RzN3pv+BHlS$O}+8dn)0QNd<Yq
z(Bfo$MgpqZ4E$kL3-OCfE|9W_BOiyj+H@nuaKU5qnNWQj`PRPU<~VIH=3HVJf!OC$
z{^{SBx{;NYm$CfCr3}RS>F&AQA03PwO6uHXC5~n9XIczRArT1^n6SyoX!Vwr^b~c|
z9l61U%dKs(L4HW;+(h8V95|W|W(MO8VyPGWI~LaxURX@$KnJI~G}7CBz47POv7tMO
z8v-pr>ZHsK76FLJB4DGf4CDu>-B`t$$Z3w9+jp(y%;B%1?LFIu*|^D#iiqNT9n2Ot
zfEB=p41co&5WKs)z4*E77Y7C+SEA9r#-<g$AK5l;Gjkn`4uMkOa2j1?@I=XiLrYsT
z-Wl9p>N`d@$vJkZ>WCK}w*<02xBI}GZj9U#XwJeBKRB$azqm1UOW+`>mzdGSF1LoR
z2&n3Hxb^ZFWkiX8TW|$0nYk~$`{E1VscNTNV=n~W2d;Vd#}nFs=e;y=O&~Fi-u3E{
z2ebnZsp?rTjl3pz-zEo{1P7c49#+-UUK@HMpsJUM=S*{nbHtzgNk5JKq}Sg8a`kcf
zEO5W7w)pM9GXYg?CH@&TTSS5Ns_K*=a1FoTi5s&SG=bk#_4{l)@k=1<fl0k<`+{Er
zmvS(+?|E;+FM*Vdnh)gUmgkE=BI%Xw;m-b8=nL8W*(0lOTf}#vtnn{$v~VB1zqNk=
O0000<MNUMnLSTZlMZFdP

diff --git a/panels/user-accounts/data/icons/left-thumb.svg b/panels/user-accounts/data/icons/left-thumb.svg
deleted file mode 100644
index fd0f582..0000000
--- a/panels/user-accounts/data/icons/left-thumb.svg
+++ /dev/null
@@ -1,180 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!-- Generator: Adobe Illustrator 13.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->
-<svg
-   xmlns:dc="http://purl.org/dc/elements/1.1/"
-   xmlns:cc="http://creativecommons.org/ns#"
-   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-   xmlns:svg="http://www.w3.org/2000/svg"
-   xmlns="http://www.w3.org/2000/svg"
-   xmlns:xlink="http://www.w3.org/1999/xlink"
-   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
-   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
-   version="1.0"
-   x="0px"
-   y="0px"
-   width="48"
-   height="48"
-   viewBox="0 0 40.425 46.214"
-   enable-background="new 0 0 40.425 46.214"
-   xml:space="preserve"
-   id="svg2"
-   sodipodi:version="0.32"
-   inkscape:version="0.46"
-   sodipodi:docname="left-thumb.svg"
-   inkscape:output_extension="org.inkscape.output.svg.inkscape"
-   inkscape:export-filename="/Users/mlanglie/Desktop/Fingerprint Enrollment Icons/Vector/left-pinky-finger.png"
-   inkscape:export-xdpi="90"
-   inkscape:export-ydpi="90"><metadata
-   id="metadata44"><rdf:RDF><cc:Work
-       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
-         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /></cc:Work></rdf:RDF></metadata><defs
-   id="defs42"><inkscape:perspective
-   sodipodi:type="inkscape:persp3d"
-   inkscape:vp_x="0 : 23.107 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_z="40.424999 : 23.107 : 1"
-   inkscape:persp3d-origin="20.2125 : 15.404667 : 1"
-   id="perspective46" />
-	
-	
-	
-	
-	
-	
-<radialGradient
-   r="8.341651"
-   fy="9.3411446"
-   fx="38.658855"
-   cy="9.3411446"
-   cx="38.658855"
-   gradientUnits="userSpaceOnUse"
-   id="radialGradient2479"
-   xlink:href="#linearGradient2378"
-   inkscape:collect="always" /><linearGradient
-   id="linearGradient2378"><stop
-     id="stop2386"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     style="stop-color:#27dc16;stop-opacity:1;"
-     offset="1"
-     id="stop2382" /></linearGradient><linearGradient
-   id="linearGradient3702"><stop
-     id="stop3704"
-     offset="0"
-     style="stop-color:black;stop-opacity:0;" /><stop
-     style="stop-color:black;stop-opacity:1;"
-     offset="0.5"
-     id="stop3710" /><stop
-     id="stop3706"
-     offset="1"
-     style="stop-color:black;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient6732"><stop
-     id="stop6734"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     id="stop6736"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:1;" /></linearGradient><linearGradient
-   id="linearGradient4585"><stop
-     id="stop4587"
-     offset="0"
-     style="stop-color:#9e9e9e;stop-opacity:1;" /><stop
-     id="stop4589"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:0;" /></linearGradient><inkscape:perspective
-   id="perspective2516"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 24 : 1"
-   sodipodi:type="inkscape:persp3d" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86956"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86964"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86966"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /></defs><sodipodi:namedview
-   inkscape:window-height="933"
-   inkscape:window-width="1054"
-   inkscape:pageshadow="2"
-   inkscape:pageopacity="0.0"
-   guidetolerance="10.0"
-   gridtolerance="10.0"
-   objecttolerance="10.0"
-   borderopacity="1.0"
-   bordercolor="#666666"
-   pagecolor="#ffffff"
-   id="base"
-   showgrid="false"
-   inkscape:zoom="11.122171"
-   inkscape:cx="22.316511"
-   inkscape:cy="30.299841"
-   inkscape:window-x="116"
-   inkscape:window-y="498"
-   inkscape:current-layer="svg2" />
-<g
-   id="g35"
-   style="fill:url(#radialGradient86956);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   transform="matrix(1.1916623,0,0,1.4021101,4.5265732,14.334323)">
-		<circle
-   style="fill:url(#radialGradient86964);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   sodipodi:ry="3.829"
-   sodipodi:rx="3.829"
-   sodipodi:cy="5.5700002"
-   sodipodi:cx="26.49"
-   id="circle37"
-   r="3.829"
-   cy="5.5700002"
-   cx="26.49"
-   stroke-miterlimit="3.8637" />
-		<path
-   style="fill:url(#radialGradient86966);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path39"
-   stroke-miterlimit="3.8637"
-   d="" />
-	</g><g
-   id="Background">
-</g>
-<g
-   id="Guides"
-   display="none"
-   style="display:none">
-</g>
-<g
-   id="g7"
-   style="fill:#2f2f2f;fill-opacity:1">
-		<path
-   style="fill:#2f2f2f;fill-opacity:1;fill-rule:evenodd"
-   id="path9"
-   d="M 20.569,13.286 C 20.843,15.459 20.791,17.834 20.82,18.542 C 20.865,18.917 21.913,19.241 22.094,18.877 C 22.301,17.514 22.586,14.847 22.92,13.455 C 23.372,9.917 23.886,8.247 24.072,7.257 C 24.58,4.567 25.014,3.12 26.762,3.12 C 28.384,3.12 28.623,5.167 28.153,8.165 C 28.025,9.379 28.036,12.24 27.433,14.894 C 27.165,16.691 26.962,21.278 27.139,24.981 C 27.189,26.045 27.669,27.315 28.242,27.945 C 29.462,27.773 30.379,24.377 31.988,22.847 C 32.809,21.464 34.883,19.299 36.951,19.299 C 39.243,19.299 39.292,21 38.345,22.262 C 37.187,23.806 36.525,24.528 36.079,25.802 C 35.633,27.076 33.758,29.778 33.471,31.209 C 32.902,34.054 32.471,35.105 29.284,37.661 C 27.783,38.865 27.302,39.637 26.855,40.401 C 26.347,41.273 26.409,44.721 26.409,46.212 L 10.64,46.212 C 10.64,46.212 10.767,43.587 10.513,42.058 C 10.461,41.746 10.105,39.613 9.176,38.231 C 8.317,36.954 5.902,32.306 5.902,26.836 C 5.902,24.026 4.39,21.718 3.854,19.533 C 3.591,17.833 2.638,15.423 2.57,14.709 C 1.684,11.559 2.132,10.118 3.741,10.118 C 5.132,10.118 5.528,11.927 6.093,13.622 C 6.258,14.52 7.505,16.934 7.788,18.233 C 8.038,19.088 8.897,21.556 9.437,21.727 C 9.75,21.784 10.151,21.523 10.291,21.043 C 10.52,20.26 9.818,18.945 9.539,15.26 C 9.087,12.343 9.17,10.139 9.116,8.949 C 8.653,5.424 9.133,3.598 10.693,3.598 C 12.176,3.598 12.568,4.455 13.02,7.936 C 13.189,9.518 13.754,12.095 14.037,14.864 C 14.213,16.364 14.639,18.601 14.98,19.17 C 15.285,19.503 15.919,19.198 15.9,18.848 C 15.894,16.377 15.732,14.977 15.958,12.999 C 15.845,10.287 16.219,7.823 16.219,6.467 C 16.219,3.494 16.502,1.473 18.358,1.473 C 20.333,1.473 20.287,3.776 20.287,6.806 C 20.399,7.545 20.456,10.087 20.569,13.286 z"
-   clip-rule="evenodd" />
-	</g>
-<g
-   style="display:inline"
-   inkscape:label="Base"
-   id="layer1"
-   transform="translate(-52.466647,2.6102791)" /></svg>
\ No newline at end of file
diff --git a/panels/user-accounts/data/icons/print_error.png b/panels/user-accounts/data/icons/print_error.png
deleted file mode 100644
index d67150b1b3446ad3f0a56c37e236608941ad8e4e..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 4160
zcmV-G5Wnw<P)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00004b3#c}2nYxW
zd<bNS00009a7bBm000fw000fw0YWI7cmMzZ8FWQhbW?9;ba!ELWdL_~cP?peYja~^
zaAhuUa%Y?FJQ@H154}l5K~!jgy_$J+T-ANYKlja>Mcc^QB}=ws8`;9xu>%FOWTA1%
zVn|C#NdivB(2yfI2TC1CaDkW*)(~T8n+B8sAyb>O(@^7t&B3wFZdMs@*g{y=I+A8I
zGaAjjt$+OPXfY(%Kzq-5=UVgby!n2A`|tOxJkR6ftY|dq2c`ox`l<vHKsV3>^h6?&
z+{b$O5iE5i1ftPsHLwgg1NbsfqHj4sTwg9Q3-AH20CxfRM<S8rrw4mt9TtITG+GPX
z27D7R^v4H)Um_Bp0W3s7ZwH<NPDcoS4I%U(a7`o<Iq?5RAR3Jtz=ep!p8~!Cd`^RT
z5V!@H4eSA)1N<6vFK`2JJCFo6Yl2?^E{a4VFML`Aj6ZiH8jS`t=o&=&r)cmG0IvfN
zYoKQVZ9oHXDx!@B;QPR}z&1ov6~GC=oM<%K{C`dW_*V^fKJZoGAAmmr9l%Y9gdf*u
zE<^19PT+s^_gjH?fD3@-z-NH}23`iXM5EDDJ`DmNYC_Ryv=ulS_`C*qCC~@_8}JK6
zqD_cHk0Q=m1=Q(tZ|Too0@fnt^IhP4zyqEK{t;Ldi9}MLgn;=W;FkcG01qKfSq_u}
ztAU>Zzt^8F(_iUEG_e~vNdxQzE<!YO72-Sh0%rsF1NZ6QUIkp8|LxY+Rv+STkGHk8
z9aeb!00H1SU=8pezzPlG4MZbx#EfnN+JS3;7R0=kFkzDKYj9P-uMla^Mgqc>z>SC&
z&y7Z-*GD3evDVhsV#H^T)!)18a0pECfoL?^0u&?BA_i;(K8r-02qL|oAZBwua4F&o
z3xGc&(!2r~2L2Oq^6L?Q`Z*%qSAkl6=4jxoTW-1KOPbKJK)-(0VXZ?oundVPzW{y%
z%mac*C@e%mWDxil#2-%5-`fr35a|XGQ`-lu1HP!AYazbzeME~#0gw0g_SW|I_x~IT
z#k+v3+S=NN4wt~8QD_Vp(8P8FC+g4hCBat_t%NoB1QHt00)C8`$u`99U(wIH3NfS8
zfoFilz>~l!yLRn*rlX_dZw<q!3xz`O0RMa>;HMDKwar$fM0kRUr~(ku`%K_RNNDsB
z=e!JY+E<Y*+=@8%#YhA?T?^x{ft|oC&+|HadwWk992`6c@K;n+^dEQJab0a~ZP_CM
zKZOABcZf8<g2eixnJ}>ty&nLM)8u}KIPSNQcz-`o4P1^mU_BC2L40Hnu-|pvviA1&
zvtqHB>GS!F*|TSl)Ya8JhvbPPUXux|0BpoIdywdoCorh@%}m(+8YKFpfisb?`>=k_
zQ~Hbr90ZO5wx!eQ=KcHk+oPkSEk2)*ii(PxYHDicBbxcd1m+`>H8rTRN%#Bpz6B|v
zQ$QCIp?(i60&Ye^s~<5h5XVmdjXQVle5kXt^X7CqJz|>X;G8*gXl`!ajpUSrz}#pw
z8vIxUbkR0L0|P0E{gVh3>Af5Ai&v270`M4O=c7n?1SrsZ4#*A-4HYDl$$xiUx6Cxn
zw-zi|@L(Vi$e$}l>Lim1UpwrTH<3CGct0XNSKrGMDAT*8&u&C~#708mok-ZNKji$*
zfq{X!U0q!xe!pK$n>KB<zP^65QfivMU#<6YpequIB#x9o9$=H+#}IRInTY=Y`5&|q
zDfb~cVlz^9lpy8wX^5lG_B_wqzJ2>yeSLjJuIr{68XCe44Gn9RQpZnvUa8){47?tV
zM)LwV?3LF*quv*302Lb4sQx@J(GvZg81Pqs0+s^*1^hjdA8xg6dueB9X9D<^VHi|Z
zRsFK6s_HhxhfZZ|tX94Kc8}V$X(dHP5RWfbiA1#*3jJaIiWN@-PXn8ld)`Ne)jWZ`
z^PGZIkohlW^q#lrLcM<p@fnaZ;{n7M#s&um-yRwox;B|ib`};EPH${%e6z5yFahi$
zlW8&Ty|-9x-@XFNGJrb6FbD-q6im+ySaq(1+?7Cjy;8RUKV9y5)<+RYB4%+i(l(w5
z3?a_DbJDrIlb?=c+0{t)eH7^L>FK$CaB%Qffa~}Bdzzb@8%@)^4>(7?{`wYU{rVdj
z7$_<$3Q=BKNO3TLKj=ppV#%KCDl2D^8nYP6WQ&H=nX7>_)+_a$<({|WFA+!~&UiLb
z!(0IT0m+`vArprlCZbUfQs1vZOlj+`UAxxha=BX!!w8$E`Rv@ebL$MlfLw03dh*Ge
zjYl4FOrK#k)s|BhF2<~#j#)PyqqGba7FX~_61a(B3VXUK@9k!IB*l9J@kO@dzP4Ve
zD}mdVd!GB}2<$^l=U61$-il<@Un6C~UZ5FCYTp6w0p<X=zxn2ygG#BjhG7(j!{O&=
z&YZawDYYLk?!NmD_2P@FtSIDbtei%{j2W17kAaX_qZ<qoIA$SEGKsr;H&oPOR@7o1
z)k5W-9TbNSsLp|ee>k04gS4tEClkm=p(GL+`t_mtNDL1k{qKoLJ@YxFzWFiGVB7Wu
z?d|O|48!<|&*v*BFE5YIoH_F`4Zcrp+BBwKe6g-NT*RE3auukbfiY_yuI1n+lQ@Y4
z=JCf<d)|4}Uvde#ni||>QZCEEY??=~u7No<WvV({1aRqkrB41!1Y$@s*@wjWywpvk
z4O|So2`o*eQs?j8yZ3V78-`(ItE#G2PoF-$4ypSG85+9Ec;bmjFyN=YB8-!BF{<lv
zk|~^I5+|7?)!ogsB}>M^gc=*MhKI-R+o=?)rU57GP+t)y=r=v!-t|h2C%n7~bs|ya
zfF`qBo6#G<TqL<A5oc{prBV-dbadRLlxhU_HZ?UpR#a593h|NGfJ==>AAN*aOf^lf
zMA;6GS%{OII@=nH$8oKR0Am&xGd46tu%KYdImaKuv_@&Fnr7_ojx{5l+ZE#)h(sa|
zGF{t<B&)FgdnYoKiX-9exsj2P&+pl@XR%VM(eu2gTUuIPDJm-Z5fZf`z^$sQ>oK);
zYjt(Fh>}o%vHm!AB7r+HGUZa43~o9-4%AL2aZ{-eoO2Q*Wc%ZkgaTBBi#*`+^-9g2
zY(i+s4Ir_90n*nNAZ?)oZ0_ytUA1@b-k9I-pA`y)HZ54N;APV^&jofM<@hDQI`za8
z?RXy5;X>@>C~h`~6OUuZ<KyPxB$IfV3|2fo4j|jxi#Iwt<%}JV<HX}QISXqfO-;B^
zY20TXO5kP0exFC2_cWx$*y?$n(b3Vdw!goB4nS>ft#i~-N8P8Cx=NebMM!@z7dS)h
z+0$$q2BCl-JEL===aK8^5HOPo3=WP1$aZ(5CKHIq$#ryq9{o6(9KnDeQz;ktI!x_}
zUqO=6b->-g4}jT;MB=AILqny>WODA<*w~JF^XAPdEiHWynby4u{1E8_0!Yhw4v9p4
z*zW_t%}&_3XWLkPeW*YHBM=Z$lL(A;bz!7Zc%Fxw%i-m6<KO|DoP`3y0n-@DT8pP>
zAQFkZi?oOHkz($<*=+V;XJ_Yc`}_Ofux-12;lhPYrKP16S~KgANx~yY$96LCJu;bp
z!m<bj`~t+XnX)_&FPjw&q*7S1*n|eUx^PBD<X$#A1w4Rf+2DDEf&qYO>y-)~I+dsf
zo(10R>+7rQ>gpPFT{q<S``>SAY1vp%P~g*~bHKL|)7gY%@YTTgR7c0nz^XvNlpp+%
zr4%RwOa<2PL=W%w_h9-3x95T9et-k6WfKUD!>&A(z&hZXp`oFRVzF3dFc>5p4%5)k
zu)r{kWlSWu9Pk3t;BQ3=IvY6ID=$A4z_J{SlBthZ3Jf0@hFqQjnSFZza8fC}{%-t%
z3Gi<Iawdovrio?ci)4nU{KB?v+jf+dmAyAQIvN9pN=iyL&zLde5v9~3q*<>*W;Zt=
zEoB)p1XzbethLnEo`lcGST+ZS!tk58mW|IR;Pbm-2%*GF+sGd5VtCUt1Puqje?s!E
zBLo}+90yQ7FccZ_tJHGO8yzRm+S(cfR*jC1o)HKHs%vU$UaG07$spy!<A}XqjMV+N
zBR#{Rs~uQLAh0r-&CUccf_{`I1bpUH0)_#hOq`b%&cV&)s3`!yZ<6$VLPBY>1pNRc
zvzCh_TZuxgt*zx+sx8@Uc5hQt(}v2*%CMIBEKQ;qY0%q|gqL8VfzN6aS_J&iTe@_5
zZo>w0ISYSb0LRMUGr^ohAiviIA#LXf6hgq5YCetwuF~KEUty4(Wn+1sfga<Vt*xyJ
znJ6@CvshJGS-A-K0`M+UeOmeoB5h!;zTbj$bNNOG0PomiQ5!Z8OJ|r-8OF|zqC9It
z3zLX=pIO56D}IJE(97ucmtqd}joZC4z|r9GnV6+TbPwc5RQwL~`+?Th)`iGRh#T74
z+L8d#X!Hi8xv4{H91qFV2M)R3M}`5tS|dTA+jrrG50lCK&BDeiiu~XW4dC->E$GWt
zQ23i?DE-1x0J?9zj?k}H<2oXJ$Ck^sfwD?cmg23B0e}aVd)~LlO{lG{?QLWnK6%}V
z)Ivui_MXy`caY}aLrRWIkV4SYWOf02oolZh_N`uR@9T@3i)K|}loVr(rN+(2=Yw<(
z)b1VQ1V;Dn#OJ|yaM$6~3>9Ms0=(PV?;<tV#d(k)^^)&vh^_gM@!?Lyr1I113^F<o
zB6Fho$h2ZEFjH;Wk~QwStE922n3=U<R5pcgEQx7)n10c~d+89<PFsdEGEDmU=a^UN
z;W%JhU^@!iUxFJf=DnT~I{Q-qXD|1>hYyQ@Ch>VK^%Ic#V<uu&3h5tWnp6y_T9Zg-
zP68vws#TY%o}L8_6@@g_mlD9iml?)1EKC#9HpIsuU_yBz1bqVD@=UB?8MbG#|KJD*
z2GRfzE%&@{PR4h*?}^Vv!ssC4=m+&J0~xi{A$@ZdlcsB)=iwxieZD*H$eQoGGqW)0
z^A<FfsgmLVrklmU!cPuENsZ$uKQ4Z30=PziMB1W#f80%v*@gwtx8VnCVaS^V`mo>B
zN2Afjz;Brt!X^>tU5PmPnfmWEdNyiV)?h3as~Z^^nHId~9&c7}@1+Km%&sY<wk$|-
zu^;6#$HOFm=Q<=)IeLb3bo8WgA-)r?z6mxUnjP^x&pBcOnuH&5*v}%)?P{?3Vc0U{
z&1L~$*|z=1ef#!3zGlsuKjm_{;1Z}g53VZF6K=l`w>W4R#RYy8kjz-5#$3;GQ3%>C
zcfpOXiFsxa2ab7@=0rzC;1Dv+$eWoNNNzBZ;nqeZq3v9;VnqTeH%c`rAK?2sG@b-Y
zE8wI6)R<y^*bvJ>Zwy}82G4GkR@X&*FoXX87#~{$N4k`f0s!%gAd)BY6|Hf|znKJf
z^6nx@G>e4q?8owfPe5Wa*gRnMA$y*H$Has@|98G;cfCUfTmK8dzotT*`aI_V0000<
KMNUMnLSTZZn#Iik

diff --git a/panels/user-accounts/data/icons/print_error.svg b/panels/user-accounts/data/icons/print_error.svg
deleted file mode 100644
index 4ad6bee..0000000
--- a/panels/user-accounts/data/icons/print_error.svg
+++ /dev/null
@@ -1,525 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!-- Generator: Adobe Illustrator 13.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->
-<svg
-   xmlns:dc="http://purl.org/dc/elements/1.1/"
-   xmlns:cc="http://creativecommons.org/ns#"
-   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-   xmlns:svg="http://www.w3.org/2000/svg"
-   xmlns="http://www.w3.org/2000/svg"
-   xmlns:xlink="http://www.w3.org/1999/xlink"
-   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
-   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
-   version="1.0"
-   x="0px"
-   y="0px"
-   width="48"
-   height="48"
-   viewBox="0 0 36.184 43.865"
-   enable-background="new 0 0 36.184 43.865"
-   xml:space="preserve"
-   id="svg2419"
-   sodipodi:version="0.32"
-   inkscape:version="0.46"
-   sodipodi:docname="print_error.svg"
-   inkscape:output_extension="org.inkscape.output.svg.inkscape"
-   inkscape:export-filename="/Users/mlanglie/Desktop/print_error.png"
-   inkscape:export-xdpi="90"
-   inkscape:export-ydpi="90"><metadata
-   id="metadata2435"><rdf:RDF><cc:Work
-       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
-         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /></cc:Work></rdf:RDF></metadata><defs
-   id="defs2433"><linearGradient
-   inkscape:collect="always"
-   id="linearGradient84104"><stop
-     style="stop-color:#fffffc;stop-opacity:1;"
-     offset="0"
-     id="stop84106" /><stop
-     style="stop-color:#fffffc;stop-opacity:0;"
-     offset="1"
-     id="stop84108" /></linearGradient><linearGradient
-   id="linearGradient84076"><stop
-     style="stop-color:#73d216;stop-opacity:1;"
-     offset="0"
-     id="stop84078" /><stop
-     id="stop84090"
-     offset="0.31459025"
-     style="stop-color:#73d216;stop-opacity:1;" /><stop
-     style="stop-color:#4e9a06;stop-opacity:1;"
-     offset="1"
-     id="stop84080" /></linearGradient><linearGradient
-   id="linearGradient3531"><stop
-     id="stop3533"
-     offset="0"
-     style="stop-color:#9b9b9b;stop-opacity:1;" /><stop
-     id="stop3535"
-     offset="1"
-     style="stop-color:#414141;stop-opacity:1;" /></linearGradient><linearGradient
-   id="linearGradient3483"><stop
-     id="stop3485"
-     offset="0"
-     style="stop-color:#000000;stop-opacity:1;" /><stop
-     id="stop3487"
-     offset="1"
-     style="stop-color:#787878;stop-opacity:1" /></linearGradient><linearGradient
-   id="linearGradient3263"><stop
-     id="stop3265"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     id="stop3267"
-     offset="1"
-     style="stop-color:#ffffff;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient3247"><stop
-     style="stop-color:#52a714;stop-opacity:1;"
-     offset="0"
-     id="stop3249" /><stop
-     style="stop-color:#398800;stop-opacity:1;"
-     offset="1"
-     id="stop3251" /></linearGradient><linearGradient
-   id="linearGradient3233"><stop
-     id="stop3235"
-     offset="0"
-     style="stop-color:#398800;stop-opacity:1;" /><stop
-     id="stop3237"
-     offset="1"
-     style="stop-color:#84c706;stop-opacity:1;" /></linearGradient><inkscape:perspective
-   sodipodi:type="inkscape:persp3d"
-   inkscape:vp_x="0 : 21.932501 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_z="36.183998 : 21.932501 : 1"
-   inkscape:persp3d-origin="18.091999 : 14.621667 : 1"
-   id="perspective2437" />
-	
-	
-
-		
-		
-	<filter
-   inkscape:collect="always"
-   id="filter3471"><feGaussianBlur
-     inkscape:collect="always"
-     stdDeviation="0.057808254"
-     id="feGaussianBlur3473" /></filter><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient3233"
-   id="linearGradient3517"
-   gradientUnits="userSpaceOnUse"
-   x1="25.144751"
-   y1="43.865002"
-   x2="25.144751"
-   y2="23.838018" /><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient3247"
-   id="linearGradient3519"
-   gradientUnits="userSpaceOnUse"
-   x1="30.691881"
-   y1="23.365002"
-   x2="30.691881"
-   y2="44.365963" /><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient3263"
-   id="linearGradient3521"
-   gradientUnits="userSpaceOnUse"
-   x1="26.455547"
-   y1="24.322035"
-   x2="26.455547"
-   y2="30.466549" /><linearGradient
-   gradientUnits="userSpaceOnUse"
-   y2="55.692348"
-   x2="18.072493"
-   y1="29.205048"
-   x1="21.55229"
-   id="linearGradient5138"
-   xlink:href="#linearGradient5132"
-   inkscape:collect="always" /><linearGradient
-   id="linearGradient5132"
-   inkscape:collect="always"><stop
-     id="stop5134"
-     offset="0"
-     style="stop-color:white;stop-opacity:1;" /><stop
-     id="stop5136"
-     offset="1"
-     style="stop-color:white;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient1913"><stop
-     id="stop1915"
-     offset="0"
-     style="stop-color:#73d216;stop-opacity:1" /><stop
-     id="stop1917"
-     offset="1"
-     style="stop-color:#8ae234;stop-opacity:1" /></linearGradient><inkscape:perspective
-   id="perspective84036"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 24 : 1"
-   sodipodi:type="inkscape:persp3d" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient84076"
-   id="radialGradient84088"
-   cx="26.183998"
-   cy="40.111427"
-   fx="26.183998"
-   fy="40.111427"
-   r="10.5"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(0.9228377,7.3282173e-8,-7.9001009e-8,0.8924238,2.0204218,4.4167191)" /><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient3263"
-   id="linearGradient84092"
-   gradientUnits="userSpaceOnUse"
-   x1="26.455547"
-   y1="24.322035"
-   x2="26.455547"
-   y2="30.466549" /><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient84104"
-   id="linearGradient84110"
-   x1="28.185518"
-   y1="22.649143"
-   x2="27.596079"
-   y2="42.648415"
-   gradientUnits="userSpaceOnUse" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient84076"
-   id="radialGradient84134"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0862379,-2.5925308e-8,1.5464794e-8,0.8186283,-2.2580516,7.302016)"
-   cx="26.183998"
-   cy="39.098457"
-   fx="26.183998"
-   fy="39.098457"
-   r="10.5" /><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient3263"
-   id="linearGradient84136"
-   gradientUnits="userSpaceOnUse"
-   x1="26.455547"
-   y1="24.322035"
-   x2="26.455547"
-   y2="30.466549" /><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient84104"
-   id="linearGradient84138"
-   gradientUnits="userSpaceOnUse"
-   x1="21.515692"
-   y1="23.09075"
-   x2="34.488232"
-   y2="40.661182" /><filter
-   inkscape:collect="always"
-   id="filter84266"
-   x="-0.07103052"
-   width="1.142061"
-   y="-0.5276553"
-   height="2.0553105"><feGaussianBlur
-     inkscape:collect="always"
-     stdDeviation="0.45756194"
-     id="feGaussianBlur84268" /></filter><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient3263"
-   id="linearGradient84277"
-   gradientUnits="userSpaceOnUse"
-   x1="26.455547"
-   y1="24.322035"
-   x2="26.455547"
-   y2="30.466549" /><linearGradient
-   id="linearGradient5171"><stop
-     style="stop-color:#fe3a00;stop-opacity:1"
-     offset="0"
-     id="stop5173" /><stop
-     style="stop-color:#c00;stop-opacity:1;"
-     offset="1"
-     id="stop5175" /></linearGradient><inkscape:perspective
-   id="perspective7871"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 24 : 1"
-   sodipodi:type="inkscape:persp3d" /><inkscape:perspective
-   id="perspective7973"
-   inkscape:persp3d-origin="14 : 9.3333333 : 1"
-   inkscape:vp_z="28 : 14 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 14 : 1"
-   sodipodi:type="inkscape:persp3d" />
-	
-<radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient5171"
-   id="radialGradient8812"
-   cx="26.184002"
-   cy="39.797016"
-   fx="26.184002"
-   fy="39.797016"
-   r="10.65866"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(0.9444304,0,0,0.7220468,1.4550326,11.504981)" /><linearGradient
-   y2="40.661182"
-   x2="34.488232"
-   y1="23.09075"
-   x1="21.515692"
-   gradientUnits="userSpaceOnUse"
-   id="linearGradient84279"
-   xlink:href="#linearGradient84104"
-   inkscape:collect="always" /><linearGradient
-   y2="30.466549"
-   x2="26.455547"
-   y1="24.322035"
-   x1="26.455547"
-   gradientUnits="userSpaceOnUse"
-   id="linearGradient9095"
-   xlink:href="#linearGradient3263"
-   inkscape:collect="always" /><linearGradient
-   y2="40.661182"
-   x2="34.488232"
-   y1="23.09075"
-   x1="21.515692"
-   gradientUnits="userSpaceOnUse"
-   id="linearGradient9089"
-   xlink:href="#linearGradient84104"
-   inkscape:collect="always" /><linearGradient
-   y2="30.466549"
-   x2="26.455547"
-   y1="24.322035"
-   x1="26.455547"
-   gradientUnits="userSpaceOnUse"
-   id="linearGradient9087"
-   xlink:href="#linearGradient3263"
-   inkscape:collect="always" /><radialGradient
-   r="10.5"
-   fy="39.098457"
-   fx="26.183998"
-   cy="39.098457"
-   cx="26.183998"
-   gradientTransform="matrix(1.0862379,-2.5925308e-8,1.5464794e-8,0.8186283,-2.2580516,7.302016)"
-   gradientUnits="userSpaceOnUse"
-   id="radialGradient9085"
-   xlink:href="#linearGradient84076"
-   inkscape:collect="always" /><linearGradient
-   gradientUnits="userSpaceOnUse"
-   y2="42.648415"
-   x2="27.596079"
-   y1="22.649143"
-   x1="28.185518"
-   id="linearGradient9083"
-   xlink:href="#linearGradient84104"
-   inkscape:collect="always" /><linearGradient
-   y2="30.466549"
-   x2="26.455547"
-   y1="24.322035"
-   x1="26.455547"
-   gradientUnits="userSpaceOnUse"
-   id="linearGradient9081"
-   xlink:href="#linearGradient3263"
-   inkscape:collect="always" /><radialGradient
-   gradientTransform="matrix(0.9228377,7.3282173e-8,-7.9001009e-8,0.8924238,2.0204218,4.4167191)"
-   gradientUnits="userSpaceOnUse"
-   r="10.5"
-   fy="40.111427"
-   fx="26.183998"
-   cy="40.111427"
-   cx="26.183998"
-   id="radialGradient9079"
-   xlink:href="#linearGradient84076"
-   inkscape:collect="always" /><inkscape:perspective
-   sodipodi:type="inkscape:persp3d"
-   inkscape:vp_x="0 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   id="perspective9077" /><linearGradient
-   id="linearGradient9071"><stop
-     style="stop-color:#73d216;stop-opacity:1"
-     offset="0"
-     id="stop9073" /><stop
-     style="stop-color:#8ae234;stop-opacity:1"
-     offset="1"
-     id="stop9075" /></linearGradient><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient5132"
-   id="linearGradient9063"
-   x1="21.55229"
-   y1="29.205048"
-   x2="18.072493"
-   y2="55.692348"
-   gradientUnits="userSpaceOnUse" /><linearGradient
-   y2="30.466549"
-   x2="26.455547"
-   y1="24.322035"
-   x1="26.455547"
-   gradientUnits="userSpaceOnUse"
-   id="linearGradient9061"
-   xlink:href="#linearGradient3263"
-   inkscape:collect="always" /><linearGradient
-   y2="44.365963"
-   x2="30.691881"
-   y1="23.365002"
-   x1="30.691881"
-   gradientUnits="userSpaceOnUse"
-   id="linearGradient9059"
-   xlink:href="#linearGradient3247"
-   inkscape:collect="always" /><linearGradient
-   y2="23.838018"
-   x2="25.144751"
-   y1="43.865002"
-   x1="25.144751"
-   gradientUnits="userSpaceOnUse"
-   id="linearGradient9057"
-   xlink:href="#linearGradient3233"
-   inkscape:collect="always" />
-	
-	
-
-		
-		
-	<inkscape:perspective
-   id="perspective9051"
-   inkscape:persp3d-origin="18.091999 : 14.621667 : 1"
-   inkscape:vp_z="36.183998 : 21.932501 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 21.932501 : 1"
-   sodipodi:type="inkscape:persp3d" /><linearGradient
-   id="linearGradient9045"><stop
-     style="stop-color:#398800;stop-opacity:1;"
-     offset="0"
-     id="stop9047" /><stop
-     style="stop-color:#84c706;stop-opacity:1;"
-     offset="1"
-     id="stop9049" /></linearGradient><linearGradient
-   id="linearGradient9039"><stop
-     id="stop9041"
-     offset="0"
-     style="stop-color:#52a714;stop-opacity:1;" /><stop
-     id="stop9043"
-     offset="1"
-     style="stop-color:#398800;stop-opacity:1;" /></linearGradient><linearGradient
-   id="linearGradient9033"><stop
-     style="stop-color:#ffffff;stop-opacity:1;"
-     offset="0"
-     id="stop9035" /><stop
-     style="stop-color:#ffffff;stop-opacity:0;"
-     offset="1"
-     id="stop9037" /></linearGradient><linearGradient
-   id="linearGradient9027"><stop
-     style="stop-color:#000000;stop-opacity:1;"
-     offset="0"
-     id="stop9029" /><stop
-     style="stop-color:#787878;stop-opacity:1"
-     offset="1"
-     id="stop9031" /></linearGradient><linearGradient
-   id="linearGradient9021"><stop
-     style="stop-color:#9b9b9b;stop-opacity:1;"
-     offset="0"
-     id="stop9023" /><stop
-     style="stop-color:#414141;stop-opacity:1;"
-     offset="1"
-     id="stop9025" /></linearGradient><linearGradient
-   id="linearGradient9013"><stop
-     id="stop9015"
-     offset="0"
-     style="stop-color:#73d216;stop-opacity:1;" /><stop
-     style="stop-color:#73d216;stop-opacity:1;"
-     offset="0.31459025"
-     id="stop9017" /><stop
-     id="stop9019"
-     offset="1"
-     style="stop-color:#4e9a06;stop-opacity:1;" /></linearGradient><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient3263"
-   id="linearGradient9115"
-   gradientUnits="userSpaceOnUse"
-   x1="26.455547"
-   y1="24.322035"
-   x2="26.455547"
-   y2="30.466549" /></defs><sodipodi:namedview
-   inkscape:window-height="733"
-   inkscape:window-width="1263"
-   inkscape:pageshadow="2"
-   inkscape:pageopacity="0.0"
-   guidetolerance="10.0"
-   gridtolerance="10.0"
-   objecttolerance="10.0"
-   borderopacity="1.0"
-   bordercolor="#666666"
-   pagecolor="#ffffff"
-   id="base"
-   showgrid="false"
-   inkscape:zoom="10.958333"
-   inkscape:cx="16.307224"
-   inkscape:cy="24"
-   inkscape:window-x="6"
-   inkscape:window-y="140"
-   inkscape:current-layer="svg2419" />
-<path
-   id="path2424"
-   d="M 11.485207,8.6743869 C 11.872117,8.5219533 18.066562,7.5772471 17.547442,14.819684 C 16.836811,24.751336 10.199071,21.863582 8.4570051,28.091683 C 9.1530536,27.855507 9.3319265,27.184615 9.77036,26.633222 C 11.09052,24.971517 11.912946,24.144427 13.199081,23.591154 C 17.777838,21.620819 20.261644,13.237019 16.405184,9.3659791 C 14.958646,7.9131637 12.270692,8.0514823 11.485207,8.6743869 z M -0.41567362,30.622819 C -0.62079412,30.073309 -0.81036052,29.508743 -0.98534482,28.932886 C 0.28134733,30.510848 2.408639,29.511665 3.7800623,29.851546 C 7.7792565,30.842672 10.201988,29.700696 12.4972,27.002072 C 14.538683,24.600785 15.730521,26.026314 17.692291,22.415916 C 18.187107,21.506024 19.527682,20.515211 20.049718,16.478567 C 20.335526,14.26641 21.73087,14.007651 21.560747,12.407106 C 21.300215,9.95501 21.209476,9.6012157 20.182901,7.9460967 C 18.706228,5.5636294 16.443158,4.9249489 14.396731,4.9187631 C 12.674334,4.9140584 11.84411,5.6088349 11.260829,5.8365431 C 15.390232,4.8356399 18.977454,6.2618089 19.977781,8.6743869 C 20.486207,9.9004346 20.744795,10.273048 20.835204,11.578136 C 20.978108,13.644446 20.307334,14.416019 20.263588,13.790293 C 20.079855,11.11331 19.152438,7.8049552 16.050354,6.738867 C 14.094417,6.0670338 11.302445,6.5779657 9.6303729,7.8454158 C 7.5908326,9.7988133 6.4952361,12.616937 6.4952361,14.474358 C 6.4952361,18.037708 6.4689884,19.168722 5.854599,22.494014 C 5.596011,23.89696 4.6627611,25.357303 5.2022963,27.278709 C 5.9975029,26.985134 6.7110502,25.878585 6.9949136,25.111717 C 8.9868188,19.727642 10.292396,20.99227 12.343602,18.829042 C 12.831614,18.314346 13.669595,16.922691 13.771669,16.409877 C 14.018591,15.167833 14.629092,12.200099 12.557472,12.269729 C 10.832904,13.36875 11.557145,15.649595 10.237957,17.872102 C 12.271664,16.963152 12.138481,13.127869 12.885082,13.037538 C 13.533495,12.95944 13.493638,14.504468 13.351707,15.328734 C 13.046456,17.100529 12.422345,18.101693 11.019554,19.120734 C 9.9006261,19.933709 8.8604412,20.065441 7.8484484,21.773252 C 7.6579099,22.073413 6.3027534,25.346012 6.134574,25.654641 C 5.2858998,27.216607 5.3879741,25.564311 6.3212239,22.946607 C 6.3212239,22.946607 7.2311425,20.110606 7.1115699,17.014904 C 7.0571303,15.581848 7.1368454,9.9201951 10.843597,7.9150456 C 12.438871,7.052201 14.9149,6.5102179 16.620025,7.776727 C 21.95802,11.740919 19.47227,21.463682 15.405828,24.214058 C 13.770697,25.320606 12.413596,25.389296 11.019554,27.516768 C 9.932706,29.17565 6.8500655,30.289726 4.7074794,29.321496 C 5.5649027,28.845379 6.8957558,28.803036 7.2787772,27.73883 C 10.085332,19.931827 15.530262,23.306048 16.183536,14.966471 C 16.414904,12.009088 14.877959,9.6953099 12.69746,9.6953099 C 10.466409,9.6953099 8.9664042,12.675276 8.6281009,15.440706 C 8.4657544,16.774023 8.3782621,18.528881 8.2713273,19.450064 C 10.056167,18.413145 8.4851971,11.162239 12.484562,10.747283 C 15.963834,10.386902 15.66636,14.964589 15.26973,16.96127 C 14.967396,18.483716 14.270374,19.795389 11.270365,21.516375 C 9.690645,22.422502 8.643655,23.573275 7.8426157,25.457043 C 7.3730743,26.56171 6.4126046,28.452065 4.547077,28.632726 C 4.3332073,28.653426 3.9268547,26.573943 3.8004772,25.47304 C 3.6138271,23.848031 4.453752,22.765006 4.7327549,21.015793 C 5.0438382,19.072746 5.2615964,17.525836 5.2781228,14.197721 C 4.4936096,9.0893427 5.2917327,7.5791289 7.4226532,5.1562011 C 9.9142358,2.3220811 12.045219,2.0705493 13.508882,2.0570557 C 15.652565,2.0393053 16.899028,3.5509526 16.263252,3.4276891 C 14.62326,3.1105913 11.630055,2.6909308 9.0577845,5.2945196 C 7.6229131,6.7454536 6.0402768,8.6122845 6.2084562,10.886543 C 6.8802017,7.6195895 10.334508,3.7516736 13.747676,3.7516736 C 17.577206,3.7516736 19.976808,5.1712562 21.120039,7.0155042 C 22.280769,8.8889209 22.761976,10.297513 22.761976,12.822062 C 22.761976,14.686071 21.730541,15.451057 21.262943,16.962211 C 21.083098,17.542773 20.463848,19.045459 20.191651,20.211286 C 19.097998,24.896241 18.309596,27.152622 14.271346,30.220096 C 12.511782,31.556235 11.111907,31.646565 10.179629,31.285243 C 10.187406,31.13281 12.366934,30.934272 13.724035,28.937591 C 15.002392,27.055705 16.650162,27.007717 17.396761,24.840726 C 16.622941,25.778846 15.419438,26.673683 14.41425,27.115925 C 14.130387,27.241071 13.618072,27.886557 13.421701,28.116148 C 11.368551,30.531548 9.713004,31.103642 7.3458545,31.373692 C 7.7220709,31.550589 8.110925,31.687026 8.5231103,31.739719 C 11.53187,32.124565 13.387675,32.163143 15.774267,30.055431 C 19.142717,27.08111 19.696834,25.201106 20.047775,22.967308 C 20.307334,21.313131 21.669648,17.436727 22.261326,15.868175 C 23.094574,13.65922 22.570465,18.105457 22.332292,18.688842 C 20.93825,22.115755 21.500144,26.735784 17.955739,30.380997 C 15.523456,32.882964 12.32416,33.811675 7.1358733,32.637379 C 5.7525248,32.324044 6.253216,31.857336 4.671552,31.373692 C 4.1971499,31.159157 1.6540024,31.013311 1.3623619,31.011429 C 0.72269676,31.007665 0.11997297,30.875933 -0.41567362,30.622819 z M 4.2680743,5.1477326 C 2.8681995,6.7162844 3.1442858,7.9310416 2.2158966,9.2445983 C 0.39119867,11.826545 1.4517984,15.393659 1.0658607,17.99913 C 0.56618308,21.378997 0.52283784,20.110089 0.0065640818,17.990301 C -0.75463862,14.864849 -0.20180392,13.731954 -0.076398418,12.407106 C 0.6186783,9.1298026 1.2262629,7.7560263 2.8691715,5.6887748 C 4.2253003,3.9828454 6.149156,3.0371977 4.2680743,5.1477326 z M 24.036445,36.450079 C 23.488161,37.083333 22.896131,37.673305 22.262298,38.211523 L 21.475841,38.506979 C 18.241547,39.711387 16.58114,39.821477 11.857534,39.082837 C 9.932706,38.781735 7.3050248,38.411944 5.4978253,39.277612 C 6.5839482,39.510065 10.395401,38.361053 11.576587,39.986142 C 11.459931,40.156453 9.2113823,39.88358 7.0960157,40.347465 C 6.5837004,40.058595 6.0888836,39.731146 5.6115651,39.367002 C 5.1527173,39.009443 4.8173306,38.720573 4.4926375,38.413826 C 6.9570004,37.030641 10.904842,37.507699 13.34879,37.820091 C 17.581468,38.362075 19.260345,38.181414 21.964825,37.188718 C 22.696843,36.919609 23.388031,36.670259 24.036445,36.450079 z M 26.094456,7.8981086 C 27.151167,9.9813566 28.257457,11.575313 28.257457,14.734999 C 28.257457,18.212845 25.759069,19.908303 25.360494,22.223022 C 24.987194,24.390014 24.927894,26.193802 24.599312,26.193802 C 24.132687,26.193802 23.98395,24.125609 24.054915,22.674675 C 24.126854,21.205864 24.314124,20.404861 24.655344,19.310545 C 25.039337,18.081673 25.62266,15.331577 25.504059,13.251152 C 25.348517,10.505481 25.590559,11.089486 26.303134,12.745546 C 26.769759,13.828571 26.261622,15.950138 26.303134,17.484815 C 27.329709,15.648996 27.135261,12.882863 26.349775,10.877714 C 26.087298,10.20494 25.726989,8.8446969 26.094456,7.8981086 z M 24.622001,9.2587722 C 24.485902,8.654687 23.723397,6.4935811 22.726959,5.2026076 C 21.232786,3.2689699 22.578201,3.6726143 23.649494,4.846911 C 24.696483,5.9948613 25.472289,7.3598893 25.501453,8.680032 C 25.560753,11.39277 25.122651,11.470929 24.622001,9.2587722 z M 28.324534,16.874703 C 28.602565,16.515264 28.874762,18.765998 28.371196,19.556391 C 27.026733,21.665043 27.509885,25.128655 26.639823,27.894085 C 25.254531,32.293934 20.848813,35.618286 15.998831,35.528896 C 19.543236,34.354599 22.714341,33.813557 24.183237,26.840229 C 24.312532,26.225793 25.174816,26.557005 24.397107,29.459814 C 25.254531,28.223415 25.999186,25.124891 26.111954,22.623864 C 26.186809,20.930167 27.729588,18.502534 28.324534,16.874703 z M 0.35036898,7.0776065 C 3.1160939,2.0115701 8.6912897,0.54275818 13.214636,0.54275818 C 16.041605,0.54275818 18.507912,1.0273437 20.818678,2.3550142 C 21.174479,2.6147144 21.713042,2.9355759 22.002738,3.2253863 C 22.938905,4.1653883 21.369626,3.7445623 19.405193,2.8753556 C 15.80217,1.2811182 13.224356,1.5241817 11.057467,1.8713897 C 9.4544161,2.1282671 8.4327017,3.4107521 7.629718,4.1889118 C 4.6705382,7.05126 4.2097461,9.6106249 4.5655476,12.822062 C 5.0068971,16.806955 4.2680743,21.015793 3.3367686,23.309812 C 2.8604223,24.48505 2.9236112,26.011258 3.1365088,26.978548 C 3.5214743,28.723056 5.0173803,29.448829 3.1481744,29.208582 C -0.12595652,28.787761 -0.12403302,24.289333 0.99392257,21.109887 C 2.1361815,17.860811 1.50895,15.966631 1.7492717,13.57764 C 2.8163869,2.8893489 3.1267874,15.841548 3.0655428,16.408937 C 2.7077971,19.726701 2.2340211,20.608302 1.7385783,22.084704 C 0.6727661,25.260787 1.9314335,27.1104 2.2661583,27.366598 C 0.91096007,23.04949 3.2794126,21.655634 3.4660626,16.648877 C 3.5117529,15.433179 3.5311956,14.688893 3.3455178,13.046948 C 2.7748744,7.9799706 4.0814242,5.0574021 6.9725545,2.7097496 C 5.2188225,2.7266866 3.8724152,3.9950776 2.6825216,5.1477326 C 1.376944,6.4114188 0.16469114,9.2935264 -0.21249732,10.402898 C -0.77633582,12.06178 -1.2711526,10.046281 0.35036898,7.0776065 z M -1.1097781,28.513226 C -2.0128918,25.368594 -2.4649347,21.861701 -2.3900803,18.216487 C -2.3609163,16.765553 -2.2306501,15.171597 -1.7834679,13.305707 C -0.91243472,9.6699043 -0.68197602,11.586122 -0.74034592,12.032491 C -1.892347,20.8421 1.6144968,19.138912 -0.52455272,25.744091 C -1.2711526,25.202108 -0.48304042,21.510409 -1.656139,19.312946 C -1.3508469,21.734954 -2.0167804,25.74309 0.62937185,28.271403 C 1.3856931,28.994988 2.8681995,29.389244 0.72269676,29.208582 C -0.014181718,29.14648 -0.61787772,28.901835 -1.1097781,28.513226 z M 0.48744008,32.752173 C 0.31731635,32.398379 0.15496979,32.036116 -0.001544018,31.666325 C 1.0075324,31.547766 3.0567937,31.442381 4.827052,32.187607 C 5.8555711,32.620441 3.7965886,32.40967 2.0000826,32.51976 C 1.3565291,32.558339 0.82574314,32.712653 0.48744008,32.752173 z M 1.3409749,34.366831 C 1.1446035,34.029973 0.95600926,33.683706 0.77422,33.328971 C 5.2207668,32.537638 7.1728144,33.319562 10.628756,33.606549 C 14.190659,33.902946 18.050036,32.097277 19.263261,30.020616 C 19.886399,28.953587 20.061384,28.694827 20.186789,28.414427 C 20.295669,28.171663 20.367606,27.912904 20.662164,27.098048 C 21.315439,25.292378 21.284331,27.753885 21.120039,28.360793 C 20.008889,32.4586 19.076611,31.735955 17.211084,33.542565 C 21.502088,32.007888 22.154392,28.937591 21.595413,24.661006 C 21.461259,23.63726 22.257437,20.869947 22.622961,19.880074 C 22.622961,19.880074 23.390948,17.397867 23.395808,12.997078 C 23.398724,10.126261 22.460614,5.7019479 18.621652,4.0505932 C 17.335517,3.4973188 15.549704,1.9767551 15.549704,1.9767551 C 16.345283,2.4005401 18.263906,2.6674072 20.120685,3.773956 C 20.191651,3.8162985 24.211429,6.0576243 24.612921,11.923462 C 24.802488,14.69548 24.823213,14.824989 24.636563,16.630658 C 24.636563,16.630658 24.522513,18.48748 23.87021,20.022157 C 23.555238,20.876533 23.217907,23.396378 23.404558,24.661006 C 23.836185,27.588279 22.063983,34.896582 14.845879,34.896582 C 11.657275,34.896582 9.7168927,34.487272 8.1906401,34.251096 C 6.8082637,34.036561 4.0143469,33.91612 1.3409749,34.366831 z M 3.9297711,37.852084 C 3.5603597,37.465356 3.2055303,37.055105 2.865283,36.622271 C 3.9113006,36.029477 4.8299684,36.020068 6.6935517,36.070879 C 8.8283608,36.070879 12.045156,36.916786 11.057467,37.195306 C 11.009832,37.207538 6.4806541,36.578988 3.9297711,37.852084 z M 14.733111,41.653493 C 14.310232,41.716536 13.88152,41.763583 13.44406,41.791811 C 11.361746,41.927308 9.4310844,41.515174 7.6851297,40.656094 C 8.5367202,40.538475 10.183517,40.482019 11.744767,40.7022 C 12.669268,40.832991 13.723062,41.288407 14.733111,41.653493 z M 20.761322,39.340655 C 19.332282,40.284421 17.738953,40.992951 16.005636,41.406965 C 14.734083,41.029648 11.984449,40.585503 12.005589,39.75495 C 12.021421,39.132891 15.493321,40.331468 17.489114,40.076472 C 18.855937,39.902398 19.892232,39.635171 20.761322,39.340655 z M 26.76134,32.003183 C 27.309624,31.472491 26.651489,34.623708 23.573708,35.937265 C 21.48945,36.675905 18.394173,38.324437 13.07076,36.917727 C 12.417485,36.744594 10.347808,36.196965 9.8870164,36.103812 C 6.2998369,35.382109 4.4372258,35.597584 2.4064351,36.01254 C 2.1702062,35.685092 1.9417545,35.345412 1.7210798,34.995381 C 2.3753268,34.730976 4.0192075,34.628413 5.200352,34.626531 C 8.9615437,34.619945 14.003037,35.980548 15.996887,36.070879 C 20.670913,36.282591 23.680644,33.000582 24.053944,33.000582 C 24.986221,33.000582 23.179994,34.632178 22.678372,35.082889 C 22.251605,35.467734 24.361138,34.516441 26.76134,32.003183 z M 28.531599,25.021387 C 28.408138,27.148859 28.247735,30.101537 26.467755,31.577877 C 23.628148,33.933056 24.799572,32.277938 26.039044,30.634111 C 28.194268,27.774586 27.297959,21.332891 28.708527,20.0852 C 28.725053,21.437335 28.621035,23.498941 28.531599,25.021387 z"
-   style="fill:#a1a1a1;fill-opacity:1"
-   inkscape:export-xdpi="90"
-   inkscape:export-ydpi="90"
-   sodipodi:nodetypes="cscssscccssssssscsssscsscsssccssscscssssscsssscssssssscsssscsssssscscsscssssssscsccssscsccccscccscssccssssssscsccsssccsscscsccscsssssssssssscsscssccsssccsscccsscccssssscscsscssccsssccccsccscscccsscccssccssssccsscc" /><path
-   sodipodi:type="arc"
-   style="opacity:0.24299999;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter84266)"
-   id="path84140"
-   sodipodi:cx="27.093658"
-   sodipodi:cy="38.810692"
-   sodipodi:rx="7.7301183"
-   sodipodi:ry="1.0405928"
-   d="M 34.823777,38.810692 A 7.7301183,1.0405928 0 1 1 19.36354,38.810692 A 7.7301183,1.0405928 0 1 1 34.823777,38.810692 z"
-   transform="matrix(1.1911672,0,0,2.1266149,-5.0625748,-41.775272)" /><g
-   id="Background">
-</g>
-<g
-   id="Guides">
-</g>
-
-<circle
-   clip-rule="evenodd"
-   cx="26.184"
-   cy="33.865002"
-   r="10"
-   id="circle2428"
-   sodipodi:cx="26.184"
-   sodipodi:cy="33.865002"
-   sodipodi:rx="10"
-   sodipodi:ry="10"
-   style="fill:url(#radialGradient8812);fill-opacity:1;fill-rule:evenodd;stroke:#a40000;stroke-width:1.31732059000000001;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   transform="matrix(1.1263785,0,0,1.1511056,-2.2713556,-9.1997707)" /><path
-   sodipodi:type="arc"
-   style="opacity:0.5;fill:url(#linearGradient84277);fill-opacity:1;stroke:none;stroke-width:1;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path3253"
-   sodipodi:cx="26.455547"
-   sodipodi:cy="27.394291"
-   sodipodi:rx="6.1445141"
-   sodipodi:ry="3.072257"
-   d="M 32.600061,27.394291 A 6.1445141,3.072257 0 1 1 20.311033,27.394291 A 6.1445141,3.072257 0 1 1 32.600061,27.394291 z"
-   transform="matrix(1.1246822,0,0,1.4387643,-2.5144268,-14.969086)" /><path
-   sodipodi:type="arc"
-   style="opacity:0.48;fill:none;fill-opacity:1;stroke:#e64837;stroke-width:1.21842730000000010;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path84102"
-   sodipodi:cx="28.185518"
-   sodipodi:cy="31.917336"
-   sodipodi:rx="10.027505"
-   sodipodi:ry="10.240856"
-   d="M 38.213023,31.917336 A 10.027505,10.240856 0 1 1 18.158013,31.917336 A 10.027505,10.240856 0 1 1 38.213023,31.917336 z"
-   transform="matrix(0.9962424,0,0,0.9957004,-0.8393988,-2.0505383)" /><g
-   id="g7978"
-   transform="translate(103.26268,8.6771365)">
-</g><g
-   style="display:none"
-   id="g7980"
-   display="none"
-   transform="translate(103.26268,8.6771365)">
-</g><path
-   id="path7993"
-   style="opacity:0.55;fill:#a40000;fill-opacity:1;fill-rule:evenodd;stroke:#a40000;stroke-width:1.14231765000000007;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   d="M 27.143847,37.652725 C 26.708227,37.652725 26.326837,37.518032 25.998788,37.249507 C 25.677852,36.974118 25.516939,36.592349 25.516939,36.10334 C 25.516939,35.676959 25.66985,35.315778 25.977452,35.018942 C 26.291276,34.7161 26.672666,34.565107 27.122511,34.56425 C 27.571466,34.56425 27.953745,34.7161 28.26757,35.018942 C 28.588505,35.31492 28.749418,35.676959 28.749418,36.10334 C 28.749418,36.585484 28.588505,36.963823 28.26757,37.239212 C 27.946633,37.515458 27.571466,37.652725 27.143847,37.652725 z M 25.956115,30.858079 L 25.613842,25.912229 C 25.549833,24.94794 25.517828,24.256464 25.517828,23.836088 C 25.517828,23.26472 25.670739,22.82118 25.978341,22.504613 C 26.292165,22.18118 26.702004,22.019893 27.208746,22.019035 C 27.82217,22.019035 28.232008,22.225791 28.439151,22.638445 C 28.645403,23.045095 28.749418,23.633622 28.749418,24.404025 C 28.749418,24.858717 28.724526,25.320272 28.674741,25.787834 L 28.214228,30.878669 C 28.164443,31.484354 28.056871,31.94934 27.893292,32.272773 C 27.728822,32.596205 27.457671,32.758349 27.079838,32.758349 C 26.694892,32.758349 26.427296,32.603067 26.277052,32.293362 C 26.126807,31.976794 26.020125,31.498939 25.956115,30.858079 z" /><path
-   id="path8814"
-   style="fill:#ffffff;fill-rule:evenodd"
-   d="M 27.143847,36.992527 C 26.708227,36.992527 26.326837,36.857834 25.998788,36.589309 C 25.677852,36.31392 25.516939,35.932151 25.516939,35.443142 C 25.516939,35.016761 25.66985,34.65558 25.977452,34.358744 C 26.291276,34.055902 26.672666,33.904909 27.122511,33.904052 C 27.571466,33.904052 27.953745,34.055902 28.26757,34.358744 C 28.588505,34.654722 28.749418,35.016761 28.749418,35.443142 C 28.749418,35.925286 28.588505,36.303625 28.26757,36.579014 C 27.946633,36.85526 27.571466,36.992527 27.143847,36.992527 z M 25.956115,30.197881 L 25.613842,25.252031 C 25.549833,24.287742 25.517828,23.596266 25.517828,23.17589 C 25.517828,22.604522 25.670739,22.160982 25.978341,21.844415 C 26.292165,21.520982 26.702004,21.359695 27.208746,21.358837 C 27.82217,21.358837 28.232008,21.565593 28.439151,21.978247 C 28.645403,22.384897 28.749418,22.973424 28.749418,23.743827 C 28.749418,24.198519 28.724526,24.660074 28.674741,25.127636 L 28.214228,30.218471 C 28.164443,30.824156 28.056871,31.289142 27.893292,31.612575 C 27.728822,31.936007 27.457671,32.098151 27.079838,32.098151 C 26.694892,32.098151 26.427296,31.942869 26.277052,31.633164 C 26.126807,31.316596 26.020125,30.838741 25.956115,30.197881 z" /><rect
-   style="fill:#666666;fill-opacity:0.75;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
-   id="rect9126"
-   width="1.8060035"
-   height="42.650608"
-   x="-26.038683"
-   y="-24.284592"
-   transform="matrix(-0.6420845,-0.7666339,0.7632254,-0.6461324,0,0)"
-   ry="0"
-   rx="0.018515259" /></svg>
\ No newline at end of file
diff --git a/panels/user-accounts/data/icons/print_ok.png b/panels/user-accounts/data/icons/print_ok.png
deleted file mode 100644
index 4dd615e723014330afd2abf3260cb7e80c5f38f1..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 3677
zcmV-j4x;giP)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm0000PbVXQnQ*UN;
zcVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU<|4BqaRCwCNS_haE<r)5FX6xPF-R_mW
z0*6RPkRl3#6%o{kiUmUyxhO{T(Fk_2L_|Y;RFJ6AAW;D^f*JxM<_RK7kzzQi^m>Ks
zW$*U3Ps#Vsy?ZVvARd^k&&zl_Gyi<${n|e(8HPb^`OKR)&&h|g7}*RjBa>0jI2y;e
zapNNN3xA}aqW}vn1Rlw_mNAs!z^MSk2Z#l`;M{kNzcCiDGXDRY0xWn3KKuoOOZd8o
zF_Tfo=*j5MkQs%H&l%S+T#PFjJs2M|rm!N#|1$+xaD@*K!rK30+`$;k_>i%TF^$oY
zv5)Z$LtLNCC}qrGyv}ICy}cQ~Vm!b~Y&cU2$R`nAP~dAuD&tMY2nhc!1pYe&9SxcY
zFI@qJIy3HO`~hpsX5``ij=Xl4Ut9tH%z}`8L4#3@FTwLEjOQ8uW_$!M)iT}!eS}-@
zWb9&0VB7|pEdj;WvJyjnF$(eGkMJR%F^usZgcV$W8@&HB;~d6t1n?$gq8vs!V+Ug+
z<6F>3#K-N7aiG}-DA<qb)Obccz`_d}{FV`71ffU@;~mDI7>n`UaNKej0s1JY_7URa
zHdtKHXN6cARJ)XMgkfh)KI0x>1=fP+e`Valcmb5yf?$3Z-wCTf%NPK94QQ32gm761
z=JAXtq3l<n+<RDmAbTNnMm)g6_v3@kxCzB*6|%=-P~am7-H0H4hVde!6Ra+%H<3}t
zn9rzTyaXD(g49}wfUX4%Z{p{kd!{IK72|!-<DZOP;H==ejp4!Z1z7MR+;<Sx7qK!O
z!7k`C7lAG;uQE0>3K;89#XkpCC!Z+={IG6}aR9+5K2aR6g*VzU&V!}<Bb7df^eF=O
zamH3g72`3)fv5p18N%Ajp}g?mYH>e%q3dZWzzYb=u7&mELgwJK9Y+zoPb0_$)ow<v
zKa7~zjI>$7xQFo?T8}NrXuDA_iV!oRo><|*k*Di{8yS5-qY}`^f^$9`4>2xexEY@^
zF2j9WQJu4qjb_0B<)D^mCH6wmEL3M<uw2GeDBkyU6^Q5Pv*7xk2?|u<D5~lp{Qt|K
zjt@b<l<^rjzC5AHtA;UFLf|+}<Ileib)(PeDsT?6gM<fr63&<7xC)l7gAl#Y=Ujlm
z-U&*mxZa6tJ0Q4)ch;b;#Gmg0<<4OmTiT=mZp?>k#Ye+AIYE%PBJEH~hvB;=NRI(n
zm_QHl5%WM81+gCjUetjMoOj{cJSc8$s|WHypF<~5AT1#qwL{Q#hkzpRZ$-7uL($8`
z^?OhwgkkPST}VUQK?#b8>x<e_(BcAi#IXsSR$-a=5aNzkZal0C3amiNOok#ukzu+c
z6-Pjq9mq1G)fkwtUfeLES=^3+>1Tc7oI4vw;bJjxq{F?DRu6JR2_LT2Q5!^_9}B9@
z0=<Owe*<ss$2p<ol`$jiEsO3b-yi<^A)Ay$LEYCotT$#@CHv<eOfUEng>dDUj~J0t
zRUpp2A*hnE1P%)!lUl{X@PryM4-fnpaj+3hpQsPNN1+l1+7>fH=Wg)Nag{_13p67p
z%aW3t;_y&PvWH~Nk=q!o%|Yw(kXUQ@bV<~asjNusrxfrb6AT8QFGQ~*hM8?pz<_}9
zid=<CDl*YR1o#99AA;q*$WCL6Bb(L~1{S;+lbe#e=Jq4ED}!9lX2)uJvwXUtOEEP<
ztO(WkE0Zhhi=Q#b7|Du^WhHi=Oo2wE$X~<VccX{70v61|^c7EkWvIrlA%BZ&9!Bre
z3vnSTv7s8#l0Bj2mu(4rdQnbl2TRZV%gJiBklm8RaFHy@WL4~J9i22yC6$exWOq|)
zawd6PnRKvxXWytA-poooC7#EM=qFO(0J2OUl=(L>1I$4F7U#RcGh#NLgW!J+G+K-z
zI0vyJ#>TlD{O`R}65B+*+YeFNXLh1wM;Z&QP;(p4VjCJo)Zh>OJ^$x+W>I=lE~PoW
zWV1S@lB)gIx~9rk`E+~G>$nt3MbXJa6^^IUUC11>k!5CpI#~!(CmOi;fTE#FSL_de
zqa2BB@Lte)1Y0ys$VS2Fsqd~xl0@k)?oK3Kl4Y4{8p|iLCq7{>tZSV{8<1)0kP`R8
z+WSBWaou`&XB!j|Ex^@itBcV>TnXVTgL?h*-v^i8-XWtWrMWzGxNbXzVt!Vj;gn&O
zZPYDmAi0yWDa(^fR*PM@Z4N8pXzhWbgf20JuCXtMk8ZGP0Kqx|sd79#FcUj+vlCL~
z6Waodmg-7G>YUq~iha8&szoReJ@xUoWBR!?Zr}^#w5HH^MPJan8y=$^PkXtf`e0Yg
z9Z$4)fGePeO1uohrlXjBj}%x1g;t@NE62<`7VU#ru#z!GjG{iZbm@Wcn)Dud=Tlho
zQ>kw+HH4~9+49}J18Mx=mrddQ;W~P2)g-F$6_dl^q|_w0@WP|)g-)%TxvdZ)1Yt{2
z%#K1S(M|piX>uaARt6z+ZN+RLVqor$;Ae$NHW#^5GU;&bb`DsbR6R-+jfdC^zLN@n
zNvF|NFlZWCm_Fj3=f4<DWetZoJ4L7|T2CpiGzoH#YOTN~%&qHC*hC8L3Q7p7J%B)0
zfJ!LxAI2n%hk}M9YScr$TwI_G*4rPcYk5Fe4Nz^Mj2gqWCY=O=YBNGw6OBIaNxG%~
z6J{n7pBZ0GpdDqaNs%S8C=x~05XXUqvzVkK29Hso5NUBL(x(_gZh$AUAlzespwO!b
zY_Z$02)&c2&^Ls1U!E%|m4dNGGflSi>p2&b)9&IjALJ6>Krz`*G09Jw5~K$%eVayf
zAK!BAg3T|{%Kh_+%LLhM&0@y1C~53XtJVCXUuy++L%1HGOuVRF530;UyO0fKW}|Q|
zf;U7Jzn9yE2Q^WQY^l@~X=qtIEh&qpUAKasy=pPpoer|vWwO{M6B7o%Nf&k))pG6H
z!;5JCrsqhpNR;fdkYbfgMFgdEL*?(y+~ejru(v3{fvlsgUWfE4qYc=HwpS?iM-(+t
z6)(Zw(R%by;`{NnvBP4+mmJn43L)zVLE3q`nbhd%9YXh9@CFMmn@Wu7_Z$s9yP!q*
zgSA^|=GyTjGl^5&R<b#oud}ex#X2!9#*|XxmuI$~fZj(S-U2!)t<D<>6WbbWP>ELg
z3#8JEl9fy`+;Gkhki}v%ttYUzb|W3C-AbJ@`q9wNcTjn74^t;Z*LQuqWpPm_rhhw*
zG%0KfZ?Vdxt6Z%$gFV0zCF^E9s7)=sUH$QP=B`HSl+obTAS+Eq2f72EsK#v28=C+r
zn5+AKSbZ1ed%Kaxokm9*x3M7nP!^)Idl0>J&DYJAKuaS@Kd|`qjd#(SBMT|XrI?l%
zf(r#Sz|bTPv?Qvotfy!s*2EP#<#;ow7ZtV$iUiT;bVd=o5ydO#IQNQ7cCRAYo(hB-
zJLGz^*$Xns{1m5Crv1K+wED;by0qh%V+1#c?cxt<ec8w4NLI+@u{H~@39Ga9B>|lb
zUPuz(#WWq=0{ut<js<qYyc|^EY^2U%uy6y~hP9wfeD)2Y5j<bSO?T(8tb^fiNY{08
z*ppa@5c5~26i(suw?9n-+m9rN#ntl6^1uO_yYmr~=NY+nlc>Vt!umpR&E&3ZDjg21
z+<xmac0uSwy8ye;QSJhT;=_#vy9l}1iRgyFPfc7a-*%p{Gq_ChHw7p?Er)7jM@Z&8
zE(8oTRnx*<Q>mcO%jUHrv%Fb&Cq=X%rF(5A?@ekk-<dI{;07B)(M1YSDA3T-jx0Ip
zD<<~BD+uO1SXxKdTG9%|7$1ufH=--8SXgu4Qj66xtVfrg6tI?2L~1mJ<4&4<H8C35
zbt2u|{V959>;1H`;vbaEY)<hUyD6bYxq`=7ktoZkD%4mPqpBh^H7{iTkNGJD@-dn9
zKpG8!QU>S}g*Prq*c2#**Y^3f%A95Oe;AeF_FD2gXHlKbUa+tw*$a_~&X!bRX)=R6
zBgerMIaUTuWd&GxJ;q5O%of^Nr>m+iN_$UMpys5nm^c<nu%|NxEyH!7ikh%nEt<TG
z5$s~f`2af`m!~M%BhGi-)==d;O1|m<dF;8QNX-^bPEjZ=(`pJVa=XWC|B>)N3^=m+
zZ%v7xSa|WreR1JW=`|~R;u2W>VkprLtpy=I648L^F1~%}|EzBEqd}_e)h;)WvhrON
zvG~mVZ&ue6No}TCPMa!wE2vTVen0u^%nb@L%-q_R_r&AyUaSgSFF`?*;FTOGm6@>T
z(;WGFQ_1Rvx3o%iSI1OWy3wIaret-iq$})PMKfpNA6uLQj{WSb4pZ5lMxEn8=D+9F
z?xlyfy-#&Ug3zb@rk<4;fa$9bJW`K$U6UaA&DgQ41<f>7RcnL6V5e|6oU)>NrlDpX
zon*7vQoMN?<n}tr>1JU$+Zd8+7B;b{&MDqsAECOk0QoAzoPo$!e~_NpJj?8Mg;yI{
zX05G1HL#-44ZsTy4Z<ElKwpC`cTqFKy!P_a($b|<rcBwu$~dz7Qg-*7=xJLr4Hik!
zYP0C}B&%$-E2aXGNQ@$Zn87u`<W{ta*6jX-rd97W=^4VvTf^(d+N8j7em8L=I#UmR
z8?gji>|#@3Z$Uvp2<Or;Zkn@1$Dwpqc7GbiBg0_DO4;0-nR}_aMm5~4RfOwleMKRC
zRkX_N26PxI6#qR&n?3NeUx7A9sU6DMF(@es8^=nkP2{++iAOzQpH*bVNSk8dG?Yjb
vHZHJqoMT)81JD!x*5V2o#<3e){}o^W#UbLvt-h-~00000NkvXXu0mjfVMOgW

diff --git a/panels/user-accounts/data/icons/print_ok.svg b/panels/user-accounts/data/icons/print_ok.svg
deleted file mode 100644
index ba821ef..0000000
--- a/panels/user-accounts/data/icons/print_ok.svg
+++ /dev/null
@@ -1,310 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!-- Generator: Adobe Illustrator 13.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->
-<svg
-   xmlns:dc="http://purl.org/dc/elements/1.1/"
-   xmlns:cc="http://creativecommons.org/ns#"
-   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-   xmlns:svg="http://www.w3.org/2000/svg"
-   xmlns="http://www.w3.org/2000/svg"
-   xmlns:xlink="http://www.w3.org/1999/xlink"
-   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
-   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
-   version="1.0"
-   x="0px"
-   y="0px"
-   width="48"
-   height="48"
-   viewBox="0 0 36.184 43.865"
-   enable-background="new 0 0 36.184 43.865"
-   xml:space="preserve"
-   id="svg2419"
-   sodipodi:version="0.32"
-   inkscape:version="0.46"
-   sodipodi:docname="print_ok.svg"
-   inkscape:output_extension="org.inkscape.output.svg.inkscape"
-   inkscape:export-filename="/Users/mlanglie/Desktop/Fingerprint Enrollment Icons/Vector/print_ok.png"
-   inkscape:export-xdpi="90"
-   inkscape:export-ydpi="90"><metadata
-   id="metadata2435"><rdf:RDF><cc:Work
-       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
-         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /></cc:Work></rdf:RDF></metadata><defs
-   id="defs2433"><linearGradient
-   inkscape:collect="always"
-   id="linearGradient84104"><stop
-     style="stop-color:#fffffc;stop-opacity:1;"
-     offset="0"
-     id="stop84106" /><stop
-     style="stop-color:#fffffc;stop-opacity:0;"
-     offset="1"
-     id="stop84108" /></linearGradient><linearGradient
-   id="linearGradient84076"><stop
-     style="stop-color:#73d216;stop-opacity:1;"
-     offset="0"
-     id="stop84078" /><stop
-     id="stop84090"
-     offset="0.31459025"
-     style="stop-color:#73d216;stop-opacity:1;" /><stop
-     style="stop-color:#4e9a06;stop-opacity:1;"
-     offset="1"
-     id="stop84080" /></linearGradient><linearGradient
-   id="linearGradient3531"><stop
-     id="stop3533"
-     offset="0"
-     style="stop-color:#9b9b9b;stop-opacity:1;" /><stop
-     id="stop3535"
-     offset="1"
-     style="stop-color:#414141;stop-opacity:1;" /></linearGradient><linearGradient
-   id="linearGradient3483"><stop
-     id="stop3485"
-     offset="0"
-     style="stop-color:#000000;stop-opacity:1;" /><stop
-     id="stop3487"
-     offset="1"
-     style="stop-color:#787878;stop-opacity:1" /></linearGradient><linearGradient
-   id="linearGradient3263"><stop
-     id="stop3265"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     id="stop3267"
-     offset="1"
-     style="stop-color:#ffffff;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient3247"><stop
-     style="stop-color:#52a714;stop-opacity:1;"
-     offset="0"
-     id="stop3249" /><stop
-     style="stop-color:#398800;stop-opacity:1;"
-     offset="1"
-     id="stop3251" /></linearGradient><linearGradient
-   id="linearGradient3233"><stop
-     id="stop3235"
-     offset="0"
-     style="stop-color:#398800;stop-opacity:1;" /><stop
-     id="stop3237"
-     offset="1"
-     style="stop-color:#84c706;stop-opacity:1;" /></linearGradient><inkscape:perspective
-   sodipodi:type="inkscape:persp3d"
-   inkscape:vp_x="0 : 21.932501 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_z="36.183998 : 21.932501 : 1"
-   inkscape:persp3d-origin="18.091999 : 14.621667 : 1"
-   id="perspective2437" />
-	
-	
-
-		
-		
-	<filter
-   inkscape:collect="always"
-   id="filter3471"><feGaussianBlur
-     inkscape:collect="always"
-     stdDeviation="0.057808254"
-     id="feGaussianBlur3473" /></filter><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient3233"
-   id="linearGradient3517"
-   gradientUnits="userSpaceOnUse"
-   x1="25.144751"
-   y1="43.865002"
-   x2="25.144751"
-   y2="23.838018" /><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient3247"
-   id="linearGradient3519"
-   gradientUnits="userSpaceOnUse"
-   x1="30.691881"
-   y1="23.365002"
-   x2="30.691881"
-   y2="44.365963" /><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient3263"
-   id="linearGradient3521"
-   gradientUnits="userSpaceOnUse"
-   x1="26.455547"
-   y1="24.322035"
-   x2="26.455547"
-   y2="30.466549" /><linearGradient
-   gradientUnits="userSpaceOnUse"
-   y2="55.692348"
-   x2="18.072493"
-   y1="29.205048"
-   x1="21.55229"
-   id="linearGradient5138"
-   xlink:href="#linearGradient5132"
-   inkscape:collect="always" /><linearGradient
-   id="linearGradient5132"
-   inkscape:collect="always"><stop
-     id="stop5134"
-     offset="0"
-     style="stop-color:white;stop-opacity:1;" /><stop
-     id="stop5136"
-     offset="1"
-     style="stop-color:white;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient1913"><stop
-     id="stop1915"
-     offset="0"
-     style="stop-color:#73d216;stop-opacity:1" /><stop
-     id="stop1917"
-     offset="1"
-     style="stop-color:#8ae234;stop-opacity:1" /></linearGradient><inkscape:perspective
-   id="perspective84036"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 24 : 1"
-   sodipodi:type="inkscape:persp3d" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient84076"
-   id="radialGradient84088"
-   cx="26.183998"
-   cy="40.111427"
-   fx="26.183998"
-   fy="40.111427"
-   r="10.5"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(0.9228377,7.3282173e-8,-7.9001009e-8,0.8924238,2.0204218,4.4167191)" /><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient3263"
-   id="linearGradient84092"
-   gradientUnits="userSpaceOnUse"
-   x1="26.455547"
-   y1="24.322035"
-   x2="26.455547"
-   y2="30.466549" /><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient84104"
-   id="linearGradient84110"
-   x1="28.185518"
-   y1="22.649143"
-   x2="27.596079"
-   y2="42.648415"
-   gradientUnits="userSpaceOnUse" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient84076"
-   id="radialGradient84134"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0862379,-2.5925308e-8,1.5464794e-8,0.8186283,-2.2580516,7.302016)"
-   cx="26.183998"
-   cy="39.098457"
-   fx="26.183998"
-   fy="39.098457"
-   r="10.5" /><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient3263"
-   id="linearGradient84136"
-   gradientUnits="userSpaceOnUse"
-   x1="26.455547"
-   y1="24.322035"
-   x2="26.455547"
-   y2="30.466549" /><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient84104"
-   id="linearGradient84138"
-   gradientUnits="userSpaceOnUse"
-   x1="21.515692"
-   y1="23.09075"
-   x2="34.488232"
-   y2="40.661182" /><filter
-   inkscape:collect="always"
-   id="filter84266"
-   x="-0.07103052"
-   width="1.142061"
-   y="-0.5276553"
-   height="2.0553105"><feGaussianBlur
-     inkscape:collect="always"
-     stdDeviation="0.45756194"
-     id="feGaussianBlur84268" /></filter><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient3263"
-   id="linearGradient84277"
-   gradientUnits="userSpaceOnUse"
-   x1="26.455547"
-   y1="24.322035"
-   x2="26.455547"
-   y2="30.466549" /><linearGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient84104"
-   id="linearGradient84279"
-   gradientUnits="userSpaceOnUse"
-   x1="21.515692"
-   y1="23.09075"
-   x2="34.488232"
-   y2="40.661182" /></defs><sodipodi:namedview
-   inkscape:window-height="713"
-   inkscape:window-width="1222"
-   inkscape:pageshadow="2"
-   inkscape:pageopacity="0.0"
-   guidetolerance="10.0"
-   gridtolerance="10.0"
-   objecttolerance="10.0"
-   borderopacity="1.0"
-   bordercolor="#666666"
-   pagecolor="#ffffff"
-   id="base"
-   showgrid="false"
-   inkscape:zoom="4.399364"
-   inkscape:cx="39.372624"
-   inkscape:cy="7.0437262"
-   inkscape:window-x="15"
-   inkscape:window-y="165"
-   inkscape:current-layer="svg2419" />
-<path
-   sodipodi:type="arc"
-   style="opacity:0.24299999;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter84266)"
-   id="path84140"
-   sodipodi:cx="27.093658"
-   sodipodi:cy="38.810692"
-   sodipodi:rx="7.7301183"
-   sodipodi:ry="1.0405928"
-   d="M 34.823777,38.810692 A 7.7301183,1.0405928 0 1 1 19.36354,38.810692 A 7.7301183,1.0405928 0 1 1 34.823777,38.810692 z"
-   transform="matrix(1.1911672,0,0,2.1266149,-5.0625748,-41.775272)" /><g
-   id="Background">
-</g>
-<g
-   id="Guides">
-</g>
-<path
-   id="path2424"
-   d="M 11.4715,8.6587828 C 11.85841,8.5063492 18.052855,7.561643 17.533735,14.80408 C 16.823104,24.735732 10.185364,21.847978 8.4432981,28.076079 C 9.1393466,27.839903 9.3182195,27.169011 9.756653,26.617618 C 11.076813,24.955913 11.899239,24.128823 13.185374,23.57555 C 17.764131,21.605215 20.247937,13.221415 16.391477,9.350375 C 14.944939,7.8975596 12.256985,8.0358782 11.4715,8.6587828 z M -0.42938057,30.607215 C -0.63450107,30.057705 -0.82406747,29.493139 -0.99905177,28.917282 C 0.26764038,30.495244 2.394932,29.496061 3.7663553,29.835942 C 7.7655495,30.827068 10.188281,29.685092 12.483493,26.986468 C 14.524976,24.585181 15.716814,26.01071 17.678584,22.400312 C 18.1734,21.49042 19.513975,20.499607 20.036011,16.462963 C 20.321819,14.250806 21.717163,13.992047 21.54704,12.391502 C 21.286508,9.9394059 21.195769,9.5856116 20.169194,7.9304926 C 18.692521,5.5480253 16.429451,4.9093448 14.383024,4.903159 C 12.660627,4.8984543 11.830403,5.5932308 11.247122,5.820939 C 15.376525,4.8200358 18.963747,6.2462048 19.964074,8.6587828 C 20.4725,9.8848305 20.731088,10.257444 20.821497,11.562532 C 20.964401,13.628842 20.293627,14.400415 20.249881,13.774689 C 20.066148,11.097706 19.138731,7.7893511 16.036647,6.7232629 C 14.08071,6.0514297 11.288738,6.5623616 9.6166659,7.8298117 C 7.5771256,9.7832092 6.4815291,12.601333 6.4815291,14.458754 C 6.4815291,18.022104 6.4552814,19.153118 5.840892,22.47841 C 5.582304,23.881356 4.6490541,25.341699 5.1885893,27.263105 C 5.9837959,26.96953 6.6973432,25.862981 6.9812066,25.096113 C 8.9731118,19.712038 10.278689,20.976666 12.329895,18.813438 C 12.817907,18.298742 13.655888,16.907087 13.757962,16.394273 C 14.004884,15.152229 14.615385,12.184495 12.543765,12.254125 C 10.819197,13.353146 11.543438,15.633991 10.22425,17.856498 C 12.257957,16.947548 12.124774,13.112265 12.871375,13.021934 C 13.519788,12.943836 13.479931,14.488864 13.338,15.31313 C 13.032749,17.084925 12.408638,18.086089 11.005847,19.10513 C 9.8869191,19.918105 8.8467342,20.049837 7.8347414,21.757648 C 7.6442029,22.057809 6.2890464,25.330408 6.120867,25.639037 C 5.2721928,27.201003 5.3742671,25.548707 6.3075169,22.931003 C 6.3075169,22.931003 7.2174355,20.095002 7.0978629,16.9993 C 7.0434233,15.566244 7.1231384,9.904591 10.82989,7.8994415 C 12.425164,7.0365969 14.901193,6.4946138 16.606318,7.7611229 C 21.944313,11.725315 19.458563,21.448078 15.392121,24.198454 C 13.75699,25.305002 12.399889,25.373692 11.005847,27.501164 C 9.918999,29.160046 6.8363585,30.274122 4.6937724,29.305892 C 5.5511957,28.829775 6.8820488,28.787432 7.2650702,27.723226 C 10.071625,19.916223 15.516555,23.290444 16.169829,14.950867 C 16.401197,11.993484 14.864252,9.6797058 12.683753,9.6797058 C 10.452702,9.6797058 8.9526972,12.659672 8.6143939,15.425102 C 8.4520474,16.758419 8.3645551,18.513277 8.2576203,19.43446 C 10.04246,18.397541 8.4714901,11.146635 12.470855,10.731679 C 15.950127,10.371298 15.652653,14.948985 15.256023,16.945666 C 14.953689,18.468112 14.256667,19.779785 11.256658,21.500771 C 9.676938,22.406898 8.629948,23.557671 7.8289087,25.441439 C 7.3593673,26.546106 6.3988976,28.436461 4.53337,28.617122 C 4.3195003,28.637822 3.9131477,26.558339 3.7867702,25.457436 C 3.6001201,23.832427 4.440045,22.749402 4.7190479,21.000189 C 5.0301312,19.057142 5.2478894,17.510232 5.2644158,14.182117 C 4.4799026,9.0737386 5.2780257,7.5635248 7.4089462,5.140597 C 9.9005288,2.306477 12.031512,2.0549452 13.495175,2.0414516 C 15.638858,2.0237012 16.885321,3.5353485 16.249545,3.412085 C 14.609553,3.0949872 11.616348,2.6753267 9.0440775,5.2789155 C 7.6092061,6.7298495 6.0265698,8.5966804 6.1947492,10.870939 C 6.8664947,7.6039854 10.320801,3.7360695 13.733969,3.7360695 C 17.563499,3.7360695 19.963101,5.1556521 21.106332,6.9999001 C 22.267062,8.8733168 22.748269,10.281909 22.748269,12.806458 C 22.748269,14.670467 21.716834,15.435453 21.249236,16.946607 C 21.069391,17.527169 20.450141,19.029855 20.177944,20.195682 C 19.084291,24.880637 18.295889,27.137018 14.257639,30.204492 C 12.498075,31.540631 11.0982,31.630961 10.165922,31.269639 C 10.173699,31.117206 12.353227,30.918668 13.710328,28.921987 C 14.988685,27.040101 16.636455,26.992113 17.383054,24.825122 C 16.609234,25.763242 15.405731,26.658079 14.400543,27.100321 C 14.11668,27.225467 13.604365,27.870953 13.407994,28.100544 C 11.354844,30.515944 9.699297,31.088038 7.3321475,31.358088 C 7.7083639,31.534985 8.097218,31.671422 8.5094033,31.724115 C 11.518163,32.108961 13.373968,32.147539 15.76056,30.039827 C 19.12901,27.065506 19.683127,25.185502 20.034068,22.951704 C 20.293627,21.297527 21.655941,17.421123 22.247619,15.852571 C 23.080867,13.643616 22.556758,18.089853 22.318585,18.673238 C 20.924543,22.100151 21.486437,26.72018 17.942032,30.365393 C 15.509749,32.86736 12.310453,33.796071 7.1221663,32.621775 C 5.7388178,32.30844 6.239509,31.841732 4.657845,31.358088 C 4.1834429,31.143553 1.6402954,30.997707 1.3486549,30.995825 C 0.70898981,30.992061 0.10626602,30.860329 -0.42938057,30.607215 z M 4.2543673,5.1321285 C 2.8544925,6.7006803 3.1305788,7.9154375 2.2021896,9.2289942 C 0.37749172,11.810941 1.4380914,15.378055 1.0521537,17.983526 C 0.55247613,21.363393 0.50913089,20.094485 -0.0071428722,17.974697 C -0.76834557,14.849245 -0.21551087,13.71635 -0.090105372,12.391502 C 0.60497135,9.1141985 1.2125559,7.7404222 2.8554645,5.6731707 C 4.2115933,3.9672413 6.135449,3.0215936 4.2543673,5.1321285 z M 24.022738,36.434475 C 23.474454,37.067729 22.882424,37.657701 22.248591,38.195919 L 21.462134,38.491375 C 18.22784,39.695783 16.567433,39.805873 11.843827,39.067233 C 9.918999,38.766131 7.2913178,38.39634 5.4841183,39.262008 C 6.5702412,39.494461 10.381694,38.345449 11.56288,39.970538 C 11.446224,40.140849 9.1976753,39.867976 7.0823087,40.331861 C 6.5699934,40.042991 6.0751766,39.715542 5.5978581,39.351398 C 5.1390103,38.993839 4.8036236,38.704969 4.4789305,38.398222 C 6.9432934,37.015037 10.891135,37.492095 13.335083,37.804487 C 17.567761,38.346471 19.246638,38.16581 21.951118,37.173114 C 22.683136,36.904005 23.374324,36.654655 24.022738,36.434475 z M 26.080749,7.8825045 C 27.13746,9.9657525 28.24375,11.559709 28.24375,14.719395 C 28.24375,18.197241 25.745362,19.892699 25.346787,22.207418 C 24.973487,24.37441 24.914187,26.178198 24.585605,26.178198 C 24.11898,26.178198 23.970243,24.110005 24.041208,22.659071 C 24.113147,21.19026 24.300417,20.389257 24.641637,19.294941 C 25.02563,18.066069 25.608953,15.315973 25.490352,13.235548 C 25.33481,10.489877 25.576852,11.073882 26.289427,12.729942 C 26.756052,13.812967 26.247915,15.934534 26.289427,17.469211 C 27.316002,15.633392 27.121554,12.867259 26.336068,10.86211 C 26.073591,10.189336 25.713282,8.8290928 26.080749,7.8825045 z M 24.608294,9.2431681 C 24.472195,8.6390829 23.70969,6.477977 22.713252,5.1870035 C 21.219079,3.2533658 22.564494,3.6570102 23.635787,4.8313069 C 24.682776,5.9792572 25.458582,7.3442852 25.487746,8.6644279 C 25.547046,11.377166 25.108944,11.455325 24.608294,9.2431681 z M 28.310827,16.859099 C 28.588858,16.49966 28.861055,18.750394 28.357489,19.540787 C 27.013026,21.649439 27.496178,25.113051 26.626116,27.878481 C 25.240824,32.27833 20.835106,35.602682 15.985124,35.513292 C 19.529529,34.338995 22.700634,33.797953 24.16953,26.824625 C 24.298825,26.210189 25.161109,26.541401 24.3834,29.44421 C 25.240824,28.207811 25.985479,25.109287 26.098247,22.60826 C 26.173102,20.914563 27.715881,18.48693 28.310827,16.859099 z M 0.33666203,7.0620024 C 3.1023869,1.995966 8.6775827,0.52715408 13.200929,0.52715408 C 16.027898,0.52715408 18.494205,1.0117396 20.804971,2.3394101 C 21.160772,2.5991103 21.699335,2.9199718 21.989031,3.2097822 C 22.925198,4.1497842 21.355919,3.7289582 19.391486,2.8597515 C 15.788463,1.2655141 13.210649,1.5085776 11.04376,1.8557856 C 9.4407091,2.112663 8.4189947,3.395148 7.616011,4.1733077 C 4.6568312,7.0356559 4.1960391,9.5950208 4.5518406,12.806458 C 4.9931901,16.791351 4.2543673,21.000189 3.3230616,23.294208 C 2.8467153,24.469446 2.9099042,25.995654 3.1228018,26.962944 C 3.5077673,28.707452 5.0036733,29.433225 3.1344674,29.192978 C -0.13966347,28.772157 -0.13773997,24.273729 0.98021562,21.094283 C 2.1224745,17.845207 1.495243,15.951027 1.7355647,13.562036 C 2.8026799,2.8737448 3.1130804,15.825944 3.0518358,16.393333 C 2.6940901,19.711097 2.2203141,20.592698 1.7248713,22.0691 C 0.65905915,25.245183 1.9177265,27.094796 2.2524513,27.350994 C 0.89725312,23.033886 3.2657056,21.64003 3.4523556,16.633273 C 3.4980459,15.417575 3.5174886,14.673289 3.3318108,13.031344 C 2.7611674,7.9643665 4.0677172,5.041798 6.9588475,2.6941455 C 5.2051155,2.7110825 3.8587082,3.9794735 2.6688146,5.1321285 C 1.363237,6.3958147 0.15098419,9.2779223 -0.22620427,10.387294 C -0.79004277,12.046176 -1.2848596,10.030677 0.33666203,7.0620024 z M -1.1234851,28.497622 C -2.0265988,25.35299 -2.4786417,21.846097 -2.4037873,18.200883 C -2.3746233,16.749949 -2.2443571,15.155993 -1.7971749,13.290103 C -0.92614167,9.6543002 -0.69568297,11.570518 -0.75405287,12.016887 C -1.906054,20.826496 1.6007898,19.123308 -0.53825967,25.728487 C -1.2848596,25.186504 -0.49674737,21.494805 -1.669846,19.297342 C -1.3645539,21.71935 -2.0304874,25.727486 0.6156649,28.255799 C 1.3719861,28.979384 2.8544925,29.37364 0.70898981,29.192978 C -0.027888672,29.130876 -0.63158467,28.886231 -1.1234851,28.497622 z M 0.47373313,32.736569 C 0.3036094,32.382775 0.14126284,32.020512 -0.015250972,31.650721 C 0.99382545,31.532162 3.0430867,31.426777 4.813345,32.172003 C 5.8418641,32.604837 3.7828816,32.394066 1.9863756,32.504156 C 1.3428221,32.542735 0.81203619,32.697049 0.47373313,32.736569 z M 1.3272679,34.351227 C 1.1308965,34.014369 0.94230231,33.668102 0.76051305,33.313367 C 5.2070598,32.522034 7.1591074,33.303958 10.615049,33.590945 C 14.176952,33.887342 18.036329,32.081673 19.249554,30.005012 C 19.872692,28.937983 20.047677,28.679223 20.173082,28.398823 C 20.281962,28.156059 20.353899,27.8973 20.648457,27.082444 C 21.301732,25.276774 21.270624,27.738281 21.106332,28.345189 C 19.995182,32.442996 19.062904,31.720351 17.197377,33.526961 C 21.488381,31.992284 22.140685,28.921987 21.581706,24.645402 C 21.447552,23.621656 22.24373,20.854343 22.609254,19.86447 C 22.609254,19.86447 23.377241,17.382263 23.382101,12.981474 C 23.385017,10.110657 22.446907,5.6863438 18.607945,4.0349891 C 17.32181,3.4817147 15.535997,1.961151 15.535997,1.961151 C 16.331576,2.384936 18.250199,2.6518031 20.106978,3.7583519 C 20.177944,3.8006944 24.197722,6.0420202 24.599214,11.907858 C 24.788781,14.679876 24.809506,14.809385 24.622856,16.615054 C 24.622856,16.615054 24.508806,18.471876 23.856503,20.006553 C 23.541531,20.860929 23.2042,23.380774 23.390851,24.645402 C 23.822478,27.572675 22.050276,34.880978 14.832172,34.880978 C 11.643568,34.880978 9.7031857,34.471668 8.1769331,34.235492 C 6.7945567,34.020957 4.0006399,33.900516 1.3272679,34.351227 z M 3.9160641,37.83648 C 3.5466527,37.449752 3.1918233,37.039501 2.851576,36.606667 C 3.8975936,36.013873 4.8162614,36.004464 6.6798447,36.055275 C 8.8146538,36.055275 12.031449,36.901182 11.04376,37.179702 C 10.996125,37.191934 6.4669471,36.563384 3.9160641,37.83648 z M 14.719404,41.637889 C 14.296525,41.700932 13.867813,41.747979 13.430353,41.776207 C 11.348039,41.911704 9.4173774,41.49957 7.6714227,40.64049 C 8.5230132,40.522871 10.16981,40.466415 11.73106,40.686596 C 12.655561,40.817387 13.709355,41.272803 14.719404,41.637889 z M 20.747615,39.325051 C 19.318575,40.268817 17.725246,40.977347 15.991929,41.391361 C 14.720376,41.014044 11.970742,40.569899 11.991882,39.739346 C 12.007714,39.117287 15.479614,40.315864 17.475407,40.060868 C 18.84223,39.886794 19.878525,39.619567 20.747615,39.325051 z M 26.747633,31.987579 C 27.295917,31.456887 26.637782,34.608104 23.560001,35.921661 C 21.475743,36.660301 18.380466,38.308833 13.057053,36.902123 C 12.403778,36.72899 10.334101,36.181361 9.8733094,36.088208 C 6.2861299,35.366505 4.4235188,35.58198 2.3927281,35.996936 C 2.1564992,35.669488 1.9280475,35.329808 1.7073728,34.979777 C 2.3616198,34.715372 4.0055005,34.612809 5.186645,34.610927 C 8.9478367,34.604341 13.98933,35.964944 15.98318,36.055275 C 20.657206,36.266987 23.666937,32.984978 24.040237,32.984978 C 24.972514,32.984978 23.166287,34.616574 22.664665,35.067285 C 22.237898,35.45213 24.347431,34.500837 26.747633,31.987579 z M 28.517892,25.005783 C 28.394431,27.133255 28.234028,30.085933 26.454048,31.562273 C 23.614441,33.917452 24.785865,32.262334 26.025337,30.618507 C 28.180561,27.758982 27.284252,21.317287 28.69482,20.069596 C 28.711346,21.421731 28.607328,23.483337 28.517892,25.005783 z"
-   style="fill:#a1a1a1;fill-opacity:1"
-   inkscape:export-xdpi="90"
-   inkscape:export-ydpi="90"
-   sodipodi:nodetypes="cscssscccssssssscsssscsscsssccssscscssssscsssscssssssscsssscsssssscscsscssssssscsccssscsccccscccscssccssssssscsccsssccsscscsccscsssssssssssscsscssccsssccsscccsscccssssscscsscssccsssccccsccscscccsscccssccssssccsscc" />
-<circle
-   clip-rule="evenodd"
-   cx="26.184"
-   cy="33.865002"
-   r="10"
-   id="circle2428"
-   sodipodi:cx="26.184"
-   sodipodi:cy="33.865002"
-   sodipodi:rx="10"
-   sodipodi:ry="10"
-   style="fill:url(#radialGradient84134);fill-opacity:1;fill-rule:evenodd;stroke:#448c00;stroke-width:1.31732059;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   transform="matrix(1.1263785,0,0,1.1511056,-2.2713556,-9.1997707)" /><path
-   sodipodi:type="arc"
-   style="opacity:0.50746268;fill:url(#linearGradient84277);fill-opacity:1;stroke:none;stroke-width:1;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path3253"
-   sodipodi:cx="26.455547"
-   sodipodi:cy="27.394291"
-   sodipodi:rx="6.1445141"
-   sodipodi:ry="3.072257"
-   d="M 32.600061,27.394291 A 6.1445141,3.072257 0 1 1 20.311033,27.394291 A 6.1445141,3.072257 0 1 1 32.600061,27.394291 z"
-   transform="matrix(1.1111101,0,0,1.2758999,-2.2387648,-10.924499)" /><path
-   clip-rule="evenodd"
-   d="M 21.777021,33.575871 C 22.428021,34.222871 23.330021,35.596871 24.012021,36.209871 C 25.264021,34.898871 27.599021,31.912871 31.077021,29.499871 C 31.754021,29.029871 33.458021,29.462871 32.557021,30.487871 C 29.846021,33.287871 27.332021,36.692871 25.385021,39.387871 C 24.468021,40.656871 23.706021,39.994871 22.908021,38.978871 C 21.912021,37.682871 20.897021,36.071871 20.509021,35.011871 C 20.282021,34.392871 20.974021,32.785871 21.777021,33.575871 z"
-   id="path2430"
-   style="opacity:0.42786069;fill:#398800;fill-opacity:1;fill-rule:evenodd;stroke:#398800;stroke-width:1;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter3471)"
-   transform="matrix(1.1263785,0,0,1.1511056,-2.2713556,-9.1997707)" /><path
-   clip-rule="evenodd"
-   d="M 21.969435,28.185201 C 22.702707,28.929966 23.718701,30.511585 24.486892,31.217213 C 25.897117,29.708113 28.527211,26.270911 32.444755,23.493294 C 33.207314,22.952275 35.126663,23.450703 34.111795,24.630586 C 31.058183,27.853682 28.226468,31.773196 26.033409,34.875426 C 25.00052,36.33618 24.142219,35.574148 23.243369,34.404624 C 22.121497,32.912791 20.978222,31.05836 20.541188,29.838188 C 20.2855,29.125654 21.064954,27.275827 21.969435,28.185201 z"
-   id="path3469"
-   style="fill:#ffffff;fill-rule:evenodd" /><path
-   sodipodi:type="arc"
-   style="opacity:0.36815945;fill:none;fill-opacity:1;stroke:url(#linearGradient84279);stroke-width:1.2184273;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path84102"
-   sodipodi:cx="28.185518"
-   sodipodi:cy="31.917336"
-   sodipodi:rx="10.027505"
-   sodipodi:ry="10.240856"
-   d="M 38.213023,31.917336 A 10.027505,10.240856 0 1 1 18.158013,31.917336 A 10.027505,10.240856 0 1 1 38.213023,31.917336 z"
-   transform="matrix(1.0116992,0,0,1.0189783,-1.4418411,-2.7101136)" /></svg>
\ No newline at end of file
diff --git a/panels/user-accounts/data/icons/right-index-finger.png b/panels/user-accounts/data/icons/right-index-finger.png
deleted file mode 100644
index 4aaeaac403e5c3b32392a495793d4c5067e01700..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1506
zcmV<81s(c{P)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00004b3#c}2nYxW
zd<bNS00009a7bBm000fw000fw0YWI7cmMzZ8FWQhbW?9;ba!ELWdL_~cP?peYja~^
zaAhuUa%Y?FJQ@H11z$--K~!jg)tXssR8<(qf3vi7qopiuks`9GQIdW{4ABTkj4xnZ
z5>O05Apwoci%&cd5<`r}Ezt)IVti0A80A4FL4zU@jE1u0BVs6&wp5|D>@c;Rw$r&j
z^bX#+b7r}BZZZB}?wM~p-+%5m=bZ1fA<MG(KO<U<bJMQS^hl(1T{s-Q2P@fW4JNi7
zd2Hx_(?&!}fu%qk*rTe$#mwo3ZvwJAx~8;h?56sucQ@9S*ON>nIN#H<Y~Hu!J7@I9
zU-)9Vl}dCIu-+bT0A4RPX(xOUkZ(hC!&TL9+&W`^z4c8gms<Lmwxp4UxsA1LRmYxb
zKXbGP*l3$CbGWX=ML<MCz+FI>s$TJ$OV|$qD-_*4Ve0MmRcC5w-+Gp={pV@ksEoTf
zk(m>k#*|gmJU!>j(0JRt#^HL4A>7-*aiCj7?(mw6X97)oLY1NNlF2nC<0-vTenUPy
zlq7bjj|q`U)YZ+NHl{SP$W~Q5+{cMXIq6tsKgR%1dCkW&fs%gagv%>y%R}W<L@U#D
ze>Qh9He5|@WkZzG=t2=G14>;X8d3uhnF-W6be>DvGl681cnF3fp$O4v`h0Ci+X)Yc
z!Gdry)CW`<LO4t6zGCz7>@b+%M6y4AJz*uFB$=*@4|1XNBC)^E$A{wa{XnH5M1^BK
zuh@J%I~-qb4bm4s85_JxV%$)M{@m#<y1QFCYGeF_nSfI^+okioNBCQXdK2q<I*xV5
zYOZGJP96SjpnstE&3&t_IO*SZ3b_bm1Qd})BC=LQ#+q{RML?HZ=aTVjkDqA$t|d|x
zN;`{OKQhpMcxnG9hGbKyuoH^{(_Ol>eLzH(0Q-QCfLBeq_#yz%yu{M7uGrk+q2Ugv
z+`3XS(eW`?3Ef8Ks^i|sUI9Y(xEcd|69Cw^+KMv}KIsxq5|PRF*i=F(*(`(Z1_2Ri
z02VuRf0=S9ihzx?2H70@X{y_Z{dCtqz-7mHg~Jx0+cbF)1WbWbM}k}g?lkC}CA8Y5
zYcowA1c82oER~#zKx)qUE_nj`%Mg(!pvj>d1P)+85Cq}|SuO$*5vd?OL4XcbP1xgS
zUAkXXwa+y9XcI8491-ANGFPC}aASF0>C%0lZSo)p3>ainL}V54kU>`mJZO-&+Rukc
zKj1+Q0vV@25vc^W0r%TMw*y;MHCyv+dIJETW|6;~Mc!#YSGeRoz>zFI#y9W?@B~l~
zJOFF~_S$u8LN)?kaY0080Z+Q*J5)7kasV@dqhubc76Us(Bx0~Pm5?921?&LIT=MO?
zoH7WgYAf)8!S+$$eS<uxH_$-l@w!D-vz8BJ{}FG%yu-dEB1>Jepa__-H=lu#fU3rT
z7qj?$C?d|TDyR}N;ZQz<tjnmX?gDliR8xR=9G@G#=T$J8^BLsZ2i60bZ5ON+kp=d6
zfk7VxVu1Ukn}JZiyHOF@0z7X}wE}B^-DEkd7l~u4D*22G*@<6c<S^yNY~W``CwYLb
zLX7efP}Q@*XGN#u9l;Q=@h)()@8OLNj2i_JP}SdoABsxHJ92JdDR?=Je(p07KS%&S
z7Gmgyz*m@;)X~7Ns(QT;!-5H@>Sb<T8GT)-q1T4yIiMr2RdKk+$VFB`@I=5~QWx`Y
z^D!FOTxj`#kCswZI~gHiI;|Fqe&9VX4*u>&RXZ5zYlD6hAFJvGFAlz&dR1)$76NDd
z#&E&H+%V-tQMVGR`UfLTco2X4-L0ypy*d?rt)i+20WCHTBmJ;v1aU6}a4LWp2mLq&
zMZoi`H{g;Vr=SS*1`xwnZygkYAb!OEDS@mvX9XhR_rF;F0eg*&d0=6wCIA2c07*qo
IM6N<$f_ZVNH2?qr

diff --git a/panels/user-accounts/data/icons/right-index-finger.svg b/panels/user-accounts/data/icons/right-index-finger.svg
deleted file mode 100644
index 5a621a2..0000000
--- a/panels/user-accounts/data/icons/right-index-finger.svg
+++ /dev/null
@@ -1,179 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!-- Generator: Adobe Illustrator 13.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->
-<svg
-   xmlns:dc="http://purl.org/dc/elements/1.1/"
-   xmlns:cc="http://creativecommons.org/ns#"
-   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-   xmlns:svg="http://www.w3.org/2000/svg"
-   xmlns="http://www.w3.org/2000/svg"
-   xmlns:xlink="http://www.w3.org/1999/xlink"
-   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
-   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
-   version="1.0"
-   x="0px"
-   y="0px"
-   width="48"
-   height="48"
-   viewBox="0 0 40.425 46.214"
-   enable-background="new 0 0 40.425 46.214"
-   xml:space="preserve"
-   id="svg2"
-   sodipodi:version="0.32"
-   inkscape:version="0.46"
-   sodipodi:docname="right-index-finger.svg"
-   inkscape:output_extension="org.inkscape.output.svg.inkscape"><metadata
-   id="metadata44"><rdf:RDF><cc:Work
-       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
-         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /></cc:Work></rdf:RDF></metadata><defs
-   id="defs42"><inkscape:perspective
-   sodipodi:type="inkscape:persp3d"
-   inkscape:vp_x="0 : 23.107 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_z="40.424999 : 23.107 : 1"
-   inkscape:persp3d-origin="20.2125 : 15.404667 : 1"
-   id="perspective46" />
-	
-	
-	
-	
-	
-	
-<radialGradient
-   r="8.341651"
-   fy="9.3411446"
-   fx="38.658855"
-   cy="9.3411446"
-   cx="38.658855"
-   gradientUnits="userSpaceOnUse"
-   id="radialGradient2479"
-   xlink:href="#linearGradient2378"
-   inkscape:collect="always" /><linearGradient
-   id="linearGradient2378"><stop
-     id="stop2386"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     style="stop-color:#27dc16;stop-opacity:1;"
-     offset="1"
-     id="stop2382" /></linearGradient><linearGradient
-   id="linearGradient3702"><stop
-     id="stop3704"
-     offset="0"
-     style="stop-color:black;stop-opacity:0;" /><stop
-     style="stop-color:black;stop-opacity:1;"
-     offset="0.5"
-     id="stop3710" /><stop
-     id="stop3706"
-     offset="1"
-     style="stop-color:black;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient6732"><stop
-     id="stop6734"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     id="stop6736"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:1;" /></linearGradient><linearGradient
-   id="linearGradient4585"><stop
-     id="stop4587"
-     offset="0"
-     style="stop-color:#9e9e9e;stop-opacity:1;" /><stop
-     id="stop4589"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:0;" /></linearGradient><inkscape:perspective
-   id="perspective2516"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 24 : 1"
-   sodipodi:type="inkscape:persp3d" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86956"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86964"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86966"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /></defs><sodipodi:namedview
-   inkscape:window-height="922"
-   inkscape:window-width="1302"
-   inkscape:pageshadow="2"
-   inkscape:pageopacity="0.0"
-   guidetolerance="10.0"
-   gridtolerance="10.0"
-   objecttolerance="10.0"
-   borderopacity="1.0"
-   bordercolor="#666666"
-   pagecolor="#ffffff"
-   id="base"
-   showgrid="false"
-   inkscape:zoom="11.122171"
-   inkscape:cx="15.672125"
-   inkscape:cy="30.299841"
-   inkscape:window-x="36"
-   inkscape:window-y="91"
-   inkscape:current-layer="svg2" />
-<g
-   id="g35"
-   style="fill:url(#radialGradient86956);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   transform="matrix(-1.1605241,0,0,1.3370602,44.823901,-0.7984997)">
-		<circle
-   style="fill:url(#radialGradient86964);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   sodipodi:ry="3.829"
-   sodipodi:rx="3.829"
-   sodipodi:cy="5.5700002"
-   sodipodi:cx="26.49"
-   id="circle37"
-   r="3.829"
-   cy="5.5700002"
-   cx="26.49"
-   stroke-miterlimit="3.8637" />
-		<path
-   style="fill:url(#radialGradient86966);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path39"
-   stroke-miterlimit="3.8637"
-   d="" />
-	</g><g
-   id="Background"
-   transform="matrix(-1,0,0,1,40.436754,0)">
-</g>
-<g
-   id="Guides"
-   display="none"
-   style="display:none">
-</g>
-<g
-   id="g7"
-   style="fill:#2f2f2f;fill-opacity:1"
-   transform="matrix(-1,0,0,1,40.436754,0)">
-		<path
-   style="fill:#2f2f2f;fill-opacity:1;fill-rule:evenodd"
-   id="path9"
-   d="M 20.569,13.286 C 20.843,15.459 20.791,17.834 20.82,18.542 C 20.865,18.917 21.913,19.241 22.094,18.877 C 22.301,17.514 22.586,14.847 22.92,13.455 C 23.372,9.917 23.886,8.247 24.072,7.257 C 24.58,4.567 25.014,3.12 26.762,3.12 C 28.384,3.12 28.623,5.167 28.153,8.165 C 28.025,9.379 28.036,12.24 27.433,14.894 C 27.165,16.691 26.962,21.278 27.139,24.981 C 27.189,26.045 27.669,27.315 28.242,27.945 C 29.462,27.773 30.379,24.377 31.988,22.847 C 32.809,21.464 34.883,19.299 36.951,19.299 C 39.243,19.299 39.292,21 38.345,22.262 C 37.187,23.806 36.525,24.528 36.079,25.802 C 35.633,27.076 33.758,29.778 33.471,31.209 C 32.902,34.054 32.471,35.105 29.284,37.661 C 27.783,38.865 27.302,39.637 26.855,40.401 C 26.347,41.273 26.409,44.721 26.409,46.212 L 10.64,46.212 C 10.64,46.212 10.767,43.587 10.513,42.058 C 10.461,41.746 10.105,39.613 9.176,38.231 C 8.317,36.954 5.902,32.306 5.902,26.836 C 5.902,24.026 4.39,21.718 3.854,19.533 C 3.591,17.833 2.638,15.423 2.57,14.709 C 1.684,11.559 2.132,10.118 3.741,10.118 C 5.132,10.118 5.528,11.927 6.093,13.622 C 6.258,14.52 7.505,16.934 7.788,18.233 C 8.038,19.088 8.897,21.556 9.437,21.727 C 9.75,21.784 10.151,21.523 10.291,21.043 C 10.52,20.26 9.818,18.945 9.539,15.26 C 9.087,12.343 9.17,10.139 9.116,8.949 C 8.653,5.424 9.133,3.598 10.693,3.598 C 12.176,3.598 12.568,4.455 13.02,7.936 C 13.189,9.518 13.754,12.095 14.037,14.864 C 14.213,16.364 14.639,18.601 14.98,19.17 C 15.285,19.503 15.919,19.198 15.9,18.848 C 15.894,16.377 15.732,14.977 15.958,12.999 C 15.845,10.287 16.219,7.823 16.219,6.467 C 16.219,3.494 16.502,1.473 18.358,1.473 C 20.333,1.473 20.287,3.776 20.287,6.806 C 20.399,7.545 20.456,10.087 20.569,13.286 z"
-   clip-rule="evenodd" />
-	</g>
-<g
-   style="display:inline"
-   inkscape:label="Base"
-   id="layer1"
-   transform="matrix(-1,0,0,1,92.903401,2.6102791)" /></svg>
\ No newline at end of file
diff --git a/panels/user-accounts/data/icons/right-little-finger.png b/panels/user-accounts/data/icons/right-little-finger.png
deleted file mode 100644
index 17946afc754f2f27f7fd02bc537e62dce2194509..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1479
zcmV;&1vvVNP)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00004b3#c}2nYxW
zd<bNS00009a7bBm000fw000fw0YWI7cmMzZ8FWQhbW?9;ba!ELWdL_~cP?peYja~^
zaAhuUa%Y?FJQ@H11w=_iK~!jg)tY~3Rb?2*Kj)r%uXlHD<>s8*bZ9CK3w$&sl#C>T
zP*IA?Kn#kgs0hkG{3H5D#Go?rkHX3z$}l9X6b5N3VIi8XM=Y|``P=D6-lge&-R<_r
z&fU(=-n)CxJ!eMWf6n_pKi>0vd7t;kbMCb=nGFADL`VAtA`%Cd0G+@tRqYLP{79IC
z<-l5CJJ1NM348FsGaw?b0`q~*s=CWy@|df=5?Jr?w}6?zB~?xNeSe@C5RuuyyTIeX
zP7#@6FuTpwt~Kc227U!vMC4AtF$7JaI#)XmEH&7ayV|#lNQp<k%6X0fR`?AdD1o%6
z|FF9wA_@A5xiQhDp9V~D>3pYj*aQ}dNX*qAYw&TW)ckz$%-wF)%-U&9%@sh<McnD>
zCxHgwnA0yc_#|EJxgOmBf!U4G<#s%=E?GOdB5KF&`THtUT^%<zHZAVl<aP*3pv54Y
z#mEHQvKby-FTk8e`-SMZ%C%D`-&0j(PaqK~p)1o>-F&%e{oKZqy2Fb*-pD!xO`(eh
znYh|XgMK6e?F~Duvc6bsb?v0Ps_LSXN&a3=_b!XNo_c21EErc>Uis9V9oE2Z7KnhV
zb^?ES#Ite)n?({pM52H<w^Jn%dqupadRm1&p57x7cCX&g{tX8>v*jWaqqW>oKd(L#
z8}nKy1RQv0As>OPYzo6uIEBr^Wa&7oEK)}E_H*D|)uJ6SD(vx8jH$+s#Rtxd(I8MI
zA~jCiltNkAbb~I16)A~XF*5BI7k?RCVpWw@B&-B6D~3g6V5bX%zy*WsZs%EM(Amz@
zoBse;GrheByE|{tvagj)-{4I-S(&6K(@l4}lT2UlnXEhv0;ZiPJH;arXfWtf@pRv|
zn{AiRU)tR^L=mmAXzxqWeECRgPiNQWtUL??9R^u8I1_>FJMZ<#(?H9i<(c#8CVslv
zJb1*|(FoSeK2EkDOJ8X{wYO<m_u;HAjC#O(n8C;dY!OK^bg=`RR@F2>=F|EivpTjR
z!4K!RwYH|3ze^;pJ>%AmHi2@3&IaZg-hC1Vw%3(z#kF+n*X<Why>j%?%&_$qMhbNq
zWOX943V6_<n*cmuke_g#4>9zDN9Oq0H%-BVVFpB`6!;ui;0(G2_()ZA70;#_0QfA2
z{N)_-v(EELkNgU7B!`c229^Sk0M)>Kz$RdileZ@1BH$NoA~GF#!Xw|Rs(rbfOaz*6
zE>$ip0=9~XZLl|`P%(H5*a{>(@+~7d4I`kcCx8zOw#$Hx26<RBFp=Tc>*K1LGkqZU
zB7Pn73Hy?WEb+*~B4EOvd<I4Ws(KxGF^A8GBI2&9!b%|%e$Ho*a~oCFoxoQHRUPn-
zt3SzqTm|D$K7)Mcz#5>(Ab(aw7CP;P27MT~4*ZeN$jbL^R75rb&l^-HfT!vI;$}K=
zgW{;FN<O1PPU3Yyw?RGw_>s{G9^g_TMtKRS>ILA7z~T5uI0PJQV4%3WWiZtl!%z?b
zRs9Y4K2SLRG2#K1g`eB#mqi9r4AQ{fLJa*7_y+TqIvO~js@DoJESP|*Ugg%M(YJ*f
z`YmXl15W$&@r%EKj|(;SMZnoo7cp3Tj0WB>G<~3ml2TRA(oe!z;srzp@SY!sqH1DQ
zJxzaI8}>|mqN;8A%?43)QLn0}fct?n#g5@Y26MqQB7%OMK1Y8M9>#CKjjDRmuT$X9
zDyn)A(4gbcUl036SU+_C8NwI`i*X8zfbXd{!23f<K?sY$KOu}!RBas=fiM>Fe@Y<d
hm$L$qF7{t6{{r*Wbao@#+2jBK002ovPDHLkV1hk~wc-E(

diff --git a/panels/user-accounts/data/icons/right-little-finger.svg b/panels/user-accounts/data/icons/right-little-finger.svg
deleted file mode 100644
index 9fcec2a..0000000
--- a/panels/user-accounts/data/icons/right-little-finger.svg
+++ /dev/null
@@ -1,182 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!-- Generator: Adobe Illustrator 13.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->
-<svg
-   xmlns:dc="http://purl.org/dc/elements/1.1/"
-   xmlns:cc="http://creativecommons.org/ns#"
-   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-   xmlns:svg="http://www.w3.org/2000/svg"
-   xmlns="http://www.w3.org/2000/svg"
-   xmlns:xlink="http://www.w3.org/1999/xlink"
-   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
-   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
-   version="1.0"
-   x="0px"
-   y="0px"
-   width="48"
-   height="48"
-   viewBox="0 0 40.425 46.214"
-   enable-background="new 0 0 40.425 46.214"
-   xml:space="preserve"
-   id="svg2"
-   sodipodi:version="0.32"
-   inkscape:version="0.46"
-   sodipodi:docname="right-pinky-finger.svg"
-   inkscape:output_extension="org.inkscape.output.svg.inkscape"
-   inkscape:export-filename="/Users/mlanglie/Desktop/Fingerprint Enrollment Icons/Vector/left-ring-finger.png"
-   inkscape:export-xdpi="90"
-   inkscape:export-ydpi="90"><metadata
-   id="metadata44"><rdf:RDF><cc:Work
-       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
-         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /></cc:Work></rdf:RDF></metadata><defs
-   id="defs42"><inkscape:perspective
-   sodipodi:type="inkscape:persp3d"
-   inkscape:vp_x="0 : 23.107 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_z="40.424999 : 23.107 : 1"
-   inkscape:persp3d-origin="20.2125 : 15.404667 : 1"
-   id="perspective46" />
-	
-	
-	
-	
-	
-	
-<radialGradient
-   r="8.341651"
-   fy="9.3411446"
-   fx="38.658855"
-   cy="9.3411446"
-   cx="38.658855"
-   gradientUnits="userSpaceOnUse"
-   id="radialGradient2479"
-   xlink:href="#linearGradient2378"
-   inkscape:collect="always" /><linearGradient
-   id="linearGradient2378"><stop
-     id="stop2386"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     style="stop-color:#27dc16;stop-opacity:1;"
-     offset="1"
-     id="stop2382" /></linearGradient><linearGradient
-   id="linearGradient3702"><stop
-     id="stop3704"
-     offset="0"
-     style="stop-color:black;stop-opacity:0;" /><stop
-     style="stop-color:black;stop-opacity:1;"
-     offset="0.5"
-     id="stop3710" /><stop
-     id="stop3706"
-     offset="1"
-     style="stop-color:black;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient6732"><stop
-     id="stop6734"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     id="stop6736"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:1;" /></linearGradient><linearGradient
-   id="linearGradient4585"><stop
-     id="stop4587"
-     offset="0"
-     style="stop-color:#9e9e9e;stop-opacity:1;" /><stop
-     id="stop4589"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:0;" /></linearGradient><inkscape:perspective
-   id="perspective2516"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 24 : 1"
-   sodipodi:type="inkscape:persp3d" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86956"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86964"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86966"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /></defs><sodipodi:namedview
-   inkscape:window-height="933"
-   inkscape:window-width="1054"
-   inkscape:pageshadow="2"
-   inkscape:pageopacity="0.0"
-   guidetolerance="10.0"
-   gridtolerance="10.0"
-   objecttolerance="10.0"
-   borderopacity="1.0"
-   bordercolor="#666666"
-   pagecolor="#ffffff"
-   id="base"
-   showgrid="false"
-   inkscape:zoom="11.122171"
-   inkscape:cx="22.316511"
-   inkscape:cy="30.299841"
-   inkscape:window-x="346"
-   inkscape:window-y="109"
-   inkscape:current-layer="svg2" />
-<g
-   id="g35"
-   style="fill:url(#radialGradient86956);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   transform="matrix(-1.1074589,0,0,1.2726911,65.968411,5.5330271)">
-		<circle
-   style="fill:url(#radialGradient86964);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   sodipodi:ry="3.829"
-   sodipodi:rx="3.829"
-   sodipodi:cy="5.5700002"
-   sodipodi:cx="26.49"
-   id="circle37"
-   r="3.829"
-   cy="5.5700002"
-   cx="26.49"
-   stroke-miterlimit="3.8637" />
-		<path
-   style="fill:url(#radialGradient86966);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path39"
-   stroke-miterlimit="3.8637"
-   d="" />
-	</g><g
-   id="Background"
-   transform="matrix(-1,0,0,1,40.436756,0)">
-</g>
-<g
-   id="Guides"
-   display="none"
-   style="display:none">
-</g>
-<g
-   id="g7"
-   style="fill:#2f2f2f;fill-opacity:1"
-   transform="matrix(-1,0,0,1,40.436756,0)">
-		<path
-   style="fill:#2f2f2f;fill-opacity:1;fill-rule:evenodd"
-   id="path9"
-   d="M 20.569,13.286 C 20.843,15.459 20.791,17.834 20.82,18.542 C 20.865,18.917 21.913,19.241 22.094,18.877 C 22.301,17.514 22.586,14.847 22.92,13.455 C 23.372,9.917 23.886,8.247 24.072,7.257 C 24.58,4.567 25.014,3.12 26.762,3.12 C 28.384,3.12 28.623,5.167 28.153,8.165 C 28.025,9.379 28.036,12.24 27.433,14.894 C 27.165,16.691 26.962,21.278 27.139,24.981 C 27.189,26.045 27.669,27.315 28.242,27.945 C 29.462,27.773 30.379,24.377 31.988,22.847 C 32.809,21.464 34.883,19.299 36.951,19.299 C 39.243,19.299 39.292,21 38.345,22.262 C 37.187,23.806 36.525,24.528 36.079,25.802 C 35.633,27.076 33.758,29.778 33.471,31.209 C 32.902,34.054 32.471,35.105 29.284,37.661 C 27.783,38.865 27.302,39.637 26.855,40.401 C 26.347,41.273 26.409,44.721 26.409,46.212 L 10.64,46.212 C 10.64,46.212 10.767,43.587 10.513,42.058 C 10.461,41.746 10.105,39.613 9.176,38.231 C 8.317,36.954 5.902,32.306 5.902,26.836 C 5.902,24.026 4.39,21.718 3.854,19.533 C 3.591,17.833 2.638,15.423 2.57,14.709 C 1.684,11.559 2.132,10.118 3.741,10.118 C 5.132,10.118 5.528,11.927 6.093,13.622 C 6.258,14.52 7.505,16.934 7.788,18.233 C 8.038,19.088 8.897,21.556 9.437,21.727 C 9.75,21.784 10.151,21.523 10.291,21.043 C 10.52,20.26 9.818,18.945 9.539,15.26 C 9.087,12.343 9.17,10.139 9.116,8.949 C 8.653,5.424 9.133,3.598 10.693,3.598 C 12.176,3.598 12.568,4.455 13.02,7.936 C 13.189,9.518 13.754,12.095 14.037,14.864 C 14.213,16.364 14.639,18.601 14.98,19.17 C 15.285,19.503 15.919,19.198 15.9,18.848 C 15.894,16.377 15.732,14.977 15.958,12.999 C 15.845,10.287 16.219,7.823 16.219,6.467 C 16.219,3.494 16.502,1.473 18.358,1.473 C 20.333,1.473 20.287,3.776 20.287,6.806 C 20.399,7.545 20.456,10.087 20.569,13.286 z"
-   clip-rule="evenodd" />
-	</g>
-<g
-   style="display:inline"
-   inkscape:label="Base"
-   id="layer1"
-   transform="matrix(-1,0,0,1,92.903403,2.6102791)" /></svg>
\ No newline at end of file
diff --git a/panels/user-accounts/data/icons/right-middle-finger.png b/panels/user-accounts/data/icons/right-middle-finger.png
deleted file mode 100644
index 71bd41ba0393885a2fa2862073f8a6789ff69655..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1468
zcmV;t1w;CYP)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00004b3#c}2nYxW
zd<bNS00009a7bBm000fw000fw0YWI7cmMzZ8FWQhbW?9;ba!ELWdL_~cP?peYja~^
zaAhuUa%Y?FJQ@H11vyDXK~!jg#hF`dR7Duae`hakX;q3)ps6H~f?_cCtC1KDsEwC+
zL6at4NR%jsXd?Q+lMlXVqKOe98ZSYO4<ZIbj5ib?6n&7?fY^L0M6r|t0V`IPwe5Dd
zd+G6^XY2OtY<JI|v-p3RneQ_5{deZf%r|S<woR?j`FUhbC>q@qiPSB`CY8&kk4_|0
z8+*I$zk?dXsucnGGWtS&^Tq2IwRX(64@QaBM+mLRGH|S?Z#+5jVDDYo13`>a69S#P
z!>dB`nm=k^w6Z0&-Qwh~K>#j)q@9cIX+RHsb|{k=?d<Kgvwp`4`RzbNHi^hC5xF%l
zv+KfJ=C-!Cw1gKB+c!LAduH!hTBB{WExPhjt3LXq<8O(`3K5xe-U*0EC$JT`7uYQ#
zi?90FirCTcybHp!X%5dJm&i@okDX01H$0El=B0I^P$W-yGjIqP6p_o$D*>Rbpk4>8
z0hU;^>KhwE4a^EPksixT8Kg#2G-PJc7-}LMiOzMz>zuM4xZi64ehIkO@NK}LmCmLu
zEbO#RE|Z&Pkc_3Uu&{Fz2@z=r<`<|VUIPf4K-a{x9pm<RW+ZK=NsJ|m9EL}Si6{SJ
zVj}koaIN2X{1QmH+Ks?+E0fzEJ9jb}ABz_`#KvOu9q&1wOC_HNuJ#*`Ujl;$S%;O*
zZH}Klw*T}{f5xpm+}{&VB;&94cH3uwWiEBjZC?(437j^_q_^9)?d15)gFhen!mS+Y
ziNAK>_QY1F=_XJ#Wg>Eeh-?s%3rzv|BA}`%;H*pB0npoR=d$m%z3ldxI5_)PC$I>x
z#HBu0*btFBfNz1ffoDuH_&&%eo`sHrdXvFEFI!CUu5-@S-UL`q{UX!gwII+UBCSrn
z(O{pKEj8$-2#Cl+psPUlr)lsY2%Iv=u5e1zx(z#}d;J5%3hHYMY{9%?1VX^nasEm$
z6M^LhUEvaX*rn??4ITu6q(PPs&O{(T<~1&P7U#zhkq)MROKIRc)8Ii6a35wcGl8&(
zG%`IvfB{v_pX?90bUms%W*WTK1WY?e7+6X14s;Zzw$}$-y01zN9t44LgRD(N)&Vye
zbn}554e~yxyoKo(JeYw%(d|z}nt=C!>zqz^0B@;ksnpFh0|47g$e$=7KjD;XUGg))
zk0pGJGq48e1{MITfNj8DXWg1mihx%PiO5pmK9_u_s!o)0G7;#d_)^sc>=co(!QQll
zs=<rEPN2ah-!YR@5dl^01Ku#$-VMBBkOwsb3n{){|E8)Xmk*Twh@ZxM!fq6iJ6*D%
z2$-<9oPm*ms*V7Um+*O0L}nMXgIYo+{7}xI<Tk3RyMYf4sy5)Ig7zie<Ej{CAHT|-
z15W`(SrxEBL{>ZX)dqbK7y*uyGb;NsCnDQ`#|)}IU_G#h5_ff<_(@fzoKYnw@pDXG
zrrcNt?4vfp1N>2mQCR}2dJ1^ocR1b=3;_pQfZDyon_)~~+^C3vsvZWu_7#qI%y@w1
z;pH~^L6w12gDmh(C5B!Ie1dsPtp&bU)#37H9tfyvjPtjQKCRTyYeMrVFyPV0EB;~f
zA*&*IBH(PPUHq4P)B>+px_qFDlu}hsFiFC6TlI@1Q1l!*6ROIIRds;Lyf)~Wct=%-
zyf{>y)T?Sga6NFm+CE&cF(*tj!td+!NhXtU&+qyM>`~RDUY&eDtElRJK>hZ^WIpT}
zLA(nA{2o9b`>SyZih$>-H^BWzNks^Xz-Rz{RFzu?MIeZe_<to(^5v{TWL34QAK_o+
WTbKxVF;QFq0000<MNUMnLSTYoSEhad

diff --git a/panels/user-accounts/data/icons/right-middle-finger.svg b/panels/user-accounts/data/icons/right-middle-finger.svg
deleted file mode 100644
index b33a654..0000000
--- a/panels/user-accounts/data/icons/right-middle-finger.svg
+++ /dev/null
@@ -1,182 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!-- Generator: Adobe Illustrator 13.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->
-<svg
-   xmlns:dc="http://purl.org/dc/elements/1.1/"
-   xmlns:cc="http://creativecommons.org/ns#"
-   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-   xmlns:svg="http://www.w3.org/2000/svg"
-   xmlns="http://www.w3.org/2000/svg"
-   xmlns:xlink="http://www.w3.org/1999/xlink"
-   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
-   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
-   version="1.0"
-   x="0px"
-   y="0px"
-   width="48"
-   height="48"
-   viewBox="0 0 40.425 46.214"
-   enable-background="new 0 0 40.425 46.214"
-   xml:space="preserve"
-   id="svg2"
-   sodipodi:version="0.32"
-   inkscape:version="0.46"
-   sodipodi:docname="right-middle-finger.svg"
-   inkscape:output_extension="org.inkscape.output.svg.inkscape"
-   inkscape:export-filename="/Users/mlanglie/Desktop/Fingerprint Enrollment Icons/Vector/left-index-finger.png"
-   inkscape:export-xdpi="90"
-   inkscape:export-ydpi="90"><metadata
-   id="metadata44"><rdf:RDF><cc:Work
-       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
-         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /></cc:Work></rdf:RDF></metadata><defs
-   id="defs42"><inkscape:perspective
-   sodipodi:type="inkscape:persp3d"
-   inkscape:vp_x="0 : 23.107 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_z="40.424999 : 23.107 : 1"
-   inkscape:persp3d-origin="20.2125 : 15.404667 : 1"
-   id="perspective46" />
-	
-	
-	
-	
-	
-	
-<radialGradient
-   r="8.341651"
-   fy="9.3411446"
-   fx="38.658855"
-   cy="9.3411446"
-   cx="38.658855"
-   gradientUnits="userSpaceOnUse"
-   id="radialGradient2479"
-   xlink:href="#linearGradient2378"
-   inkscape:collect="always" /><linearGradient
-   id="linearGradient2378"><stop
-     id="stop2386"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     style="stop-color:#27dc16;stop-opacity:1;"
-     offset="1"
-     id="stop2382" /></linearGradient><linearGradient
-   id="linearGradient3702"><stop
-     id="stop3704"
-     offset="0"
-     style="stop-color:black;stop-opacity:0;" /><stop
-     style="stop-color:black;stop-opacity:1;"
-     offset="0.5"
-     id="stop3710" /><stop
-     id="stop3706"
-     offset="1"
-     style="stop-color:black;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient6732"><stop
-     id="stop6734"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     id="stop6736"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:1;" /></linearGradient><linearGradient
-   id="linearGradient4585"><stop
-     id="stop4587"
-     offset="0"
-     style="stop-color:#9e9e9e;stop-opacity:1;" /><stop
-     id="stop4589"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:0;" /></linearGradient><inkscape:perspective
-   id="perspective2516"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 24 : 1"
-   sodipodi:type="inkscape:persp3d" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86956"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86964"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86966"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /></defs><sodipodi:namedview
-   inkscape:window-height="933"
-   inkscape:window-width="1054"
-   inkscape:pageshadow="2"
-   inkscape:pageopacity="0.0"
-   guidetolerance="10.0"
-   gridtolerance="10.0"
-   objecttolerance="10.0"
-   borderopacity="1.0"
-   bordercolor="#666666"
-   pagecolor="#ffffff"
-   id="base"
-   showgrid="false"
-   inkscape:zoom="11.122171"
-   inkscape:cx="22.316511"
-   inkscape:cy="30.299841"
-   inkscape:window-x="362"
-   inkscape:window-y="121"
-   inkscape:current-layer="svg2" />
-<g
-   id="g35"
-   style="fill:url(#radialGradient86956);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   transform="matrix(-1.1824583,0,0,1.3363867,53.282364,-2.0066594)">
-		<circle
-   style="fill:url(#radialGradient86964);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   sodipodi:ry="3.829"
-   sodipodi:rx="3.829"
-   sodipodi:cy="5.5700002"
-   sodipodi:cx="26.49"
-   id="circle37"
-   r="3.829"
-   cy="5.5700002"
-   cx="26.49"
-   stroke-miterlimit="3.8637" />
-		<path
-   style="fill:url(#radialGradient86966);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path39"
-   stroke-miterlimit="3.8637"
-   d="" />
-	</g><g
-   id="Background"
-   transform="matrix(-1,0,0,1,40.436756,0)">
-</g>
-<g
-   id="Guides"
-   display="none"
-   style="display:none">
-</g>
-<g
-   id="g7"
-   style="fill:#2f2f2f;fill-opacity:1"
-   transform="matrix(-1,0,0,1,40.436756,0)">
-		<path
-   style="fill:#2f2f2f;fill-opacity:1;fill-rule:evenodd"
-   id="path9"
-   d="M 20.569,13.286 C 20.843,15.459 20.791,17.834 20.82,18.542 C 20.865,18.917 21.913,19.241 22.094,18.877 C 22.301,17.514 22.586,14.847 22.92,13.455 C 23.372,9.917 23.886,8.247 24.072,7.257 C 24.58,4.567 25.014,3.12 26.762,3.12 C 28.384,3.12 28.623,5.167 28.153,8.165 C 28.025,9.379 28.036,12.24 27.433,14.894 C 27.165,16.691 26.962,21.278 27.139,24.981 C 27.189,26.045 27.669,27.315 28.242,27.945 C 29.462,27.773 30.379,24.377 31.988,22.847 C 32.809,21.464 34.883,19.299 36.951,19.299 C 39.243,19.299 39.292,21 38.345,22.262 C 37.187,23.806 36.525,24.528 36.079,25.802 C 35.633,27.076 33.758,29.778 33.471,31.209 C 32.902,34.054 32.471,35.105 29.284,37.661 C 27.783,38.865 27.302,39.637 26.855,40.401 C 26.347,41.273 26.409,44.721 26.409,46.212 L 10.64,46.212 C 10.64,46.212 10.767,43.587 10.513,42.058 C 10.461,41.746 10.105,39.613 9.176,38.231 C 8.317,36.954 5.902,32.306 5.902,26.836 C 5.902,24.026 4.39,21.718 3.854,19.533 C 3.591,17.833 2.638,15.423 2.57,14.709 C 1.684,11.559 2.132,10.118 3.741,10.118 C 5.132,10.118 5.528,11.927 6.093,13.622 C 6.258,14.52 7.505,16.934 7.788,18.233 C 8.038,19.088 8.897,21.556 9.437,21.727 C 9.75,21.784 10.151,21.523 10.291,21.043 C 10.52,20.26 9.818,18.945 9.539,15.26 C 9.087,12.343 9.17,10.139 9.116,8.949 C 8.653,5.424 9.133,3.598 10.693,3.598 C 12.176,3.598 12.568,4.455 13.02,7.936 C 13.189,9.518 13.754,12.095 14.037,14.864 C 14.213,16.364 14.639,18.601 14.98,19.17 C 15.285,19.503 15.919,19.198 15.9,18.848 C 15.894,16.377 15.732,14.977 15.958,12.999 C 15.845,10.287 16.219,7.823 16.219,6.467 C 16.219,3.494 16.502,1.473 18.358,1.473 C 20.333,1.473 20.287,3.776 20.287,6.806 C 20.399,7.545 20.456,10.087 20.569,13.286 z"
-   clip-rule="evenodd" />
-	</g>
-<g
-   style="display:inline"
-   inkscape:label="Base"
-   id="layer1"
-   transform="matrix(-1,0,0,1,92.903403,2.6102791)" /></svg>
\ No newline at end of file
diff --git a/panels/user-accounts/data/icons/right-ring-finger.png b/panels/user-accounts/data/icons/right-ring-finger.png
deleted file mode 100644
index aa73ae6ea48d81e5ee3df1d5d240b3d5ee9ab93b..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1506
zcmV<81s(c{P)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00004b3#c}2nYxW
zd<bNS00009a7bBm000fw000fw0YWI7cmMzZ8FWQhbW?9;ba!ELWdL_~cP?peYja~^
zaAhuUa%Y?FJQ@H11z$--K~!jg)tXyuR7Duae`n8bX}ee}7HH*;AQdot5Kv-7ZH&YS
z!C-`t7^5bjMtvbMA%?^lV|*}bG^hcMJ^%(nct8nw15J=<5FsB4D79RQDYOcd-n8v@
zFFte&XV1>*?%6$y@&7V2-(}|ecjnB@H(M)}O7VY2xYPrPNExsM=mWk{)x?l);g?ob
zEE!%CvLg*vioRqbw&&K~#O56<QVGuvT_`yL;5A@fy1pKG17O}4)_kkHd`r!w+v;no
zCSYUJ(Q)CC=9XWdoA-sa{OGdOg?u^>6&sz1tQC<RBC^=S<S|G6ae%qItm;(xi0yUt
z3+ks<-$6}l9TNwpGHcAj@a;1f-x)5e++|@|B_|*vbAfk&6~Jy0nQSn-(NVtzAXR2>
zh)$X^bxgRH%b)geV9jB^T6ut~)=^9>pF-XE*|X;EiM&{H0>C&&y$o1tu&Hv?t3{+D
z6|v`3SB$ns*`sLL*9JghAi<>rR~Q{0%Y>Slm3BD%Xg&cHOCauQKjdtPNI8SVt_@h*
zJDG5(sytKyZDD#l`mX9KQc<cx)kLi*c4)*+`2-L&fd&zYINBrK4#|#4)Jl@HvFZ4&
zD>Im6h=>)zw!&DUtiFvXmO!7YT?y1X+R<!}a2d&DXPh|gjaM>M{mFj%Q~kt}{Ul-o
z?fC>yEP+;oY>uOzO#q^yc=GGcuGWFhmhKEiFMrdKXy;7pFYSp$--dhwD3-u^gG?Ot
zN`pQc>xsY8ajvPc`+QG^qOY=-(_JSLt$#HhI<hpr8$d+v6Oq*-a)T*=q6nyJA8^?v
z&NTy-$5*6c$!2SDtSz2#k2%wGtmo*-Jv%QYyO*bfe;D{4_!xNA6hjav@p<58M?2>d
z0!VI}5d|_1tIG$wU)Gm8-*<@CI&7TV@l_Ok5|h1*MvF*Yx^7xRL$YaEn&y$mhpHk{
z3p6;iZKlD4Akbov%}$r5b!(@~=?0y1=UL^j1@ndx2mw>aGt%X71nLbs=f3)sOLy8d
zcn}174YHx&Oaz9;yvrqzlm26f$Q&}ir5NyoY49KjxDPWJo`5YPm1G78a8^}^PTwb8
zx*t{bAJgEaCSck*Y+wP|JK!k*5ebvNc02H`*Wf`A=r_p5iO3Vc0|wm~;C_R=DP2C8
zwsFFfK-M`RB2i!qaCf@Xt-wdB>Xkg3W&mKbhurI)e=c3Fa>@S$j(GSOXJ9F?92g7S
z18fBLr`N3sUIhH&qKHfbR=VWdR5j`4WFl}Ba3|Fbz%~)F4fdubR0!S#wgKfX`PSi_
zvIwYZ6Y!zIb{X)VK_1i$)B^KevXiRnxqQI;BVLdBgndCombhd=5intYE(0S0RqY0z
z_wd;yBF;oTs3l~=;amou+o-DU26h@$<AApu?eYHO${RoDGRSoftOEuN^3@`;C|zG<
z&<BBTpfQ(`mFsO(L^cA?8dOcd)4*Ol?&?M2n5s%HqkK-{*BQJ_xiK9$NNIux2<B-~
zRa=11iVnv=0(~2O8@S%@@Wuqjjl2k`>Iq<9QQ`Q<um{)>{M<&j7Z^w(hy&l{W9Wy#
zF3ekMDe#l3cI7tnK|od8xqi#&^L!2cCN$3gXMOtkMJIy~S$V-1f%KNzz_sL~6!;+D
z<pTwzl&X4;K@z6hYO&}A-u2^9P)@9>XBo_EgPw^`RP~}Chk}!ORXq*d3p5wnhYKmp
z3DdAB_I3IX29xl-f7cxbdsX$6U#Fs<RaEs5pvCsXU_R^{LA(nA{2o9bhYE2Dih%E_
zH^BWvNnQwwKu>OyoG2)_4vIh!AMt-m!1LuSPsE-7#o`D50%J>yFbQb5Z~y=R07*qo
IM6N<$g5puM-2eap

diff --git a/panels/user-accounts/data/icons/right-ring-finger.svg b/panels/user-accounts/data/icons/right-ring-finger.svg
deleted file mode 100644
index 9e264fe..0000000
--- a/panels/user-accounts/data/icons/right-ring-finger.svg
+++ /dev/null
@@ -1,182 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!-- Generator: Adobe Illustrator 13.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->
-<svg
-   xmlns:dc="http://purl.org/dc/elements/1.1/"
-   xmlns:cc="http://creativecommons.org/ns#"
-   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-   xmlns:svg="http://www.w3.org/2000/svg"
-   xmlns="http://www.w3.org/2000/svg"
-   xmlns:xlink="http://www.w3.org/1999/xlink"
-   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
-   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
-   version="1.0"
-   x="0px"
-   y="0px"
-   width="48"
-   height="48"
-   viewBox="0 0 40.425 46.214"
-   enable-background="new 0 0 40.425 46.214"
-   xml:space="preserve"
-   id="svg2"
-   sodipodi:version="0.32"
-   inkscape:version="0.46"
-   sodipodi:docname="right-ring-finger.svg"
-   inkscape:output_extension="org.inkscape.output.svg.inkscape"
-   inkscape:export-filename="/Users/mlanglie/Desktop/Fingerprint Enrollment Icons/Vector/left-middle-finger.png"
-   inkscape:export-xdpi="90"
-   inkscape:export-ydpi="90"><metadata
-   id="metadata44"><rdf:RDF><cc:Work
-       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
-         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /></cc:Work></rdf:RDF></metadata><defs
-   id="defs42"><inkscape:perspective
-   sodipodi:type="inkscape:persp3d"
-   inkscape:vp_x="0 : 23.107 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_z="40.424999 : 23.107 : 1"
-   inkscape:persp3d-origin="20.2125 : 15.404667 : 1"
-   id="perspective46" />
-	
-	
-	
-	
-	
-	
-<radialGradient
-   r="8.341651"
-   fy="9.3411446"
-   fx="38.658855"
-   cy="9.3411446"
-   cx="38.658855"
-   gradientUnits="userSpaceOnUse"
-   id="radialGradient2479"
-   xlink:href="#linearGradient2378"
-   inkscape:collect="always" /><linearGradient
-   id="linearGradient2378"><stop
-     id="stop2386"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     style="stop-color:#27dc16;stop-opacity:1;"
-     offset="1"
-     id="stop2382" /></linearGradient><linearGradient
-   id="linearGradient3702"><stop
-     id="stop3704"
-     offset="0"
-     style="stop-color:black;stop-opacity:0;" /><stop
-     style="stop-color:black;stop-opacity:1;"
-     offset="0.5"
-     id="stop3710" /><stop
-     id="stop3706"
-     offset="1"
-     style="stop-color:black;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient6732"><stop
-     id="stop6734"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     id="stop6736"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:1;" /></linearGradient><linearGradient
-   id="linearGradient4585"><stop
-     id="stop4587"
-     offset="0"
-     style="stop-color:#9e9e9e;stop-opacity:1;" /><stop
-     id="stop4589"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:0;" /></linearGradient><inkscape:perspective
-   id="perspective2516"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 24 : 1"
-   sodipodi:type="inkscape:persp3d" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86956"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86964"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86966"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /></defs><sodipodi:namedview
-   inkscape:window-height="933"
-   inkscape:window-width="1054"
-   inkscape:pageshadow="2"
-   inkscape:pageopacity="0.0"
-   guidetolerance="10.0"
-   gridtolerance="10.0"
-   objecttolerance="10.0"
-   borderopacity="1.0"
-   bordercolor="#666666"
-   pagecolor="#ffffff"
-   id="base"
-   showgrid="false"
-   inkscape:zoom="11.122171"
-   inkscape:cx="22.316511"
-   inkscape:cy="30.299841"
-   inkscape:window-x="424"
-   inkscape:window-y="91"
-   inkscape:current-layer="svg2" />
-<g
-   id="g35"
-   style="fill:url(#radialGradient86956);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   transform="matrix(-1.1824583,0,0,1.3363867,61.073222,-0.7947482)">
-		<circle
-   style="fill:url(#radialGradient86964);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   sodipodi:ry="3.829"
-   sodipodi:rx="3.829"
-   sodipodi:cy="5.5700002"
-   sodipodi:cx="26.49"
-   id="circle37"
-   r="3.829"
-   cy="5.5700002"
-   cx="26.49"
-   stroke-miterlimit="3.8637" />
-		<path
-   style="fill:url(#radialGradient86966);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path39"
-   stroke-miterlimit="3.8637"
-   d="" />
-	</g><g
-   id="Background"
-   transform="matrix(-1,0,0,1,40.436756,0)">
-</g>
-<g
-   id="Guides"
-   display="none"
-   style="display:none">
-</g>
-<g
-   id="g7"
-   style="fill:#2f2f2f;fill-opacity:1"
-   transform="matrix(-1,0,0,1,40.436756,0)">
-		<path
-   style="fill:#2f2f2f;fill-opacity:1;fill-rule:evenodd"
-   id="path9"
-   d="M 20.569,13.286 C 20.843,15.459 20.791,17.834 20.82,18.542 C 20.865,18.917 21.913,19.241 22.094,18.877 C 22.301,17.514 22.586,14.847 22.92,13.455 C 23.372,9.917 23.886,8.247 24.072,7.257 C 24.58,4.567 25.014,3.12 26.762,3.12 C 28.384,3.12 28.623,5.167 28.153,8.165 C 28.025,9.379 28.036,12.24 27.433,14.894 C 27.165,16.691 26.962,21.278 27.139,24.981 C 27.189,26.045 27.669,27.315 28.242,27.945 C 29.462,27.773 30.379,24.377 31.988,22.847 C 32.809,21.464 34.883,19.299 36.951,19.299 C 39.243,19.299 39.292,21 38.345,22.262 C 37.187,23.806 36.525,24.528 36.079,25.802 C 35.633,27.076 33.758,29.778 33.471,31.209 C 32.902,34.054 32.471,35.105 29.284,37.661 C 27.783,38.865 27.302,39.637 26.855,40.401 C 26.347,41.273 26.409,44.721 26.409,46.212 L 10.64,46.212 C 10.64,46.212 10.767,43.587 10.513,42.058 C 10.461,41.746 10.105,39.613 9.176,38.231 C 8.317,36.954 5.902,32.306 5.902,26.836 C 5.902,24.026 4.39,21.718 3.854,19.533 C 3.591,17.833 2.638,15.423 2.57,14.709 C 1.684,11.559 2.132,10.118 3.741,10.118 C 5.132,10.118 5.528,11.927 6.093,13.622 C 6.258,14.52 7.505,16.934 7.788,18.233 C 8.038,19.088 8.897,21.556 9.437,21.727 C 9.75,21.784 10.151,21.523 10.291,21.043 C 10.52,20.26 9.818,18.945 9.539,15.26 C 9.087,12.343 9.17,10.139 9.116,8.949 C 8.653,5.424 9.133,3.598 10.693,3.598 C 12.176,3.598 12.568,4.455 13.02,7.936 C 13.189,9.518 13.754,12.095 14.037,14.864 C 14.213,16.364 14.639,18.601 14.98,19.17 C 15.285,19.503 15.919,19.198 15.9,18.848 C 15.894,16.377 15.732,14.977 15.958,12.999 C 15.845,10.287 16.219,7.823 16.219,6.467 C 16.219,3.494 16.502,1.473 18.358,1.473 C 20.333,1.473 20.287,3.776 20.287,6.806 C 20.399,7.545 20.456,10.087 20.569,13.286 z"
-   clip-rule="evenodd" />
-	</g>
-<g
-   style="display:inline"
-   inkscape:label="Base"
-   id="layer1"
-   transform="matrix(-1,0,0,1,92.903403,2.6102791)" /></svg>
\ No newline at end of file
diff --git a/panels/user-accounts/data/icons/right-thumb.png b/panels/user-accounts/data/icons/right-thumb.png
deleted file mode 100644
index 1c967d611303acb62dc4d84d6397fa2a13b391d2..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1486
zcmV;<1u^=GP)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00004b3#c}2nYxW
zd<bNS00009a7bBm000fw000fw0YWI7cmMzZ8FWQhbW?9;ba!ELWdL_~cP?peYja~^
zaAhuUa%Y?FJQ@H11xrapK~!jg)tXCeRAm&$e|P5gH7#vvZLNI}P!L262N0D7V1p#4
z7&Xx<ku-uDS8mwo%ETzR5H-4RBf3$v8WRJOK!Oj9CLjoM6b$mHwFOFT(+2`=DV-S?
zGcC7wzG3Fhy~X(7-0z-qzVn@bzjMFGnOgC9oc}ZIsUAQ?@_{wL2(U+0qe1!)1?eme
zUIo4cb^$L1?cDbah{#4@8SsIs?lG7=?r5(AUU&7kfcZd|st$M^-`5O?$Rglvpc&XH
zA~OwUWsY{OLB9n!2Amg>xn5)Nn?iMtc0TZs!KT#FE*Fs^m%b(WEC8PL8h~E{W3KlH
zoi8F%NP?IXH4go4K(#~XIi-Up&?q8#j`tEnA7@G}^Ba#}0wb>X2r$p_UTo+SakTID
z8;@TC=MA!jj<$(_Q#Qw?^Snp+T}ICtWCCnUwj&1p^#}~6I1^c!wEJ9DFS_-<W<XU(
zfIgQv(+otCf!V+;mu}KNAR<k`USKQmiYbO5c4GG|WSc@WNzDNFMz#^KlI>Cqm<j?_
zB63TzZAzhW*=&Puf`EwB0F4e^w`uSo2%I&@79^k347zag>CS(Een)$)!xqd7Mj!-C
zj>nG#*CQ~`pmV0sdY7)vG<XmMh7Gdu;7kO@$Gq1iA0zq45RrvU{+338A5DWBm(fK#
z?e!tsZV89&s(38g7mG$)53d=0KMeu*W|oOSSVSVO00G)nb$n-k+NIm4szVtGG=6W{
zgO|gtk($~E>T2efmxN0p9^-t^$;C@|7p@t;bfx)Nb9~eT0n^G629~<V22R7o^19BY
z``Q$I3W0&k_RB>L^$*Xiyeq%PuB9|o23S<oR+Y9DPHXCHKeP#W(dFZc!Ec?2v;eCN
zx@zElgZxzTxthrbyzB@p+HRFoQt;GGMKkhyHeaOexKdGH&K;}gQs2}-tRiOjcAt7|
z@fX&XUz+2+4j-l&0Qe}4{Dm~~j^uN#Oa3=-I3s~jocpZG>Gjs3e0ujK;_Djdrt4@o
zGxj#HWYe8gRnKnd9PD3C;)<AwfLHX2$ZX&Vm%LR~W9d3gtU|FodqqKHT4DK|GOUm_
z$*A+l84hngN?GLQJgdN7>GEMpp<M6=&<Yf~<l79k6PUD&T7)RBD`Ng5x2G6(?mI`<
z*8UVZ!OcJosmJR-R5fk-fP+Bj>evs_k)e?&Q5HV4fU@e;1*B)!1)@8uF1f@(5isG~
zOa|9d$l|BbzP_`=u_3M$4zX&ZJ5v&fAFSLUBF<Y?P$^`>&zTG+2poAdJ{TPy{j_J`
z&(Z#9A0_t`GH2zjsXgM{0=(&v)CUo18XU}IFzFkZUOe_%U&o2Bj(6=JJae^!S<luJ
zvMp1;=R{<Avc2475CAR$Co&mXrrPL|o%!qY?1Gj&JHKk^<BH1YZ^fp1&M9C6iHe)?
ztnL%Ps;Xo%G7@k?MCwVL1l{G4sm5+qZOUYn@ieNcXMs-w3CSC}vN6i`IQ<rIqwDa-
z3yd3C5m43Nfp2_;;~m%Cz{cU_Li1UUf#iZQ;Ja)Ly%5+AT+JyQ@7S-Z|72sBH33!a
z=f<Vcj%*FR-ie<F+CBF1iVGwPSy{mof#j0f$hFJIRN%dA(+6^>N~mfF2@<AykY5Y~
z?|A8uQ&~k-+ezGOgPw^GRkb&>*)`-`7gE(WU<L43u0C9d1Mhn6<hMHAN#YV7#Baa5
zRQ0siPQEL1s(JuWzkW#Ehdm>xAG%Kl;Nw6poq{6ZdFl;t|4@<@f+FC)=;wl*?$$vO
o2;w9DPYI;0oMnlzT>p#ZUsjB9JeRSdb^rhX07*qoM6N<$f<HF8K>z>%

diff --git a/panels/user-accounts/data/icons/right-thumb.svg b/panels/user-accounts/data/icons/right-thumb.svg
deleted file mode 100644
index 0aa0f2e..0000000
--- a/panels/user-accounts/data/icons/right-thumb.svg
+++ /dev/null
@@ -1,182 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!-- Generator: Adobe Illustrator 13.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->
-<svg
-   xmlns:dc="http://purl.org/dc/elements/1.1/"
-   xmlns:cc="http://creativecommons.org/ns#"
-   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-   xmlns:svg="http://www.w3.org/2000/svg"
-   xmlns="http://www.w3.org/2000/svg"
-   xmlns:xlink="http://www.w3.org/1999/xlink"
-   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
-   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
-   version="1.0"
-   x="0px"
-   y="0px"
-   width="48"
-   height="48"
-   viewBox="0 0 40.425 46.214"
-   enable-background="new 0 0 40.425 46.214"
-   xml:space="preserve"
-   id="svg2"
-   sodipodi:version="0.32"
-   inkscape:version="0.46"
-   sodipodi:docname="right-thumb.svg"
-   inkscape:output_extension="org.inkscape.output.svg.inkscape"
-   inkscape:export-filename="/Users/mlanglie/Desktop/Fingerprint Enrollment Icons/Vector/left-pinky-finger.png"
-   inkscape:export-xdpi="90"
-   inkscape:export-ydpi="90"><metadata
-   id="metadata44"><rdf:RDF><cc:Work
-       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
-         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /></cc:Work></rdf:RDF></metadata><defs
-   id="defs42"><inkscape:perspective
-   sodipodi:type="inkscape:persp3d"
-   inkscape:vp_x="0 : 23.107 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_z="40.424999 : 23.107 : 1"
-   inkscape:persp3d-origin="20.2125 : 15.404667 : 1"
-   id="perspective46" />
-	
-	
-	
-	
-	
-	
-<radialGradient
-   r="8.341651"
-   fy="9.3411446"
-   fx="38.658855"
-   cy="9.3411446"
-   cx="38.658855"
-   gradientUnits="userSpaceOnUse"
-   id="radialGradient2479"
-   xlink:href="#linearGradient2378"
-   inkscape:collect="always" /><linearGradient
-   id="linearGradient2378"><stop
-     id="stop2386"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     style="stop-color:#27dc16;stop-opacity:1;"
-     offset="1"
-     id="stop2382" /></linearGradient><linearGradient
-   id="linearGradient3702"><stop
-     id="stop3704"
-     offset="0"
-     style="stop-color:black;stop-opacity:0;" /><stop
-     style="stop-color:black;stop-opacity:1;"
-     offset="0.5"
-     id="stop3710" /><stop
-     id="stop3706"
-     offset="1"
-     style="stop-color:black;stop-opacity:0;" /></linearGradient><linearGradient
-   id="linearGradient6732"><stop
-     id="stop6734"
-     offset="0"
-     style="stop-color:#ffffff;stop-opacity:1;" /><stop
-     id="stop6736"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:1;" /></linearGradient><linearGradient
-   id="linearGradient4585"><stop
-     id="stop4587"
-     offset="0"
-     style="stop-color:#9e9e9e;stop-opacity:1;" /><stop
-     id="stop4589"
-     offset="1"
-     style="stop-color:#dddddd;stop-opacity:0;" /></linearGradient><inkscape:perspective
-   id="perspective2516"
-   inkscape:persp3d-origin="24 : 16 : 1"
-   inkscape:vp_z="48 : 24 : 1"
-   inkscape:vp_y="0 : 1000 : 0"
-   inkscape:vp_x="0 : 24 : 1"
-   sodipodi:type="inkscape:persp3d" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86956"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86964"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /><radialGradient
-   inkscape:collect="always"
-   xlink:href="#linearGradient2378"
-   id="radialGradient86966"
-   gradientUnits="userSpaceOnUse"
-   gradientTransform="matrix(1.0059869,5.3782029e-7,-9.45767e-7,1.1767077,-0.1585918,-0.9842761)"
-   cx="26.49"
-   cy="5.5700002"
-   fx="26.49"
-   fy="5.5700002"
-   r="4.0552225" /></defs><sodipodi:namedview
-   inkscape:window-height="933"
-   inkscape:window-width="1054"
-   inkscape:pageshadow="2"
-   inkscape:pageopacity="0.0"
-   guidetolerance="10.0"
-   gridtolerance="10.0"
-   objecttolerance="10.0"
-   borderopacity="1.0"
-   bordercolor="#666666"
-   pagecolor="#ffffff"
-   id="base"
-   showgrid="false"
-   inkscape:zoom="11.122171"
-   inkscape:cx="22.316511"
-   inkscape:cy="30.299841"
-   inkscape:window-x="116"
-   inkscape:window-y="117"
-   inkscape:current-layer="svg2" />
-<g
-   id="g35"
-   style="fill:url(#radialGradient86956);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   transform="matrix(-1.1916623,0,0,1.4021101,35.910183,14.334323)">
-		<circle
-   style="fill:url(#radialGradient86964);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   sodipodi:ry="3.829"
-   sodipodi:rx="3.829"
-   sodipodi:cy="5.5700002"
-   sodipodi:cx="26.49"
-   id="circle37"
-   r="3.829"
-   cy="5.5700002"
-   cx="26.49"
-   stroke-miterlimit="3.8637" />
-		<path
-   style="fill:url(#radialGradient86966);fill-opacity:1;stroke:#31ae00;stroke-width:0.45244551;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
-   id="path39"
-   stroke-miterlimit="3.8637"
-   d="" />
-	</g><g
-   id="Background"
-   transform="matrix(-1,0,0,1,40.436756,0)">
-</g>
-<g
-   id="Guides"
-   display="none"
-   style="display:none">
-</g>
-<g
-   id="g7"
-   style="fill:#2f2f2f;fill-opacity:1"
-   transform="matrix(-1,0,0,1,40.436756,0)">
-		<path
-   style="fill:#2f2f2f;fill-opacity:1;fill-rule:evenodd"
-   id="path9"
-   d="M 20.569,13.286 C 20.843,15.459 20.791,17.834 20.82,18.542 C 20.865,18.917 21.913,19.241 22.094,18.877 C 22.301,17.514 22.586,14.847 22.92,13.455 C 23.372,9.917 23.886,8.247 24.072,7.257 C 24.58,4.567 25.014,3.12 26.762,3.12 C 28.384,3.12 28.623,5.167 28.153,8.165 C 28.025,9.379 28.036,12.24 27.433,14.894 C 27.165,16.691 26.962,21.278 27.139,24.981 C 27.189,26.045 27.669,27.315 28.242,27.945 C 29.462,27.773 30.379,24.377 31.988,22.847 C 32.809,21.464 34.883,19.299 36.951,19.299 C 39.243,19.299 39.292,21 38.345,22.262 C 37.187,23.806 36.525,24.528 36.079,25.802 C 35.633,27.076 33.758,29.778 33.471,31.209 C 32.902,34.054 32.471,35.105 29.284,37.661 C 27.783,38.865 27.302,39.637 26.855,40.401 C 26.347,41.273 26.409,44.721 26.409,46.212 L 10.64,46.212 C 10.64,46.212 10.767,43.587 10.513,42.058 C 10.461,41.746 10.105,39.613 9.176,38.231 C 8.317,36.954 5.902,32.306 5.902,26.836 C 5.902,24.026 4.39,21.718 3.854,19.533 C 3.591,17.833 2.638,15.423 2.57,14.709 C 1.684,11.559 2.132,10.118 3.741,10.118 C 5.132,10.118 5.528,11.927 6.093,13.622 C 6.258,14.52 7.505,16.934 7.788,18.233 C 8.038,19.088 8.897,21.556 9.437,21.727 C 9.75,21.784 10.151,21.523 10.291,21.043 C 10.52,20.26 9.818,18.945 9.539,15.26 C 9.087,12.343 9.17,10.139 9.116,8.949 C 8.653,5.424 9.133,3.598 10.693,3.598 C 12.176,3.598 12.568,4.455 13.02,7.936 C 13.189,9.518 13.754,12.095 14.037,14.864 C 14.213,16.364 14.639,18.601 14.98,19.17 C 15.285,19.503 15.919,19.198 15.9,18.848 C 15.894,16.377 15.732,14.977 15.958,12.999 C 15.845,10.287 16.219,7.823 16.219,6.467 C 16.219,3.494 16.502,1.473 18.358,1.473 C 20.333,1.473 20.287,3.776 20.287,6.806 C 20.399,7.545 20.456,10.087 20.569,13.286 z"
-   clip-rule="evenodd" />
-	</g>
-<g
-   style="display:inline"
-   inkscape:label="Base"
-   id="layer1"
-   transform="matrix(-1,0,0,1,92.903403,2.6102791)" /></svg>
\ No newline at end of file
diff --git a/panels/user-accounts/data/org.freedesktop.realmd.xml b/panels/user-accounts/data/org.freedesktop.realmd.xml
deleted file mode 100644
index 316213a..0000000
--- a/panels/user-accounts/data/org.freedesktop.realmd.xml
+++ /dev/null
@@ -1,666 +0,0 @@
-<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
- "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
-<node name="/">
-
-	<!--
-	  org.freedesktop.realmd.Provider:
-	  @short_description: a realm provider
-
-	  Various realm providers represent different software implementations
-	  that provide access to realms or domains.
-
-	  This interface is implemented by individual providers, but is
-	  aggregated globally at the system bus name
-	  <literal>org.freedesktop.realmd</literal>
-	  with the object path <literal>/org/freedesktop/realmd</literal>
-	-->
-	<interface name="org.freedesktop.realmd.Provider">
-
-		<!--
-		  Name: the name of the provider
-
-		  The name of the provider. This is not normally displayed
-		  to the user, but may be useful for diagnostics or debugging.
-		-->
-		<property name="Name" type="s" access="read"/>
-
-		<!--
-		  Version: the version of the provider
-
-		  The version of the provider. This is not normally used in
-		  logic, but may be useful for diagnostics or debugging.
-		-->
-		<property name="Version" type="s" access="read"/>
-
-		<!--
-		  Realms: a list of realms
-
-		  A list of known, enrolled or discovered realms. All realms
-		  that this provider knows about are listed here. As realms
-		  are discovered they are added to this list.
-
-		  Each realm is represented by the DBus object path of the
-		  realm object.
-		-->
-		<property name="Realms" type="ao" access="read"/>
-
-		<!--
-		  Discover:
-		  @string: an input string to discover realms for
-		  @options: options for the discovery operation
-		  @relevance: the relevance of the returned results
-		  @realm: a list of realms discovered
-
-		  Discover realms for the given string. The input @string is
-		  usually a domain or realm name, perhaps typed by a user. If
-		  an empty string is provided the realm provider should try to
-		  discover a default realm if possible (eg: from DHCP).
-
-		  @options can contain, but is not limited to, the following values:
-		  <itemizedlist>
-		    <listitem><para><literal>operation</literal>: a string
-		      identifier chosen by the client, which can then later be
-		      passed to org.freedesktop.realmd.Service.Cancel() in order
-		      to cancel the operation</para></listitem>
-		  </itemizedlist>
-
-		  The @relevance returned can be used to rank results from
-		  different discover calls to different providers. Implementors
-		  should return a positive number if the provider highly
-		  recommends that the realms be handled by this provider,
-		  or a zero if it can possibly handle the realms. Negative
-		  should be returned if no realms are found.
-
-		  This method does not return an error when no realms are
-		  discovered. It simply returns an @realm list.
-
-		  To see diagnostic information about the discovery process
-		  connect to the org.freedesktop.realmd.Service::Diagnostics
-		  signal.
-
-		  This method requires authorization for the PolicyKit action
-		  called <literal>org.freedesktop.realmd.discover-realm</literal>.
-
-		  In addition to common DBus error results, this method may
-		  return:
-		  <itemizedlist>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Failed</literal>:
-		      may be returned if the discovery could not be run for some reason.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Cancelled</literal>:
-		      returned if the operation was cancelled.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.NotAuthorized</literal>:
-		      returned if the calling client is not permitted to perform a discovery
-		      operation.</para></listitem>
-		  </itemizedlist>
-		-->
-		<method name="Discover">
-			<arg name="string" type="s" direction="in"/>
-			<arg name="options" type="a{sv}" direction="in"/>
-			<arg name="relevance" type="i" direction="out"/>
-			<arg name="realm" type="ao" direction="out"/>
-		</method>
-
-	</interface>
-
-	<!--
-	  org.freedesktop.realmd.Service:
-	  @short_description: the realmd service
-
-	  Global calls for managing the realmd service. Usually you'll want
-	  to use #org.freedesktop.realmd.Provider instead.
-
-	  This interface is implemented by the realmd service, and is always
-	  available at the object path <literal>/org/freedesktop/realmd</literal>
-
-	  The service also implements the
-	  <literal>org.freedesktop.DBus.ObjectManager</literal> interface which
-	  makes it easy to retrieve all realmd objects and properties in one go.
-	-->
-	<interface name="org.freedesktop.realmd.Service">
-
-		<!--
-		  Cancel:
-		  @operation: the operation to cancel
-
-		  Cancel a realmd operation. To be able to cancel an operation
-		  pass a uniquely chosen <literal>operation</literal> string
-		  identifier as an option in the methods <literal>options</literal>
-		  argument.
-
-		  These operation string identifiers should be unique per client
-		  calling the realmd service.
-
-		  It is not guaranteed that the service can or will cancel the
-		  operation. For example the operation may have already completed
-		  by the time this method is handled. The caller of the operation
-		  method will receive a
-		  <literal>org.freedesktop.realmd.Error.Cancelled</literal>
-		  if the operation was cancelled.
-		-->
-		<method name="Cancel">
-			<arg name="operation" type="s" direction="in"/>
-		</method>
-
-		<!--
-		  SetLocale:
-		  @locale: the locale for the client
-
-		  Set the language @locale for the client. This locale is used
-		  for error messages. The locale is used until the next time
-		  this method is called, the client disconnects, or the client
-		  calls #org.freedesktop.realmd.Service.Release().
-		-->
-		<method name="SetLocale">
-			<arg name="locale" type="s" direction="in"/>
-		</method>
-
-		<!--
-		  Diagnostics:
-		  @data: diagnostic data
-		  @operation: the operation this data resulted from
-
-		  This signal is fired when diagnostics result from an operation
-		  in the provider or one of its realms.
-
-		  It is not guaranteed that this signal is emitted once per line.
-		  More than one line may be contained in @data, or a partial
-		  line. New line characters are embedded in @data.
-
-		  This signal is sent explicitly to the client which invoked
-		  operation method. In order to tell which operation this
-		  diagnostic data results from, pass a unique
-		  <literal>operation</literal> string identifier in the
-		  <literal>options</literal> argument of the operation method.
-		  That same identifier will be passed back via the @operation
-		  argument of this signal.
-		-->
-		<signal name="Diagnostics">
-			<arg name="data" type="s"/>
-			<arg name="operation" type="s"/>
-		</signal>
-
-		<!--
-		  Release:
-
-		  Normally realmd waits until all clients have disconnected
-		  before exiting itself, sometime later. For long lived clients
-		  they can call this method to allow the realmd service to quit.
-		  This is an optimization. The daemon will not exit immediately.
-		  It is safe to call this multiple times.
-		-->
-		<method name="Release">
-			<!-- no arguments -->
-		</method>
-
-	</interface>
-
-	<!--
-	  org.freedesktop.realmd.Realm:
-	  @short_description: a realm
-
-	  Represents one realm.
-
-	  Contains generic information about a realm, and useful properties for
-	  introspecting what kind of realm this is and how to work with
-	  the realm.
-
-	  Use #org.freedesktop.realmd.Provider:Realms or
-	  #org.freedesktop.realmd.Provider.Discover() to get access to some
-	  kerberos realm objects.
-
-	  Realms will always implement additional interfaces, such as
-	  #org.freedesktop.realmd.Kerberos.  Do not assume that all realms
-	  implement that kerberos interface. Use the
-	  #org.freedesktop.realmd.Realm:SupportedInterfaces property to see
-	  which interfaces are set.
-
-	  Different realms support various ways to configure them on the
-	  system. Use the #org.freedesktop.realmd.Realm:Configured property
-	  to determine if a realm is configured. If it is configured the
-	  property will be set to the interface of the mechanism that was
-	  used to configure it.
-
-	  To configure a realm, look in the
-	  #org.freedesktop.realmd.Realm:SupportedInterfaces property for a
-	  recognized purpose specific interface that can be used for
-	  configuration, such as the
-	  #org.freedesktop.realmd.KerberosMembership interface and its
-	  #org.freedesktop.realmd.KerberosMembership.Join() method.
-
-	  To deconfigure a realm from the current system, you can use the
-	  #org.freedesktop.realmd.Realm.Deconfigure() method. In additon some
-	  of the configuration specific interfaces provide methods to
-	  deconfigure a realm in a specific way, such as
-	  #org.freedesktop.realmd.KerberosMembership.Leave() method.
-
-	  The various properties are guaranteed to have been updated before
-	  the operation methods return, if they change state.
-	-->
-	<interface name="org.freedesktop.realmd.Realm">
-
-		<!--
-		  Name: the realm name
-
-		  This is the name of the realm, appropriate for display to
-		  end users where necessary.
-		-->
-		<property name="Name" type="s" access="read"/>
-
-		<!--
-		  Configured: whether this domain is configured and how
-
-		  If this property is an empty string, then the realm is not
-		  configured. Otherwise the realm is configured, and contains
-		  a string which is the interface that represents how it was
-		  configured, for example #org.freedesktop.realmd.KerberosMembership.
-		-->
-		<property name="Configured" type="s" access="read"/>
-
-		<!--
-		  Deconfigure: deconfigure this realm
-
-		  Deconfigure this realm from the local machine with standard
-		  default behavior.
-
-		  The behavior of this method depends on the which configuration
-		  interface is present in the
-		  #org.freedesktop.realmd.Realm.Configured property. It does not
-		  always delete membership accounts in the realm, but just
-		  reconfigures the local machine so it no longer is configured
-		  for the given realm. In some cases the implementation may try
-		  to update membership accounts, but this is not guaranteed.
-
-		  Various configuration interfaces may support more specific ways
-		  to deconfigure a realm in a specific way, such as the
-		  #org.freedesktop.realmd.KerberosMembership.Leave() method.
-
-		  @options can contain, but is not limited to, the following values:
-		  <itemizedlist>
-		    <listitem><para><literal>operation</literal>: a string
-		      identifier chosen by the client, which can then later be
-		      passed to org.freedesktop.realmd.Service.Cancel() in order
-		      to cancel the operation</para></listitem>
-		  </itemizedlist>
-
-		  This method requires authorization for the PolicyKit action
-		  called <literal>org.freedesktop.realmd.deconfigure-realm</literal>.
-
-		  In addition to common DBus error results, this method may return:
-		  <itemizedlist>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Failed</literal>:
-		      may be returned if the deconfigure failed for a generic reason.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Cancelled</literal>:
-		      returned if the operation was cancelled.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.NotAuthorized</literal>:
-		      returned if the calling client is not permitted to deconfigure a
-		      realm.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.NotConfigured</literal>:
-		      returned if this realm is not configured on the machine.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Busy</literal>:
-		      returned if the service is currently performing another operation like
-		      join or leave.</para></listitem>
-		  </itemizedlist>
-		-->
-		<method name="Deconfigure">
-			<arg name="options" type="a{sv}" direction="in"/>
-		</method>
-
-		<!--
-		  SupportedInterfaces:
-
-		  Additional supported interfaces of this realm. This includes
-		  interfaces that contain more information about the realm,
-		  such as #org.freedesktop.realmd.Kerberos and interfaces
-		  which contain methods for configuring a realm, such as
-		  #org.freedesktop.realmd.KerberosMembership.
-		-->
-		<property name="SupportedInterfaces" type="as" access="read"/>
-
-		<!--
-		  Details: informational details about the realm
-
-		  Informational details about the realm. The following values
-		  should be present:
-		  <itemizedlist>
-		    <listitem><para><literal>server-software</literal>:
-		      identifier of the software running on the server (eg:
-		      <literal>active-directory</literal>).</para></listitem>
-		    <listitem><para><literal>client-software</literal>:
-		      identifier of the software running on the client (eg:
-		      <literal>sssd</literal>).</para></listitem>
-		  </itemizedlist>
-		-->
-		<property name="Details" type="a(ss)" access="read"/>
-
-		<!--
-		  LoginFormats: supported formats for login names
-
-		  Supported formats for login to this realm. This is only
-		  relevant once the realm has been enrolled. The formats
-		  will contain a <literal>%U</literal> in the string, which
-		  indicate where the user name should be placed. The formats
-		  may contain a <literal>%D</literal> in the string which
-		  indicate where a domain name should be placed.
-
-		  The first format in the list is the preferred format for
-		  login names.
-		-->
-		<property name="LoginFormats" type="as" access="read"/>
-
-		<!--
-		  LoginPolicy: the policy for logins using this realm
-
-		  The policy for logging into this computer using this realm.
-
-		  The policy can be changed using the
-		  #org.freedesktop.realmd.Realm.ChangeLoginPolicy() method.
-
-		  The following policies are predefined. Not all providers
-		  support all these policies and there may be provider specific
-		  policies or multiple policies represented in the string:
-		  <itemizedlist>
-		    <listitem><para><literal>allow-any-login</literal>: allow
-		      login by any authenticated user present in this
-		      realm.</para></listitem>
-		    <listitem><para><literal>allow-permitted-logins</literal>:
-		      only allow the logins permitted in the
-		      #org.freedesktop.realmd.Realm:PermittedLogins
-		      property.</para></listitem>
-		    <listitem><para><literal>deny-any-login</literal>:
-		      don't allow any logins via authenticated users of this
-		      realm.</para></listitem>
-		  </itemizedlist>
-		-->
-		<property name="LoginPolicy" type="s" access="read"/>
-
-		<!--
-		  PermittedLogins: the permitted login names
-
-		  The list of permitted authenticated users allowed to login
-		  into this computer. This is only relevant if the
-		  #org.freedesktop.realmd.Realm:LoginPolicy property
-		  contains the <literal>allow-permitted-logins</literal>
-		  string.
-		-->
-		<property name="PermittedLogins" type="as" access="read"/>
-
-		<!--
-		  ChangeLoginPolicy:
-		  @login_policy: the new login policy, or an empty string
-		  @permitted_add: a list of logins to permit
-		  @permitted_remove: a list of logins to not permit
-		  @options: options for this operation
-
-		  Change the login policy and/or permitted logins for this realm.
-
-		  Not all realms support the all the various login policies. An
-		  error will be returned if the new login policy is not supported.
-		  You may specify an empty string for the @login_policy argument
-		  which will cause no change in the policy itself. If the policy
-		  is changed, it will be reflected in the
-		  #org.freedesktop.realmd.Realm:LoginPolicy property.
-
-		  The @permitted_add and @permitted_remove arguments represent
-		  lists of login names that should be added and removed from
-		  the #org.freedesktop.realmd.Kerberos:PermittedLogins property.
-
-		  @options can contain, but is not limited to, the following values:
-		  <itemizedlist>
-		    <listitem><para><literal>operation</literal>: a string
-		      identifier chosen by the client, which can then later be
-		      passed to org.freedesktop.realmd.Service.Cancel() in order
-		      to cancel the operation</para></listitem>
-		  </itemizedlist>
-
-		  This method requires authorization for the PolicyKit action
-		  called <literal>org.freedesktop.realmd.login-policy</literal>.
-
-		  In addition to common DBus error results, this method may return:
-		  <itemizedlist>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Failed</literal>:
-		      may be returned if the policy change failed for a generic reason.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Cancelled</literal>:
-		      returned if the operation was cancelled.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.NotAuthorized</literal>:
-		      returned if the calling client is not permitted to change login policy
-		      operation.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.NotConfigured</literal>:
-		      returned if the realm is not configured.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Busy</literal>:
-		      returned if the service is currently performing another operation like
-		      join or leave.</para></listitem>
-		  </itemizedlist>
-		-->
-		<method name="ChangeLoginPolicy">
-			<arg name="login_policy" type="s" direction="in"/>
-			<arg name="permitted_add" type="as" direction="in"/>
-			<arg name="permitted_remove" type="as" direction="in"/>
-			<arg name="options" type="a{sv}" direction="in"/>
-		</method>
-
-	</interface>
-
-	<!--
-	  org.freedesktop.realmd.Kerberos:
-	  @short_description: a kerberos realm
-
-	  An interface that describes a kerberos realm in more detail. This
-	  is always implemented on an DBus object path that also implements
-	  the #org.freedesktop.realmd.Realm interface.
-	-->
-	<interface name="org.freedesktop.realmd.Kerberos">
-
-		<!--
-		  RealmName: the kerberos realm name
-
-		  The kerberos name for this realm. This is usually in upper
-		  case.
-		-->
-		<property name="RealmName" type="s" access="read"/>
-
-		<!--
-		  DomainName: the DNS domain name
-
-		  The DNS domain name for this realm.
-		-->
-		<property name="DomainName" type="s" access="read"/>
-
-	</interface>
-
-	<!--
-	  org.freedesktop.realmd.KerberosMembership:
-
-	  An interface used to configure this machine by joining a realm.
-
-	  It sets up a computer/host account in the realm for this machine
-	  and a keytab to track the credentials for that account.
-
-	  The various properties are guaranteed to have been updated before
-	  the operation methods return, if they change state.
-	-->
-	<interface name="org.freedesktop.realmd.KerberosMembership">
-
-		<!--
-		  SuggestedAdministrator: common administrator name
-
-		  The common administrator name for this type of realm. This
-		  can be used by clients as a hint when prompting the user for
-		  administrative authentication.
-		-->
-		<property name="SuggestedAdministrator" type="s" access="read"/>
-
-		<!--
-		  SupportedJoinCredentials: credentials supported for joining
-
-		  Various kinds of credentials that are supported when calling the
-		  #org.freedesktop.realmd.Kerberos.Join() method.
-
-		  Each credential is represented by a type, and an owner. The type
-		  denotes which kind of credential is passed to the method. The
-		  owner indicates to the client how to prompt the user or obtain
-		  the credential, and to the service how to use the credential.
-
-		  The various types are:
-		  <itemizedlist>
-		    <listitem><para><literal>ccache</literal>:
-		      the credentials should contain an array of bytes as a
-		      <literal>ay</literal> containing the data from a kerberos
-		      credential cache file.</para></listitem>
-		    <listitem><para><literal>password</literal>:
-		      the credentials should contain a pair of strings as a
-		      <literal>(ss)</literal> representing a name and
-		      password. The name may contain a realm in the standard
-		      kerberos format. If missing, it will default to this
-		      realm. The name may be empty for a computer or one time
-		      password.</para></listitem>
-		    <listitem><para><literal>automatic</literal>:
-		      the credentials should contain an empty string as a
-		      <literal>s</literal>. Using <literal>automatic</literal>
-		      indicates that default or system credentials are to be
-		      used.</para></listitem>
-		  </itemizedlist>
-
-		  The various owners are:
-		  <itemizedlist>
-		    <listitem><para><literal>administrator</literal>:
-		      the credentials belong to a kerberos user principal.
-		      The caller may use this as a hint to prompt the user
-		      for administrative credentials.</para></listitem>
-		    <listitem><para><literal>user</literal>:
-		      the credentials belong to a kerberos user principal.
-		      The caller may use this as a hint to prompt the user
-		      for his (possibly non-administrative)
-		      credentials.</para></listitem>
-		    <listitem><para><literal>computer</literal>:
-		      the credentials belong to the computer realmd is
-		      being run on.</para></listitem>
-		    <listitem><para><literal>secret</literal>:
-		      the credentials are a one time password or other secret
-		      used to join or leave the computer.</para></listitem>
-		  </itemizedlist>
-		-->
-		<property name="SupportedJoinCredentials" type="a(ss)" access="read"/>
-
-		<!--
-		  SupportedLeaveCredentials: credentials supported for leaving
-
-		  Various kinds of credentials that are supported when calling the
-		  #org.freedesktop.realmd.Kerberos.Leave() method.
-
-		  See #org.freedesktop.realmd.Kerberos:SupportedJoinCredentials for
-		  a discussion of what the values represent.
-		-->
-		<property name="SupportedLeaveCredentials" type="a(ss)" access="read"/>
-
-		<!--
-		  Join:
-
-		  Join this machine to the realm and enroll the machine.
-
-		  If this method returns successfully then the machine will be
-		  joined to the realm. It is not necessary to restart services or the
-		  machine afterward. Relevant properties on the realm will be updated
-		  before the method returns.
-
-		  The @credentials should be set according to one of the
-		  supported credentials returned by
-		  #org.freedesktop.realmd.Kerberos:SupportedJoinCredentials.
-		  The first string in the tuple is the type, the second string
-		  is the owner, and the variant contains the credential contents
-		  See the discussion at
-		  #org.freedesktop.realmd.Kerberos:SupportedJoinCredentials
-		  for more information.
-
-		  @options can contain, but is not limited to, the following values:
-		  <itemizedlist>
-		    <listitem><para><literal>operation</literal>: a string
-		      identifier chosen by the client, which can then later be
-		      passed to org.freedesktop.realmd.Service.Cancel() in order
-		      to cancel the operation</para></listitem>
-		  </itemizedlist>
-
-		  This method requires authorization for the PolicyKit action
-		  called <literal>org.freedesktop.realmd.configure-realm</literal>.
-
-		  In addition to common DBus error results, this method may return:
-		  <itemizedlist>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Failed</literal>:
-		      may be returned if the join failed for a generic reason.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Cancelled</literal>:
-		      returned if the operation was cancelled.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.NotAuthorized</literal>:
-		      returned if the calling client is not permitted to perform an join
-		      operation.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.AuthenicationFailed</literal>:
-		      returned if the credentials passed did not authenticate against the realm
-		      correctly. It is appropriate to prompt the user again.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.AlreadyEnrolled</literal>:
-		      returned if already enrolled in this realm, or another realm and enrolling
-		      in multiple realms is not supported.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Busy</literal>:
-		      returned if the service is currently performing another operation like
-		      join or leave.</para></listitem>
-		  </itemizedlist>
-		-->
-		<method name="Join">
-			<arg name="credentials" type="(ssv)" direction="in"/>
-			<arg name="options" type="a{sv}" direction="in"/>
-		</method>
-
-		<!--
-		  Leave:
-
-		  Leave the realm and unenroll the machine.
-
-		  If this method returns successfully then the machine will have
-		  left the domain and been unenrolled. It is not necessary to restart
-		  services or the machine afterward. Relevant properties on the realm
-		  will be updated before the method returns.
-
-		  The @credentials should be set according to one of the
-		  supported credentials returned by
-		  #org.freedesktop.realmd.Kerberos:SupportedUnenrollCredentials.
-		  The first string in the tuple is the type, the second string
-		  is the owner, and the variant contains the credential contents
-		  See the discussion at
-		  #org.freedesktop.realmd.Kerberos:SupportedEnrollCredentials
-		  for more information.
-
-		  @options can contain, but is not limited to, the following values:
-		  <itemizedlist>
-		    <listitem><para><literal>operation</literal>: a string
-		      identifier chosen by the client, which can then later be
-		      passed to org.freedesktop.realmd.Service.Cancel() in order
-		      to cancel the operation</para></listitem>
-		  </itemizedlist>
-
-		  This method requires authorization for the PolicyKit action
-		  called <literal>org.freedesktop.realmd.deconfigure-realm</literal>.
-
-		  In addition to common DBus error results, this method may return:
-		  <itemizedlist>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Failed</literal>:
-		      may be returned if the unenroll failed for a generic reason.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Cancelled</literal>:
-		      returned if the operation was cancelled.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.NotAuthorized</literal>:
-		      returned if the calling client is not permitted to perform an unenroll
-		      operation.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.AuthenicationFailed</literal>:
-		      returned if the credentials passed did not authenticate against the realm
-		      correctly. It is appropriate to prompt the user again.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.NotEnrolled</literal>:
-		      returned if not enrolled in this realm.</para></listitem>
-		    <listitem><para><literal>org.freedesktop.realmd.Error.Busy</literal>:
-		      returned if the service is currently performing another operation like
-		      enroll or unenroll.</para></listitem>
-		  </itemizedlist>
-		-->
-		<method name="Leave">
-			<arg name="credentials" type="(ssv)" direction="in"/>
-			<arg name="options" type="a{sv}" direction="in"/>
-		</method>
-
-	</interface>
-
-</node>
diff --git a/panels/user-accounts/data/password-dialog.ui b/panels/user-accounts/data/password-dialog.ui
deleted file mode 100644
index 4b9469e..0000000
--- a/panels/user-accounts/data/password-dialog.ui
+++ /dev/null
@@ -1,529 +0,0 @@
-<?xml version="1.0"?>
-<interface>
-  <!-- interface-requires gtk+ 3.8 -->
-  <!-- interface-naming-policy toplevel-contextual -->
-  <object class="GtkListStore" id="action-model">
-    <columns>
-      <!-- column-name gchararray -->
-      <column type="gchararray"/>
-      <!-- column-name gint -->
-      <column type="gint"/>
-    </columns>
-    <data>
-      <row>
-        <col id="0" translatable="yes">Set a password now</col>
-        <col id="1">0</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">Choose password at next login</col>
-        <col id="1">1</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">Log in without a password</col>
-        <col id="1">2</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">Disable this account</col>
-        <col id="1">3</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">Enable this account</col>
-        <col id="1">4</col>
-      </row>
-    </data>
-  </object>
-  <object class="GtkDialog" id="dialog">
-    <property name="border_width">5</property>
-    <property name="title"> </property>
-    <property name="resizable">False</property>
-    <property name="modal">True</property>
-    <property name="window_position">center-on-parent</property>
-    <property name="icon_name">system-users</property>
-    <property name="type_hint">dialog</property>
-    <child internal-child="vbox">
-      <object class="GtkVBox" id="dialog-vbox1">
-        <property name="visible">True</property>
-        <property name="orientation">vertical</property>
-        <property name="spacing">12</property>
-        <child>
-          <object class="GtkVBox" id="vbox7">
-            <property name="visible">True</property>
-            <property name="border_width">6</property>
-            <property name="orientation">vertical</property>
-            <property name="spacing">16</property>
-            <child>
-              <object class="GtkTable" id="table4">
-                <property name="visible">True</property>
-                <property name="n_rows">8</property>
-                <property name="n_columns">2</property>
-                <property name="column_spacing">10</property>
-                <property name="row_spacing">6</property>
-                <child>
-                  <object class="GtkVBox" id="vbox14">
-                    <property name="visible">True</property>
-                    <property name="orientation">vertical</property>
-                    <child>
-                      <object class="GtkLabel" id="password-normal-hint-label">
-                        <property name="visible">True</property>
-                        <property name="xalign">1</property>
-                        <property name="label" translatable="yes">_Hint</property>
-                        <property name="use_underline">True</property>
-                        <property name="mnemonic_widget">normal-hint-entry</property>
-                        <style>
-                          <class name="dim-label-ucc"/>
-                        </style>
-                      </object>
-                      <packing>
-                        <property name="position">0</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkLabel" id="label33">
-                        <property name="visible">True</property>
-                      </object>
-                      <packing>
-                        <property name="position">1</property>
-                      </packing>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="top_attach">7</property>
-                    <property name="bottom_attach">8</property>
-                    <property name="x_options">GTK_FILL</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkVBox" id="vbox15">
-                    <property name="visible">True</property>
-                    <property name="orientation">vertical</property>
-                    <child>
-                      <object class="GtkEntry" id="normal-hint-entry">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                      </object>
-                      <packing>
-                        <property name="position">0</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkLabel" id="password-normal-hint-description-label">
-                        <property name="visible">True</property>
-                        <property name="xalign">0</property>
-                        <property name="label" translatable="yes">This hint may be displayed at the login screen.  It will be visible to all users of this system.  Do &lt;b&gt;not&lt;/b&gt; include the password here.</property>
-                        <property name="use_markup">True</property>
-                        <property name="wrap">True</property>
-                        <attributes>
-                          <attribute name="scale" value="0.83333333333329995"/>
-                        </attributes>
-                      </object>
-                      <packing>
-                        <property name="position">1</property>
-                      </packing>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="right_attach">2</property>
-                    <property name="top_attach">7</property>
-                    <property name="bottom_attach">8</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkEntry" id="verify-entry">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="visibility">False</property>
-                    <property name="activates_default">True</property>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="right_attach">2</property>
-                    <property name="top_attach">5</property>
-                    <property name="bottom_attach">6</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="password-normal-verify-label">
-                    <property name="visible">True</property>
-                    <property name="xalign">1</property>
-                    <property name="label" translatable="yes">C_onfirm password</property>
-                    <property name="use_underline">True</property>
-                    <property name="mnemonic_widget">verify-entry</property>
-                    <style>
-                      <class name="dim-label-ucc"/>
-                    </style>
-                  </object>
-                  <packing>
-                    <property name="top_attach">5</property>
-                    <property name="bottom_attach">6</property>
-                    <property name="x_options">GTK_FILL</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkVBox" id="vbox17">
-                    <property name="visible">True</property>
-                    <property name="orientation">vertical</property>
-                    <child>
-                      <object class="GtkLabel" id="password-normal-password-label">
-                        <property name="visible">True</property>
-                        <property name="xalign">1</property>
-                        <property name="label" translatable="yes">_New password</property>
-                        <property name="use_underline">True</property>
-                        <property name="mnemonic_widget">password-entry</property>
-                        <style>
-                          <class name="dim-label-ucc"/>
-                        </style>
-                      </object>
-                      <packing>
-                        <property name="position">0</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkLabel" id="label35">
-                        <property name="visible">True</property>
-                      </object>
-                      <packing>
-                        <property name="position">1</property>
-                      </packing>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="top_attach">4</property>
-                    <property name="bottom_attach">5</property>
-                    <property name="x_options">GTK_FILL</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkVBox" id="vbox16">
-                    <property name="visible">True</property>
-                    <property name="orientation">vertical</property>
-                    <property name="spacing">6</property>
-                    <child>
-                      <object class="GtkHBox" id="hbox1">
-                        <property name="visible">True</property>
-                        <property name="spacing">6</property>
-                        <child>
-                          <object class="GtkEntry" id="password-entry">
-                            <property name="visible">True</property>
-                            <property name="can_focus">True</property>
-                            <property name="visibility">False</property>
-                            <property name="secondary-icon-name">system-run-symbolic</property>
-                            <property name="secondary-icon-tooltip-text" translatable="yes">Generate a password</property>
-                            <property name="activates_default">True</property>
-                          </object>
-                          <packing>
-                            <property name="position">0</property>
-                          </packing>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="position">0</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkHBox" id="hbox13">
-                        <property name="visible">True</property>
-                        <property name="spacing">9</property>
-                        <child>
-                          <object class="GtkAlignment" id="alignment1">
-                            <property name="visible">True</property>
-                            <property name="top_padding">6</property>
-                            <property name="bottom_padding">6</property>
-                            <child>
-                              <object class="GtkLevelBar" id="strength-indicator">
-                                <property name="visible">True</property>
-                                <property name="mode">discrete</property>
-                                <property name="max-value">4</property>
-                                <offsets>
-                                  <offset name="low" value="1"/>
-                                  <offset name="high" value="3"/>
-                                </offsets>
-                              </object>
-                            </child>
-                          </object>
-                          <packing>
-                            <property name="expand">False</property>
-                            <property name="fill">False</property>
-                            <property name="position">0</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkLabel" id="strength-indicator-label">
-                            <property name="visible">True</property>
-                            <property name="xalign">0</property>
-                            <property name="label"></property>
-                          </object>
-                          <packing>
-                            <property name="position">1</property>
-                          </packing>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="position">1</property>
-                      </packing>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="right_attach">2</property>
-                    <property name="top_attach">4</property>
-                    <property name="bottom_attach">5</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="old-password-label">
-                    <property name="visible">True</property>
-                    <property name="xalign">1</property>
-                    <property name="label" translatable="yes">Current _password</property>
-                    <property name="use_underline">True</property>
-                    <property name="mnemonic_widget">old-password-entry</property>
-                    <style>
-                      <class name="dim-label-ucc"/>
-                    </style>
-                  </object>
-                  <packing>
-                    <property name="top_attach">3</property>
-                    <property name="bottom_attach">4</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkEntry" id="old-password-entry">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="visibility">False</property>
-                    <property name="activates_default">True</property>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="right_attach">2</property>
-                    <property name="top_attach">3</property>
-                    <property name="bottom_attach">4</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="action-label">
-                    <property name="visible">True</property>
-                    <property name="xalign">1</property>
-                    <property name="label" translatable="yes">_Action</property>
-                    <property name="use_underline">True</property>
-                    <property name="mnemonic_widget">action-combo</property>
-                    <style>
-                      <class name="dim-label-ucc"/>
-                    </style>
-                  </object>
-                  <packing>
-                    <property name="top_attach">2</property>
-                    <property name="bottom_attach">3</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkComboBox" id="action-combo">
-                    <property name="visible">True</property>
-                    <property name="model">action-model</property>
-                    <child>
-                      <object class="GtkCellRendererText" id="renderer"/>
-                      <attributes>
-                        <attribute name="text">0</attribute>
-                      </attributes>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="right_attach">2</property>
-                    <property name="top_attach">2</property>
-                    <property name="bottom_attach">3</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="label1">
-                    <property name="visible">True</property>
-                  </object>
-                  <packing>
-                    <property name="top_attach">1</property>
-                    <property name="bottom_attach">2</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="label2">
-                    <property name="visible">True</property>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="right_attach">2</property>
-                    <property name="top_attach">1</property>
-                    <property name="bottom_attach">2</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkHBox" id="hbox3">
-                    <property name="visible">True</property>
-                    <child>
-                      <object class="GtkLabel" id="blablalabel23">
-                        <property name="visible">True</property>
-                      </object>
-                      <packing>
-                        <property name="position">0</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkImage" id="user-icon">
-                        <property name="visible">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="position">1</property>
-                      </packing>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="x_options">GTK_FILL</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkVBox" id="vbox6">
-                    <property name="visible">True</property>
-                    <property name="orientation">vertical</property>
-                    <child>
-                      <object class="GtkLabel" id="label8">
-                        <property name="visible">True</property>
-                        <property name="xalign">0</property>
-                        <property name="label" translatable="yes">Changing password for</property>
-                      </object>
-                      <packing>
-                        <property name="position">0</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkLabel" id="user-name">
-                        <property name="visible">True</property>
-                        <property name="xalign">0</property>
-                        <property name="ellipsize">end</property>
-                        <property name="max_width_chars">30</property>
-                        <attributes>
-                          <attribute name="weight" value="bold"/>
-                          <attribute name="scale" value="1.200000"/>
-                        </attributes>
-                      </object>
-                      <packing>
-                        <property name="position">1</property>
-                      </packing>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="right_attach">2</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkCheckButton" id="show-password-checkbutton">
-                    <property name="label" translatable="yes">_Show password</property>
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="receives_default">False</property>
-                    <property name="use_underline">True</property>
-                    <property name="draw_indicator">True</property>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="right_attach">2</property>
-                    <property name="top_attach">6</property>
-                    <property name="bottom_attach">7</property>
-                  </packing>
-                </child>
-                <child>
-                  <placeholder/>
-                </child>
-              </object>
-              <packing>
-                <property name="position">0</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">False</property>
-            <property name="position">1</property>
-          </packing>
-        </child>
-        <child internal-child="action_area">
-          <object class="GtkHButtonBox" id="dialog-action_area1">
-            <property name="visible">True</property>
-            <property name="layout_style">edge</property>
-            <child>
-              <object class="GtkAlignment" id="alignment2">
-                <property name="visible">True</property>
-                <property name="xalign">0</property>
-                <child>
-                  <object class="GtkLabel" id="password-normal-strength-hints-label">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="receives_default">True</property>
-                    <property name="label" translatable="yes">How to choose a strong password</property>
-                    <property name="use_markup">True</property>
-                    <property name="track_visited_links">False</property>
-                  </object>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">False</property>
-                <property name="position">0</property>
-                <property name="secondary">True</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkHButtonBox" id="hbuttonbox1">
-                <property name="visible">True</property>
-                <property name="spacing">6</property>
-                <property name="layout_style">end</property>
-                <child>
-                  <object class="GtkButton" id="ok-button">
-                    <property name="label" translatable="yes">Ch_ange</property>
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="can_default">True</property>
-                    <property name="receives_default">True</property>
-                    <property name="use_underline">True</property>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">False</property>
-                    <property name="pack_type">end</property>
-                    <property name="position">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkButton" id="cancel-button">
-                    <property name="label">gtk-cancel</property>
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="receives_default">True</property>
-                    <property name="use_stock">True</property>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">False</property>
-                    <property name="pack_type">end</property>
-                    <property name="position">0</property>
-                  </packing>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">False</property>
-                <property name="position">1</property>
-                <property name="secondary">True</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="pack_type">end</property>
-            <property name="position">0</property>
-          </packing>
-        </child>
-      </object>
-    </child>
-  </object>
-  <object class="GtkSizeGroup" id="sizegroup"/>
-</interface>
diff --git a/panels/user-accounts/data/photo-dialog.ui b/panels/user-accounts/data/photo-dialog.ui
deleted file mode 100644
index 975557b..0000000
--- a/panels/user-accounts/data/photo-dialog.ui
+++ /dev/null
@@ -1,305 +0,0 @@
-<?xml version="1.0"?>
-<interface>
-  <!-- interface-requires gtk+ 3.8 -->
-  <object class="GtkAdjustment" id="browse-scale-adjustment">
-    <property name="lower">0</property>
-    <property name="upper">100</property>
-    <property name="page_size">0</property>
-    <property name="step_increment">1</property>
-    <property name="page_increment">10</property>
-    <property name="value">50</property>
-  </object>
-  <object class="GtkDialog" id="dialog">
-    <property name="border_width">5</property>
-    <property name="window_position">GTK_WIN_POS_CENTER_ON_PARENT</property>
-    <property name="type_hint">GDK_WINDOW_TYPE_HINT_DIALOG</property>
-    <property name="title"> </property>
-    <property name="icon_name">system-users</property>
-    <property name="modal">True</property>
-    <child internal-child="vbox">
-      <object class="GtkVBox" id="dialog-vbox7">
-        <property name="visible">True</property>
-        <property name="spacing">6</property>
-        <child>
-          <object class="GtkHBox" id="hbox17">
-            <property name="visible">True</property>
-            <property name="border_width">10</property>
-            <property name="spacing">10</property>
-            <child>
-              <object class="GtkVBox" id="vbox21">
-                <property name="visible">True</property>
-                <property name="spacing">10</property>
-                <child>
-                  <object class="GtkHBox" id="user-photo-dialog-user-box">
-                    <property name="visible">True</property>
-                    <property name="spacing">6</property>
-                    <child>
-                      <object class="GtkImage" id="user-icon">
-                        <property name="visible">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">False</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkVBox" id="blablabox">
-                        <property name="visible">True</property>
-                        <child>
-                          <object class="GtkLabel" id="blabla">
-                            <property name="visible">True</property>
-                            <property name="xalign">0</property>
-                            <property name="label" translatable="yes">Changing photo for:</property>
-                          </object>
-                        </child>
-                        <child>
-                          <object class="GtkLabel" id="user-name">
-                            <property name="visible">True</property>
-                            <property name="xalign">0</property>
-                            <attributes>
-                              <attribute name="weight" value="bold"/>
-                              <attribute name="scale" value="1.2"/>
-                            </attributes>
-                          </object>
-                        </child>
-                      </object>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">False</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="label52">
-                    <property name="visible">True</property>
-                  </object>
-                  <packing>
-                    <property name="position">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkVBox" id="vbox33">
-                    <property name="visible">True</property>
-                    <property name="spacing">10</property>
-                    <child>
-                      <object class="GtkLabel" id="label53">
-                        <property name="visible">True</property>
-                        <property name="xalign">0</property>
-                        <property name="yalign">0</property>
-                        <property name="label" translatable="yes">Choose a picture that will be shown at the login screen for this account.</property>
-                        <property name="justify">GTK_JUSTIFY_CENTER</property>
-                        <property name="wrap">True</property>
-                        <property name="width_chars">28</property>
-                      </object>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="position">2</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkVBox" id="vbox22">
-                    <property name="visible">True</property>
-                    <property name="spacing">5</property>
-                    <child>
-                      <object class="GtkRadioButton" id="gallery-radiobutton">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                        <property name="label" translatable="yes">Gallery</property>
-                        <property name="draw-indicator">False</property>
-                      </object>
-                    </child>
-                    <child>
-                      <object class="GtkRadioButton" id="browse-radiobutton">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                        <property name="label" translatable="yes">Browse for more pictures</property>
-                        <property name="draw-indicator">False</property>
-                        <property name="group">gallery-radiobutton</property>
-                      </object>
-                    </child>
-                    <child>
-                      <object class="GtkRadioButton" id="photo-radiobutton">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                        <property name="label" translatable="yes">Take a photograph</property>
-                        <property name="draw-indicator">False</property>
-                        <property name="group">gallery-radiobutton</property>
-                      </object>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">False</property>
-                    <property name="position">3</property>
-                  </packing>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">False</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkNotebook" id="notebook">
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="show_tabs">False</property>
-                <child>
-                  <object class="GtkVBox" id="vbox19">
-                    <property name="visible">True</property>
-                    <property name="spacing">5</property>
-                    <child>
-                      <object class="GtkScrolledWindow" id="scrolledwindow1">
-                        <property name="visible">True</property>
-                        <property name="hscrollbar_policy">never</property>
-                        <property name="vscrollbar_policy">automatic</property>
-                        <child>
-                          <object class="GtkIconView" id="gallery">
-                            <property name="visible">True</property>
-                          </object>
-                        </child>
-                      </object>
-                    </child>
-                  </object>
-                </child>
-                <child type="tab">
-                  <object class="GtkLabel" id="label54">
-                    <property name="visible">True</property>
-                    <property name="label" translatable="yes">Gallery</property>
-                  </object>
-                  <packing>
-                    <property name="tab_fill">False</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkVBox" id="vbox1234">
-                    <property name="visible">True</property>
-                    <property name="homogeneous">False</property>
-                    <child>
-                      <object class="GtkDrawingArea" id="browse-drawing-area">
-                        <property name="visible">True</property>
-                      </object>
-                      <packing>
-                        <property name="fill">True</property>
-                        <property name="expand">True</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkHBox" id="hbox1234">
-                        <property name="visible">False</property>
-                        <property name="homogeneous">False</property>
-                        <child>
-                          <object class="GtkImage" id="browse-scale-small">
-                            <property name="visible">True</property>
-                            <property name="icon_name">avatar-default</property>
-                            <property name="pixel_size">10</property>
-                          </object>
-                          <packing>
-                            <property name="fill">False</property>
-                            <property name="expand">False</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkHScale" id="browse-scale">
-                            <property name="visible">True</property>
-                            <property name="draw-value">False</property>
-                            <property name="adjustment">browse-scale-adjustment</property>
-                          </object>
-                          <packing>
-                            <property name="fill">True</property>
-                            <property name="expand">True</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkImage" id="browse-scale-big">
-                            <property name="visible">True</property>
-                            <property name="icon_name">avatar-default</property>
-                            <property name="pixel_size">20</property>
-                          </object>
-                          <packing>
-                            <property name="fill">False</property>
-                            <property name="expand">False</property>
-                          </packing>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="fill">True</property>
-                        <property name="expand">False</property>
-                      </packing>
-                    </child>
-                  </object>
-                </child>
-                <child type="tab">
-                  <object class="GtkLabel" id="label55">
-                    <property name="visible">True</property>
-                    <property name="label" translatable="yes">Browse</property>
-                  </object>
-                  <packing>
-                    <property name="position">1</property>
-                    <property name="tab_fill">False</property>
-                  </packing>
-                </child>
-                <child>
-                      <object class="GtkDrawingArea" id="photo">
-                        <property name="visible">True</property>
-                      </object>
-                </child>
-                <child type="tab">
-                  <object class="GtkLabel" id="label56">
-                    <property name="visible">True</property>
-                    <property name="label" translatable="yes">Photograph</property>
-                  </object>
-                  <packing>
-                    <property name="position">2</property>
-                    <property name="tab_fill">False</property>
-                  </packing>
-                </child>
-              </object>
-              <packing>
-                <property name="position">1</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="position">1</property>
-          </packing>
-        </child>
-        <child internal-child="action_area">
-          <object class="GtkHButtonBox" id="dialog-action_area7">
-            <property name="visible">True</property>
-            <property name="layout_style">GTK_BUTTONBOX_END</property>
-            <child>
-              <object class="GtkButton" id="cancel-button">
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="receives_default">True</property>
-                <property name="label" translatable="yes">Cancel</property>
-              </object>
-            </child>
-            <child>
-              <object class="GtkButton" id="ok-button">
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="can_default">True</property>
-                <property name="receives_default">True</property>
-                <property name="label" translatable="yes">Select</property>
-              </object>
-              <packing>
-                <property name="position">1</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="pack_type">GTK_PACK_END</property>
-          </packing>
-        </child>
-      </object>
-    </child>
-  </object>
-</interface>
diff --git a/panels/user-accounts/data/unity-user-accounts-panel.desktop.in.in b/panels/user-accounts/data/unity-user-accounts-panel.desktop.in.in
deleted file mode 100644
index 3e6738c..0000000
--- a/panels/user-accounts/data/unity-user-accounts-panel.desktop.in.in
+++ /dev/null
@@ -1,13 +0,0 @@
-[Desktop Entry]
-_Name=User Accounts
-_Comment=Add or remove users
-Exec=unity-control-center user-accounts
-Icon=system-users
-Terminal=false
-Type=Application
-StartupNotify=true
-Categories=System;Settings;X-Unity-Settings-Panel;X-GNOME-SystemSettings
-OnlyShowIn=Unity;
-X-Unity-Settings-Panel=user-accounts
-# Translators: those are keywords for the user accounts control-center panel
-_Keywords=Login;Name;Fingerprint;Avatar;Logo;Face;Password;
diff --git a/panels/user-accounts/data/user-accounts-dialog.ui b/panels/user-accounts/data/user-accounts-dialog.ui
deleted file mode 100644
index 7873126..0000000
--- a/panels/user-accounts/data/user-accounts-dialog.ui
+++ /dev/null
@@ -1,568 +0,0 @@
-<interface>
-  <!-- interface-requires gtk+ 3.8 -->
-  <!-- interface-naming-policy toplevel-contextual -->
-  <object class="GtkListStore" id="shortname-model">
-    <columns>
-      <!-- column-name gchararray -->
-      <column type="gchararray"/>
-    </columns>
-  </object>
-  <object class="GtkListStore" id="account-type-model">
-    <columns>
-      <!-- column-name gchararray -->
-      <column type="gchararray"/>
-      <!-- column-name gint -->
-      <column type="gint"/>
-    </columns>
-    <data>
-      <row>
-        <col id="0" translatable="yes" context="Account type">Standard</col>
-        <col id="1">0</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes" context="Account type">Administrator</col>
-        <col id="1">1</col>
-      </row>
-    </data>
-  </object>
-  <object class="GtkListStore" id="language-model">
-    <columns>
-      <!-- column-name gchararray -->
-      <column type="gchararray"/>
-      <!-- column-name gchararray1 -->
-      <column type="gchararray"/>
-    </columns>
-  </object>
-  <object class="GtkWindow" id="user-account-window">
-    <property name="border_width">12</property>
-    <property name="title" translatable="yes">Account Information</property>
-    <property name="icon_name">system-users</property>
-    <child>
-      <object class="GtkVBox" id="user-account-main-vbox">
-        <property name="visible">True</property>
-        <property name="spacing">6</property>
-        <child>
-          <object class="GtkVBox" id="accounts-vbox">
-            <property name="visible">True</property>
-            <property name="orientation">vertical</property>
-            <property name="border_width">12</property>
-            <child>
-              <object class="GtkHBox" id="hbox2">
-                <property name="visible">True</property>
-                <property name="spacing">18</property>
-                <child>
-                  <object class="GtkVBox" id="userlist-vbox">
-                    <property name="visible">True</property>
-                    <property name="orientation">vertical</property>
-                    <property name="spacing">0</property>
-                    <child>
-                      <object class="GtkScrolledWindow" id="list-scrolledwindow">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="hscrollbar_policy">never</property>
-                        <property name="vscrollbar_policy">automatic</property>
-                        <property name="shadow_type">in</property>
-                        <child>
-                          <object class="GtkTreeView" id="list-treeview">
-                            <property name="visible">True</property>
-                            <property name="can_focus">True</property>
-                            <property name="headers_visible">False</property>
-                          </object>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="expand">True</property>
-                        <property name="fill">True</property>
-                        <property name="position">0</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkToolbar" id="add-remove-toolbar">
-                        <property name="visible">True</property>
-                        <property name="icon_size">1</property>
-                        <property name="icon_size_set">True</property>
-                        <property name="toolbar_style">icons</property>
-                        <style>
-                          <class name="inline-toolbar"/>
-                        </style>
-                        <child>
-                          <object class="GtkToolButton" id="add-user-toolbutton">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <property name="icon_name">list-add-symbolic</property>
-                            <property name="label" translatable="yes">Add User Account</property>
-                          </object>
-                          <packing>
-                            <property name="expand">False</property>
-                            <property name="homogeneous">True</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkToolButton" id="remove-user-toolbutton">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <property name="icon_name">list-remove-symbolic</property>
-                            <property name="label" translatable="yes">Remove User Account</property>
-                          </object>
-                          <packing>
-                            <property name="expand">False</property>
-                            <property name="homogeneous">True</property>
-                          </packing>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">False</property>
-                        <property name="position">1</property>
-                      </packing>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="expand">True</property>
-                    <property name="fill">True</property>
-                    <property name="position">0</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkVBox" id="main-user-vbox">
-                    <property name="visible">True</property>
-                    <property name="sensitive">False</property>
-                    <property name="orientation">vertical</property>
-                    <property name="spacing">6</property>
-                    <child>
-                      <object class="GtkGrid" id="grid1">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="column_spacing">10</property>
-                        <child>
-                          <object class="GtkNotebook" id="account-fingerprint-notebook">
-                            <property name="visible">True</property>
-                            <property name="show_tabs">False</property>
-                            <property name="show_border">False</property>
-                            <property name="hexpand">True</property>
-                            <child>
-                              <object class="GtkLabel" id="account-fingerprint-value-label">
-                                <property name="visible">True</property>
-                                <property name="xalign">0</property>
-                              </object>
-                            </child>
-                            <child>
-                              <object class="GtkButton" id="account-fingerprint-button">
-                                <property name="visible">True</property>
-                                <property name="can_focus">True</property>
-                                <property name="receives_default">True</property>
-                                <property name="relief">none</property>
-                                <child>
-                                  <object class="GtkLabel" id="account-fingerprint-button-label">
-                                    <property name="visible">True</property>
-                                    <property name="xalign">0</property>
-                                  </object>
-                                </child>
-                              </object>
-                              <packing>
-                                <property name="position">1</property>
-                              </packing>
-                            </child>
-                          </object>
-                          <packing>
-                            <property name="left_attach">1</property>
-                            <property name="top_attach">6</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="UmEditableCombo" id="account-type-combo">
-                            <property name="visible">True</property>
-                            <property name="model">account-type-model</property>
-                            <property name="text-column">0</property>
-                            <property name="hexpand">True</property>
-                          </object>
-                          <packing>
-                            <property name="left_attach">1</property>
-                            <property name="top_attach">1</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkLabel" id="account-type-label">
-                            <property name="visible">True</property>
-                            <property name="xalign">1</property>
-                            <property name="label" translatable="yes">Account _Type</property>
-                            <property name="use_underline">True</property>
-                            <property name="mnemonic_widget">account-type-combo</property>
-                            <style>
-                              <class name="dim-label-ucc"/>
-                            </style>
-                          </object>
-                          <packing>
-                            <property name="left_attach">0</property>
-                            <property name="top_attach">1</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkVBox" id="vbox10">
-                            <property name="visible">True</property>
-                            <property name="orientation">vertical</property>
-                            <child>
-                              <object class="CcEditableEntry" id="full-name-entry">
-                                <property name="visible">True</property>
-                                <property name="scale">1.2</property>
-                                <property name="weight">700</property>
-                                <property name="width-chars">30</property>
-                                <property name="max-width-chars">30</property>
-                                <property name="ellipsize">PANGO_ELLIPSIZE_END</property>
-                              </object>
-                              <packing>
-                                <property name="fill">True</property>
-                                <property name="position">1</property>
-                              </packing>
-                            </child>
-                          </object>
-                          <packing>
-                            <property name="left_attach">1</property>
-                            <property name="top_attach">0</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkLabel" id="login-options-label">
-                            <property name="visible">True</property>
-                            <property name="xalign">1</property>
-                            <property name="ypad">5</property>
-                            <property name="label" translatable="yes">Login Options</property>
-                            <attributes>
-                              <attribute name="weight" value="bold"/>
-                            </attributes>
-                          </object>
-                          <packing>
-                            <property name="left_attach">0</property>
-                            <property name="top_attach">3</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkLabel" id="password-label">
-                            <property name="visible">True</property>
-                            <property name="xalign">1</property>
-                            <property name="label" translatable="yes">_Password</property>
-                            <property name="use_underline">True</property>
-                            <property name="mnemonic_widget">account-password-button</property>
-                            <style>
-                              <class name="dim-label-ucc"/>
-                            </style>
-                          </object>
-                          <packing>
-                            <property name="left_attach">0</property>
-                            <property name="top_attach">4</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="UmEditableButton" id="account-password-button">
-                            <property name="visible">True</property>
-                            <property name="hexpand">True</property>
-                          </object>
-                          <packing>
-                            <property name="left_attach">1</property>
-                            <property name="top_attach">4</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkLabel" id="autologin-label">
-                            <property name="visible">True</property>
-                            <property name="xalign">1</property>
-                            <property name="label" translatable="yes">A_utomatic Login</property>
-                            <property name="use_underline">True</property>
-                            <property name="mnemonic_widget">autologin-switch</property>
-                            <style>
-                              <class name="dim-label-ucc"/>
-                            </style>
-                          </object>
-                          <packing>
-                            <property name="left_attach">0</property>
-                            <property name="top_attach">5</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkHBox" id="hbox30">
-                            <property name="visible">True</property>
-                            <child>
-                              <object class="GtkSwitch" id="autologin-switch">
-                                <property name="visible">True</property>
-                              </object>
-                              <packing>
-                                <property name="expand">False</property>
-                                <property name="fill">False</property>
-                                <property name="position">0</property>
-                              </packing>
-                            </child>
-                            <child>
-                              <placeholder/>
-                            </child>
-                          </object>
-                          <packing>
-                            <property name="left_attach">1</property>
-                            <property name="top_attach">5</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkLabel" id="account-fingerprint-label">
-                            <property name="visible">True</property>
-                            <property name="xalign">1</property>
-                            <property name="label" translatable="yes">_Fingerprint Login</property>
-                            <property name="use_underline">True</property>
-                            <property name="mnemonic_widget">account-fingerprint-button</property>
-                            <style>
-                              <class name="dim-label-ucc"/>
-                            </style>
-                          </object>
-                          <packing>
-                            <property name="left_attach">0</property>
-                            <property name="top_attach">6</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkHBox" id="hbox5">
-                            <property name="visible">True</property>
-                            <child>
-                              <object class="GtkLabel" id="label4">
-                                <property name="visible">True</property>
-                                <property name="hexpand">True</property>
-                              </object>
-                              <packing>
-                                <property name="expand">True</property>
-                                <property name="fill">True</property>
-                                <property name="position">0</property>
-                              </packing>
-                            </child>
-                            <child>
-                              <object class="GtkAlignment" id="user-icon-nonbutton">
-                                <property name="xscale">0</property>
-                                <property name="yscale">0</property>
-                                <child>
-                                  <object class="GtkImage" id="user-icon-image">
-                                    <property name="visible">True</property>
-                                    <property name="icon_name">avatar-default</property>
-                                    <property name="icon-size">6</property>
-                                    <child internal-child="accessible">
-                                      <object class="AtkObject" id="user-icon-image-a11y">
-                                        <property name="accessible-name" translatable="yes">User Icon</property>
-                                      </object>
-                                    </child>
-                                  </object>
-                                </child>
-                              </object>
-                              <packing>
-                                <property name="expand">False</property>
-                                <property name="fill">False</property>
-                                <property name="position">1</property>
-                              </packing>
-                            </child>
-                            <child>
-                              <object class="GtkToggleButton" id="user-icon-button">
-                                <property name="visible">True</property>
-                                <property name="can_focus">True</property>
-                                <property name="receives_default">True</property>
-                                <property name="relief">none</property>
-                                <child internal-child="accessible">
-                                  <object class="AtkObject" id="user-icon-image2-a11y">
-                                    <property name="accessible-name" translatable="yes">User Icon</property>
-                                  </object>
-                                </child>
-                                <child>
-                                  <object class="GtkImage" id="user-icon-image2">
-                                    <property name="visible">True</property>
-                                    <property name="icon_name">avatar-default</property>
-                                    <property name="icon-size">6</property>
-                                  </object>
-                                </child>
-                              </object>
-                              <packing>
-                                <property name="expand">False</property>
-                                <property name="fill">False</property>
-                                <property name="position">2</property>
-                              </packing>
-                            </child>
-                          </object>
-                          <packing>
-                            <property name="left_attach">0</property>
-                            <property name="top_attach">0</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkLabel" id="language-label">
-                            <property name="visible">True</property>
-                            <property name="xalign">1</property>
-                            <property name="label" translatable="yes">_Language</property>
-                            <property name="use_underline">True</property>
-                            <property name="mnemonic_widget">account-language-combo</property>
-                            <style>
-                              <class name="dim-label-ucc"/>
-                            </style>
-                          </object>
-                          <packing>
-                            <property name="left_attach">0</property>
-                            <property name="top_attach">2</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="UmEditableCombo" id="account-language-combo">
-                            <property name="visible">True</property>
-                            <property name="model">language-model</property>
-                            <property name="text-column">1</property>
-                            <property name="hexpand">True</property>
-                          </object>
-                          <packing>
-                            <property name="left_attach">1</property>
-                            <property name="top_attach">2</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkLabel" id="last-login-label">
-                            <property name="visible">True</property>
-                            <property name="xalign">1</property>
-                            <property name="label" translatable="yes">Last Login</property>
-                            <property name="use_underline">True</property>
-                            <property name="mnemonic_widget">last-login-value-label</property>
-                            <style>
-                              <class name="dim-label-ucc"/>
-                            </style>
-                          </object>
-                          <packing>
-                            <property name="left_attach">0</property>
-                            <property name="top_attach">7</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkGrid" id="last-login-grid">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <child>
-                              <object class="GtkLabel" id="last-login-value-label">
-                                <property name="visible">True</property>
-                                <property name="can_focus">False</property>
-                                <property name="margin_left">6</property>
-                                <property name="margin_right">6</property>
-                                <property name="margin_top">6</property>
-                                <property name="margin_bottom">6</property>
-                                <property name="hexpand">True</property>
-                                <property name="xalign">0</property>
-                              </object>
-                              <packing>
-                                <property name="left_attach">0</property>
-                                <property name="top_attach">0</property>
-                                <property name="width">1</property>
-                                <property name="height">1</property>
-                              </packing>
-                            </child>
-                            <child>
-                              <object class="GtkButton" id="last-login-history-button">
-                                <property name="label" translatable="yes">History</property>
-                                <property name="visible">True</property>
-                                <property name="can_focus">True</property>
-                                <property name="receives_default">True</property>
-                                <property name="xalign">1</property>
-                              </object>
-                              <packing>
-                                <property name="left_attach">1</property>
-                                <property name="top_attach">0</property>
-                                <property name="width">1</property>
-                                <property name="height">1</property>
-                              </packing>
-                            </child>
-                          </object>
-                          <packing>
-                            <property name="left_attach">1</property>
-                            <property name="top_attach">7</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">0</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkLabel" id="show-login-name-spacer">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                      </object>
-                      <packing>
-                        <property name="expand">True</property>
-                        <property name="fill">True</property>
-                        <property name="position">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkCheckButton" id="show-login-name-checkbutton">
-                        <property name="label" translatable="yes">_Show my login name in the menu bar</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">False</property>
-                        <property name="use_underline">True</property>
-                        <property name="xalign">0</property>
-                        <property name="draw_indicator">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">2</property>
-                      </packing>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="expand">True</property>
-                    <property name="fill">True</property>
-                    <property name="position">1</property>
-                  </packing>
-                </child>
-              </object>
-            </child>
-          </object>
-        </child>
-      </object>
-    </child>
-  </object>
-  <object class="GtkSizeGroup" id="user-icon-sizegroup">
-    <property name="mode">both</property>
-    <widgets>
-      <widget name="user-icon-button"/>
-      <widget name="user-icon-nonbutton"/>
-    </widgets>
-  </object>
-  <object class="GtkSizeGroup" id="label-width-sizegroup">
-    <widgets>
-      <widget name="account-fingerprint-label"/>
-      <widget name="language-label"/>
-      <widget name="password-label"/>
-      <widget name="login-options-label"/>
-      <widget name="account-type-label"/>
-    </widgets>
-  </object>
-</interface>
diff --git a/panels/user-accounts/fingerprint-strings.h b/panels/user-accounts/fingerprint-strings.h
deleted file mode 100644
index f122d3a..0000000
--- a/panels/user-accounts/fingerprint-strings.h
+++ /dev/null
@@ -1,111 +0,0 @@
-/*
- * Helper functions to translate statuses and actions to strings
- * Copyright (C) 2008 Bastien Nocera <hadess@hadess.net>
- * 
- * Experimental code. This will be moved out of fprintd into it's own
- * package once the system has matured.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- * 
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- * 
- * You should have received a copy of the GNU General Public License along
- * with this program; if not, write to the Free Software Foundation, Inc.,
- * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
- */
-
-struct {
-	const char *dbus_name;
-	const char *place_str;
-	const char *swipe_str;
-} fingers[11] = {
-	{ "left-thumb", N_("Place your left thumb on %s"), N_("Swipe your left thumb on %s") },
-	{ "left-index-finger", N_("Place your left index finger on %s"), N_("Swipe your left index finger on %s") },
-	{ "left-middle-finger", N_("Place your left middle finger on %s"), N_("Swipe your left middle finger on %s") },
-	{ "left-ring-finger", N_("Place your left ring finger on %s"), N_("Swipe your left ring finger on %s") },
-	{ "left-little-finger", N_("Place your left little finger on %s"), N_("Swipe your left little finger on %s") },
-	{ "right-thumb", N_("Place your right thumb on %s"), N_("Swipe your right thumb on %s") },
-	{ "right-index-finger", N_("Place your right index finger on %s"), N_("Swipe your right index finger on %s") },
-	{ "right-middle-finger", N_("Place your right middle finger on %s"), N_("Swipe your right middle finger on %s") },
-	{ "right-ring-finger", N_("Place your right ring finger on %s"), N_("Swipe your right ring finger on %s") },
-	{ "right-little-finger", N_("Place your right little finger on %s"), N_("Swipe your right little finger on %s") },
-	{ NULL, NULL, NULL }
-};
-
-static const char *finger_str_to_msg(const char *finger_name, gboolean is_swipe)
-{
-	int i;
-
-	if (finger_name == NULL)
-		return NULL;
-
-	for (i = 0; fingers[i].dbus_name != NULL; i++) {
-		if (g_str_equal (fingers[i].dbus_name, finger_name)) {
-			if (is_swipe == FALSE)
-				return fingers[i].place_str;
-			else
-				return fingers[i].swipe_str;
-		}
-	}
-
-	return NULL;
-}
-
-/* Cases not handled:
- * verify-no-match
- * verify-match
- * verify-unknown-error
- */
-G_GNUC_UNUSED static const char *verify_result_str_to_msg(const char *result, gboolean is_swipe)
-{
-	if (result == NULL)
-		return NULL;
-
-	if (strcmp (result, "verify-retry-scan") == 0) {
-		if (is_swipe == FALSE)
-			return N_("Place your finger on the reader again");
-		else
-			return N_("Swipe your finger again");
-	}
-	if (strcmp (result, "verify-swipe-too-short") == 0)
-		return N_("Swipe was too short; try again");
-	if (strcmp (result, "verify-finger-not-centered") == 0)
-		return N_("Your finger was not centered; try swiping your finger again");
-	if (strcmp (result, "verify-remove-and-retry") == 0)
-		return N_("Remove your finger and try swiping it again");
-
-	return NULL;
-}
-
-/* Cases not handled:
- * enroll-completed
- * enroll-failed
- * enroll-unknown-error
- */
-static const char *enroll_result_str_to_msg(const char *result, gboolean is_swipe)
-{
-	if (result == NULL)
-		return NULL;
-
-	if (strcmp (result, "enroll-retry-scan") == 0 || strcmp (result, "enroll-stage-passed") == 0) {
-		if (is_swipe == FALSE)
-			return N_("Place your finger on the reader again");
-		else
-			return N_("Swipe your finger again");
-	}
-	if (strcmp (result, "enroll-swipe-too-short") == 0)
-		return N_("Swipe was too short, try again");
-	if (strcmp (result, "enroll-finger-not-centered") == 0)
-		return N_("Your finger was not centered, try swiping your finger again");
-	if (strcmp (result, "enroll-remove-and-retry") == 0)
-		return N_("Remove your finger, and try swiping your finger again");
-
-	return NULL;
-}
-
diff --git a/panels/user-accounts/frob-account-dialog.c b/panels/user-accounts/frob-account-dialog.c
deleted file mode 100644
index 5c6e3bb..0000000
--- a/panels/user-accounts/frob-account-dialog.c
+++ /dev/null
@@ -1,61 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
-  *
-  * Copyright (C) 2012 Red Hat, Inc.
-  *
-  * This program is free software; you can redistribute it and/or modify
-  * it under the terms of the GNU General Public License as published by
-  * the Free Software Foundation; either version 2 of the License, or
-  * (at your option) any later version.
-  *
-  * This program is distributed in the hope that it will be useful,
-  * but WITHOUT ANY WARRANTY; without even the implied warranty of
-  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-  * GNU General Public License for more details.
-  *
-  * You should have received a copy of the GNU General Public License
-  * along with this program; if not, write to the Free Software
-  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-  */
-
-#include "um-account-dialog.h"
-
-#include <gtk/gtk.h>
-
-static void
-on_dialog_complete (GObject *object,
-                    GAsyncResult *result,
-                    gpointer user_data)
-{
-	GMainLoop *loop = user_data;
-	ActUser *user;
-
-	user = um_account_dialog_finish (UM_ACCOUNT_DIALOG (object), result);
-	if (user == NULL) {
-		g_printerr ("No user created\n");
-	} else {
-		g_printerr ("User created: %s\n", act_user_get_user_name (user));
-		g_object_unref (user);
-	}
-
-	g_main_loop_quit (loop);
-}
-
-int
-main (int argc,
-      char *argv[])
-{
-	UmAccountDialog *dialog;
-	GMainLoop *loop;
-
-	gtk_init (&argc, &argv);
-
-	dialog = um_account_dialog_new ();
-	loop = g_main_loop_new (NULL, FALSE);
-
-	um_account_dialog_show (dialog, NULL, NULL, on_dialog_complete, loop);
-
-	g_main_loop_run (loop);
-	g_main_loop_unref (loop);
-
-	return 0;
-}
diff --git a/panels/user-accounts/pw-utils.c b/panels/user-accounts/pw-utils.c
deleted file mode 100644
index f859ba1..0000000
--- a/panels/user-accounts/pw-utils.c
+++ /dev/null
@@ -1,127 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2012  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#include "config.h"
-
-#include "pw-utils.h"
-
-#include <glib.h>
-#include <glib/gi18n.h>
-
-#include <pwquality.h>
-
-
-static pwquality_settings_t *
-get_pwq (void)
-{
-        static pwquality_settings_t *settings;
-
-        if (settings == NULL) {
-                gchar *err = NULL;
-                settings = pwquality_default_settings ();
-                if (pwquality_read_config (settings, NULL, (gpointer)&err) < 0) {
-                        g_error ("failed to read pwquality configuration: %s\n", err);
-                }
-        }
-
-        return settings;
-}
-
-gint
-pw_min_length (void)
-{
-        gint value = 0;
-
-        if (pwquality_get_int_value (get_pwq (), PWQ_SETTING_MIN_LENGTH, &value) < 0) {
-                g_error ("Failed to read pwquality setting\n" );
-        }
-
-        return value;
-}
-
-gchar *
-pw_generate (void)
-{
-        gchar *res;
-        gint rv;
-
-        rv = pwquality_generate (get_pwq (), 0, &res);
-
-        if (rv < 0) {
-                g_error ("Password generation failed: %s\n",
-                         pwquality_strerror (NULL, 0, rv, NULL));
-                return NULL;
-        }
-
-        return res;
-}
-
-gdouble
-pw_strength (const gchar  *password,
-             const gchar  *old_password,
-             const gchar  *username,
-             const gchar **hint,
-             const gchar **long_hint,
-             gint         *strength_level)
-{
-        gint rv, level = 0;
-        gdouble strength = 0.0;
-        void *auxerror;
-
-        rv = pwquality_check (get_pwq (),
-                              password, old_password, username,
-                              &auxerror);
-
-        if (rv == PWQ_ERROR_MIN_LENGTH) {
-                *hint = C_("Password strength", "Too short");
-                *long_hint = pwquality_strerror (NULL, 0, rv, auxerror);
-                goto out;
-        }
-        else if (rv < 0) {
-                *hint = C_("Password strength", "Not good enough");
-                *long_hint = pwquality_strerror (NULL, 0, rv, auxerror);
-                goto out;
-        }
-
-        strength = CLAMP (0.01 * rv, 0.0, 1.0);
-
-        if (strength < 0.50) {
-                level = 1;
-                *hint = C_("Password strength", "Weak");
-        } else if (strength < 0.75) {
-                level = 2;
-                *hint = C_("Password strength", "Fair");
-        } else if (strength < 0.90) {
-                level = 3;
-                *hint = C_("Password strength", "Good");
-        } else {
-                level = 4;
-                *hint = C_("Password strength", "Strong");
-        }
-
-        *long_hint = NULL;
-
- out:
-        if (strength_level)
-                *strength_level = level;
-
-        return strength;
-}
diff --git a/panels/user-accounts/pw-utils.h b/panels/user-accounts/pw-utils.h
deleted file mode 100644
index 92214ef..0000000
--- a/panels/user-accounts/pw-utils.h
+++ /dev/null
@@ -1,31 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2012  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#include <glib.h>
-
-gint     pw_min_length (void);
-gchar   *pw_generate   (void);
-gdouble  pw_strength   (const gchar  *password,
-                        const gchar  *old_password,
-                        const gchar  *username,
-                        const gchar **hint,
-                        const gchar **long_hints,
-                        gint         *strength_level);
diff --git a/panels/user-accounts/run-passwd.c b/panels/user-accounts/run-passwd.c
deleted file mode 100644
index 7c1d597..0000000
--- a/panels/user-accounts/run-passwd.c
+++ /dev/null
@@ -1,770 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*- */
-/* run-passwd.c: this file is part of users-admin, a gnome-system-tools frontend
- * for user administration.
- *
- * Copyright (C) 2002 Diego Gonzalez
- * Copyright (C) 2006 Johannes H. Jensen
- * Copyright (C) 2010 Milan Bouchet-Valat
- *
- * Written by: Diego Gonzalez <diego@pemas.net>
- * Modified by: Johannes H. Jensen <joh@deworks.net>,
- *              Milan Bouchet-Valat <nalimilan@club.fr>.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2, or (at your option)
- * any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
- * 02111-1307, USA.
- *
- * Most of this code originally comes from gnome-about-me-password.c,
- * from gnome-control-center.
- */
-
-#include <config.h>
-#include <glib/gi18n.h>
-
-#include <unistd.h>
-#include <errno.h>
-#include <string.h>
-#include <sys/wait.h>
-
-#if __sun
-#include <sys/types.h>
-#include <signal.h>
-#endif
-
-#include "run-passwd.h"
-
-/* Passwd states */
-typedef enum {
-        PASSWD_STATE_NONE,              /* Passwd is not asking for anything */
-        PASSWD_STATE_AUTH,              /* Passwd is asking for our current password */
-        PASSWD_STATE_NEW,               /* Passwd is asking for our new password */
-        PASSWD_STATE_RETYPE,            /* Passwd is asking for our retyped new password */
-        PASSWD_STATE_DONE,              /* Passwd succeeded but has not yet exited */
-        PASSWD_STATE_ERR                /* Passwd reported an error but has not yet exited */
-} PasswdState;
-
-struct PasswdHandler {
-        const char *current_password;
-        const char *new_password;
-
-        /* Communication with the passwd program */
-        GPid backend_pid;
-
-        GIOChannel *backend_stdin;
-        GIOChannel *backend_stdout;
-
-        GQueue *backend_stdin_queue;            /* Write queue to backend_stdin */
-
-        /* GMainLoop IDs */
-        guint backend_child_watch_id;           /* g_child_watch_add (PID) */
-        guint backend_stdout_watch_id;          /* g_io_add_watch (stdout) */
-
-        /* State of the passwd program */
-        PasswdState backend_state;
-        gboolean    changing_password;
-
-        PasswdCallback auth_cb;
-        gpointer       auth_cb_data;
-
-        PasswdCallback chpasswd_cb;
-        gpointer       chpasswd_cb_data;
-};
-
-/* Buffer size for backend output */
-#define BUFSIZE 64
-
-
-static GQuark
-passwd_error_quark (void)
-{
-        static GQuark q = 0;
-
-        if (q == 0) {
-                q = g_quark_from_static_string("passwd_error");
-        }
-
-        return q;
-}
-
-/* Error handling */
-#define PASSWD_ERROR (passwd_error_quark ())
-
-
-static void
-stop_passwd (PasswdHandler *passwd_handler);
-
-static void
-free_passwd_resources (PasswdHandler *passwd_handler);
-
-static gboolean
-io_watch_stdout (GIOChannel *source, GIOCondition condition, PasswdHandler *passwd_handler);
-
-
-/*
- * Spawning and closing of backend {{
- */
-
-/* Child watcher */
-static void
-child_watch_cb (GPid pid, gint status, PasswdHandler *passwd_handler)
-{
-        if (WIFEXITED (status)) {
-                if (WEXITSTATUS (status) >= 255) {
-                        g_warning ("Child exited unexpectedly");
-                }
-                if (WEXITSTATUS (status) == 0) {
-                        if (passwd_handler->backend_state == PASSWD_STATE_RETYPE) {
-                                passwd_handler->backend_state = PASSWD_STATE_DONE;
-                                if (passwd_handler->chpasswd_cb)
-                                                passwd_handler->chpasswd_cb (passwd_handler,
-                                                                             NULL,
-                                                                             passwd_handler->chpasswd_cb_data);
-                        }
-                }
-        }
-
-        free_passwd_resources (passwd_handler);
-}
-
-static void
-ignore_sigpipe (gpointer data)
-{
-        signal (SIGPIPE, SIG_IGN);
-}
-
-/* Spawn passwd backend
- * Returns: TRUE on success, FALSE otherwise and sets error appropriately */
-static gboolean
-spawn_passwd (PasswdHandler *passwd_handler, GError **error)
-{
-        gchar   *argv[2];
-        gchar  **envp;
-        gint    my_stdin, my_stdout, my_stderr;
-
-        argv[0] = "/usr/bin/passwd";    /* Is it safe to rely on a hard-coded path? */
-        argv[1] = NULL;
-
-        envp = g_get_environ ();
-        envp = g_environ_setenv (envp, "LC_ALL", "C", TRUE);
-
-        if (!g_spawn_async_with_pipes (NULL,                            /* Working directory */
-                                       argv,                            /* Argument vector */
-                                       envp,                            /* Environment */
-                                       G_SPAWN_DO_NOT_REAP_CHILD,       /* Flags */
-                                       ignore_sigpipe,                  /* Child setup */
-                                       NULL,                            /* Data to child setup */
-                                       &passwd_handler->backend_pid,    /* PID */
-                                       &my_stdin,                       /* Stdin */
-                                       &my_stdout,                      /* Stdout */
-                                       &my_stderr,                      /* Stderr */
-                                       error)) {                        /* GError */
-
-                /* An error occured */
-                free_passwd_resources (passwd_handler);
-
-                g_strfreev (envp);
-
-                return FALSE;
-        }
-
-        g_strfreev (envp);
-
-        /* 2>&1 */
-        if (dup2 (my_stderr, my_stdout) == -1) {
-                /* Failed! */
-                g_set_error_literal (error,
-                                     PASSWD_ERROR,
-                                     PASSWD_ERROR_BACKEND,
-                                     strerror (errno));
-
-                /* Clean up */
-                stop_passwd (passwd_handler);
-
-                return FALSE;
-        }
-
-        /* Open IO Channels */
-        passwd_handler->backend_stdin = g_io_channel_unix_new (my_stdin);
-        passwd_handler->backend_stdout = g_io_channel_unix_new (my_stdout);
-
-        /* Set raw encoding */
-        /* Set nonblocking mode */
-        if (g_io_channel_set_encoding (passwd_handler->backend_stdin, NULL, error) != G_IO_STATUS_NORMAL ||
-                g_io_channel_set_encoding (passwd_handler->backend_stdout, NULL, error) != G_IO_STATUS_NORMAL ||
-                g_io_channel_set_flags (passwd_handler->backend_stdin, G_IO_FLAG_NONBLOCK, error) != G_IO_STATUS_NORMAL ||
-                g_io_channel_set_flags (passwd_handler->backend_stdout, G_IO_FLAG_NONBLOCK, error) != G_IO_STATUS_NORMAL ) {
-
-                /* Clean up */
-                stop_passwd (passwd_handler);
-                return FALSE;
-        }
-
-        /* Turn off buffering */
-        g_io_channel_set_buffered (passwd_handler->backend_stdin, FALSE);
-        g_io_channel_set_buffered (passwd_handler->backend_stdout, FALSE);
-
-        /* Add IO Channel watcher */
-        passwd_handler->backend_stdout_watch_id = g_io_add_watch (passwd_handler->backend_stdout,
-                                                                  G_IO_IN | G_IO_PRI,
-                                                                  (GIOFunc) io_watch_stdout, passwd_handler);
-
-        /* Add child watcher */
-        passwd_handler->backend_child_watch_id = g_child_watch_add (passwd_handler->backend_pid, (GChildWatchFunc) child_watch_cb, passwd_handler);
-
-        /* Success! */
-
-        return TRUE;
-}
-
-/* Stop passwd backend */
-static void
-stop_passwd (PasswdHandler *passwd_handler)
-{
-        /* This is the standard way of returning from the dialog with passwd.
-         * If we return this way we can safely kill passwd as it has completed
-         * its task.
-         */
-
-        if (passwd_handler->backend_pid != -1) {
-                kill (passwd_handler->backend_pid, 9);
-        }
-
-        /* We must run free_passwd_resources here and not let our child
-         * watcher do it, since it will access invalid memory after the
-         * dialog has been closed and cleaned up.
-         *
-         * If we had more than a single thread we'd need to remove
-         * the child watch before trying to kill the child.
-         */
-        free_passwd_resources (passwd_handler);
-}
-
-/* Clean up passwd resources */
-static void
-free_passwd_resources (PasswdHandler *passwd_handler)
-{
-        GError  *error = NULL;
-
-        /* Remove the child watcher */
-        if (passwd_handler->backend_child_watch_id != 0) {
-
-                g_source_remove (passwd_handler->backend_child_watch_id);
-
-                passwd_handler->backend_child_watch_id = 0;
-        }
-
-
-        /* Close IO channels (internal file descriptors are automatically closed) */
-        if (passwd_handler->backend_stdin != NULL) {
-
-                if (g_io_channel_shutdown (passwd_handler->backend_stdin, TRUE, &error) != G_IO_STATUS_NORMAL) {
-                        g_warning ("Could not shutdown backend_stdin IO channel: %s", error->message);
-                        g_error_free (error);
-                        error = NULL;
-                }
-
-                g_io_channel_unref (passwd_handler->backend_stdin);
-                passwd_handler->backend_stdin = NULL;
-        }
-
-        if (passwd_handler->backend_stdout != NULL) {
-
-                if (g_io_channel_shutdown (passwd_handler->backend_stdout, TRUE, &error) != G_IO_STATUS_NORMAL) {
-                        g_warning ("Could not shutdown backend_stdout IO channel: %s", error->message);
-                        g_error_free (error);
-                        error = NULL;
-                }
-
-                g_io_channel_unref (passwd_handler->backend_stdout);
-
-                passwd_handler->backend_stdout = NULL;
-        }
-
-        /* Remove IO watcher */
-        if (passwd_handler->backend_stdout_watch_id != 0) {
-
-                g_source_remove (passwd_handler->backend_stdout_watch_id);
-
-                passwd_handler->backend_stdout_watch_id = 0;
-        }
-
-        /* Close PID */
-        if (passwd_handler->backend_pid != -1) {
-
-                g_spawn_close_pid (passwd_handler->backend_pid);
-
-                passwd_handler->backend_pid = -1;
-        }
-
-        /* Clear backend state */
-        passwd_handler->backend_state = PASSWD_STATE_NONE;
-}
-
-/*
- * }} Spawning and closing of backend
- */
-
-/*
- * Backend communication code {{
- */
-
-/* Write the first element of queue through channel */
-static void
-io_queue_pop (GQueue *queue, GIOChannel *channel)
-{
-        gchar   *buf;
-        gsize   bytes_written;
-        GError  *error = NULL;
-
-        buf = g_queue_pop_head (queue);
-
-        if (buf != NULL) {
-
-                if (g_io_channel_write_chars (channel, buf, -1, &bytes_written, &error) != G_IO_STATUS_NORMAL) {
-                        g_warning ("Could not write queue element \"%s\" to channel: %s", buf, error->message);
-                        g_error_free (error);
-                }
-
-                /* Ensure passwords are cleared from memory */
-                memset (buf, 0, strlen (buf));
-                g_free (buf);
-        }
-}
-
-/* Goes through the argument list, checking if one of them occurs in str
- * Returns: TRUE as soon as an element is found to match, FALSE otherwise */
-static gboolean
-is_string_complete (gchar *str, ...)
-{
-        va_list ap;
-        gchar   *arg;
-
-        if (strlen (str) == 0) {
-                return FALSE;
-        }
-
-        va_start (ap, str);
-
-        while ((arg = va_arg (ap, char *)) != NULL) {
-                if (strstr (str, arg) != NULL) {
-                        va_end (ap);
-                        return TRUE;
-                }
-        }
-
-        va_end (ap);
-
-        return FALSE;
-}
-
-/*
- * IO watcher for stdout, called whenever there is data to read from the backend.
- * This is where most of the actual IO handling happens.
- */
-static gboolean
-io_watch_stdout (GIOChannel *source, GIOCondition condition, PasswdHandler *passwd_handler)
-{
-        static GString *str = NULL;     /* Persistent buffer */
-
-        gchar           buf[BUFSIZE];           /* Temporary buffer */
-        gsize           bytes_read;
-        GError          *gio_error = NULL;      /* Error returned by functions */
-        GError          *error = NULL;          /* Error sent to callbacks */
-
-        gboolean        reinit = FALSE;
-
-        /* Initialize buffer */
-        if (str == NULL) {
-                str = g_string_new ("");
-        }
-
-        if (g_io_channel_read_chars (source, buf, BUFSIZE, &bytes_read, &gio_error)
-            != G_IO_STATUS_NORMAL) {
-                g_warning ("IO Channel read error: %s", gio_error->message);
-                g_error_free (gio_error);
-
-                return TRUE;
-        }
-
-        str = g_string_append_len (str, buf, bytes_read);
-
-        /* In which state is the backend? */
-        switch (passwd_handler->backend_state) {
-                case PASSWD_STATE_AUTH:
-                        /* Passwd is asking for our current password */
-
-                        if (is_string_complete (str->str, "assword: ", "failure", "wrong", "error", NULL)) {
-
-                                if (strstr (str->str, "assword: ") != NULL && strstr (str->str, "incorrect") == NULL) {
-                                        /* Authentication successful */
-
-                                        passwd_handler->backend_state = PASSWD_STATE_NEW;
-
-                                        /* Trigger callback to update authentication status */
-                                        if (passwd_handler->auth_cb)
-                                                passwd_handler->auth_cb (passwd_handler,
-                                                                         NULL,
-                                                                         passwd_handler->auth_cb_data);
-
-                                } else {
-                                        /* Authentication failed */
-
-                                        error = g_error_new_literal (PASSWD_ERROR, PASSWD_ERROR_AUTH_FAILED,
-                                                                     _("Authentication failed"));
-
-                                        passwd_handler->changing_password = FALSE;
-
-                                        /* This error can happen both while authenticating or while changing password:
-                                         * if chpasswd_cb is set, this means we're already changing password */
-                                        if (passwd_handler->chpasswd_cb)
-                                                passwd_handler->chpasswd_cb (passwd_handler,
-                                                                             error,
-                                                                             passwd_handler->chpasswd_cb_data);
-                                        else if (passwd_handler->auth_cb)
-                                                passwd_handler->auth_cb (passwd_handler,
-                                                                         error,
-                                                                         passwd_handler->auth_cb_data);
-
-                                        g_error_free (error);
-                                }
-
-                                reinit = TRUE;
-                        }
-                        break;
-                case PASSWD_STATE_NEW:
-                        /* Passwd is asking for our new password */
-
-                        if (is_string_complete (str->str, "assword: ", NULL)) {
-                                /* Advance to next state */
-                                passwd_handler->backend_state = PASSWD_STATE_RETYPE;
-
-                                /* Pop retyped password from queue and into IO channel */
-                                io_queue_pop (passwd_handler->backend_stdin_queue, passwd_handler->backend_stdin);
-
-                                reinit = TRUE;
-                        }
-                        break;
-                case PASSWD_STATE_RETYPE:
-                        /* Passwd is asking for our retyped new password */
-
-                        if (is_string_complete (str->str,
-                                                "successfully",
-                                                "short",
-                                                "longer",
-                                                "palindrome",
-                                                "dictionary",
-                                                "simple",
-                                                "simplistic",
-                                                "similar",
-                                                "case",
-                                                "different",
-                                                "wrapped",
-                                                "recovered",
-                                                "recent",
-                                                "unchanged",
-                                                "match",
-                                                "1 numeric or special",
-                                                "failure",
-                                                "DIFFERENT",
-                                                "BAD PASSWORD",
-                                                NULL)) {
-
-                                if (strstr (str->str, "successfully") != NULL) {
-                                        /* Hooray! */
-
-                                        passwd_handler->backend_state = PASSWD_STATE_DONE;
-                                        /* Trigger callback to update status */
-                                        if (passwd_handler->chpasswd_cb)
-                                                passwd_handler->chpasswd_cb (passwd_handler,
-                                                                             NULL,
-                                                                             passwd_handler->chpasswd_cb_data);
-                                }
-                                else {
-                                        /* Ohnoes! */
-
-                                        if (strstr (str->str, "recovered") != NULL) {
-                                                /* What does this indicate?
-                                                 * "Authentication information cannot be recovered?" from libpam? */
-                                                error = g_error_new_literal (PASSWD_ERROR, PASSWD_ERROR_UNKNOWN,
-                                                                             str->str);
-                                        } else if (strstr (str->str, "short") != NULL ||
-                                                   strstr (str->str, "longer") != NULL) {
-                                                error = g_error_new (PASSWD_ERROR, PASSWD_ERROR_REJECTED,
-                                                                     _("The new password is too short"));
-                                        } else if (strstr (str->str, "palindrome") != NULL ||
-                                                   strstr (str->str, "simple") != NULL ||
-                                                   strstr (str->str, "simplistic") != NULL ||
-                                                   strstr (str->str, "dictionary") != NULL) {
-                                                error = g_error_new (PASSWD_ERROR, PASSWD_ERROR_REJECTED,
-                                                                     _("The new password is too simple"));
-                                        } else if (strstr (str->str, "similar") != NULL ||
-                                                   strstr (str->str, "different") != NULL ||
-                                                   strstr (str->str, "case") != NULL ||
-                                                   strstr (str->str, "wrapped") != NULL) {
-                                                error = g_error_new (PASSWD_ERROR, PASSWD_ERROR_REJECTED,
-                                                                     _("The old and new passwords are too similar"));
-                                        } else if (strstr (str->str, "recent") != NULL) {
-                                                error = g_error_new (PASSWD_ERROR, PASSWD_ERROR_REJECTED,
-                                                                     _("The new password has already been used recently."));
-                                        } else if (strstr (str->str, "1 numeric or special") != NULL) {
-                                                error = g_error_new (PASSWD_ERROR, PASSWD_ERROR_REJECTED,
-                                                                     _("The new password must contain numeric or special characters"));
-                                        } else if (strstr (str->str, "unchanged") != NULL ||
-                                                   strstr (str->str, "match") != NULL) {
-                                                error = g_error_new (PASSWD_ERROR, PASSWD_ERROR_REJECTED,
-                                                                     _("The old and new passwords are the same"));
-                                        } else if (strstr (str->str, "failure") != NULL) {
-                                                /* Authentication failure */
-                                                error = g_error_new (PASSWD_ERROR, PASSWD_ERROR_AUTH_FAILED,
-                                                                     _("Your password has been changed since you initially authenticated!"));
-                                        }
-                                        else if (strstr (str->str, "DIFFERENT")) {
-                                                error = g_error_new (PASSWD_ERROR, PASSWD_ERROR_REJECTED,
-                                                                     _("The new password does not contain enough different characters"));
-                                        }
-                                        else {
-                                                error = g_error_new (PASSWD_ERROR, PASSWD_ERROR_UNKNOWN,
-                                                                     _("Unknown error"));
-                                        }
-
-                                        /* At this point, passwd might have exited, in which case
-                                         * child_watch_cb should clean up for us and remove this watcher.
-                                         * On some error conditions though, passwd just re-prompts us
-                                         * for our new password. */
-                                        passwd_handler->backend_state = PASSWD_STATE_ERR;
-
-                                        passwd_handler->changing_password = FALSE;
-
-                                        /* Trigger callback to update status */
-                                        if (passwd_handler->chpasswd_cb)
-                                                passwd_handler->chpasswd_cb (passwd_handler,
-                                                                             error,
-                                                                             passwd_handler->chpasswd_cb_data);
-
-                                        g_error_free (error);
-
-                                }
-
-                                reinit = TRUE;
-
-                                /* child_watch_cb should clean up for us now */
-                        }
-                        break;
-                case PASSWD_STATE_NONE:
-                        /* Passwd is not asking for anything yet */
-                        if (is_string_complete (str->str, "assword: ", NULL)) {
-
-                                /* If the user does not have a password set,
-                                 * passwd will immediately ask for the new password,
-                                 * so skip the AUTH phase */
-                                if (is_string_complete (str->str, "new", "New", NULL)) {
-                                        gchar *pw;
-
-                                        passwd_handler->backend_state = PASSWD_STATE_NEW;
-
-                                        /* since passwd didn't ask for our old password
-                                         * in this case, simply remove it from the queue */
-                                        pw = g_queue_pop_head (passwd_handler->backend_stdin_queue);
-                                        g_free (pw);
-
-                                        /* Pop the IO queue, i.e. send new password */
-                                        io_queue_pop (passwd_handler->backend_stdin_queue, passwd_handler->backend_stdin);
-
-                                } else {
-
-                                        passwd_handler->backend_state = PASSWD_STATE_AUTH;
-
-                                        /* Pop the IO queue, i.e. send current password */
-                                        io_queue_pop (passwd_handler->backend_stdin_queue, passwd_handler->backend_stdin);
-                                }
-
-                                reinit = TRUE;
-                        }
-                        break;
-                default:
-                        /* Passwd has returned an error */
-                        reinit = TRUE;
-                        break;
-        }
-
-        if (reinit) {
-                g_string_free (str, TRUE);
-                str = NULL;
-        }
-
-        /* Continue calling us */
-        return TRUE;
-}
-
-/*
- * }} Backend communication code
- */
-
-/* Adds the current password to the IO queue */
-static void
-authenticate (PasswdHandler *passwd_handler)
-{
-        gchar   *s;
-
-        s = g_strdup_printf ("%s\n", passwd_handler->current_password);
-
-        g_queue_push_tail (passwd_handler->backend_stdin_queue, s);
-}
-
-/* Adds the new password twice to the IO queue */
-static void
-update_password (PasswdHandler *passwd_handler)
-{
-        gchar   *s;
-
-        s = g_strdup_printf ("%s\n", passwd_handler->new_password);
-
-        g_queue_push_tail (passwd_handler->backend_stdin_queue, s);
-        /* We need to allocate new space because io_queue_pop() g_free()s
-         * every element of the queue after it's done */
-        g_queue_push_tail (passwd_handler->backend_stdin_queue, g_strdup (s));
-}
-
-
-PasswdHandler *
-passwd_init (void)
-{
-        PasswdHandler *passwd_handler;
-
-        passwd_handler = g_new0 (PasswdHandler, 1);
-
-        /* Initialize backend_pid. -1 means the backend is not running */
-        passwd_handler->backend_pid = -1;
-
-        /* Initialize IO Channels */
-        passwd_handler->backend_stdin = NULL;
-        passwd_handler->backend_stdout = NULL;
-
-        /* Initialize write queue */
-        passwd_handler->backend_stdin_queue = g_queue_new ();
-
-        /* Initialize watchers */
-        passwd_handler->backend_child_watch_id = 0;
-        passwd_handler->backend_stdout_watch_id = 0;
-
-        /* Initialize backend state */
-        passwd_handler->backend_state = PASSWD_STATE_NONE;
-        passwd_handler->changing_password = FALSE;
-
-        return passwd_handler;
-}
-
-void
-passwd_destroy (PasswdHandler *passwd_handler)
-{
-        g_queue_free (passwd_handler->backend_stdin_queue);
-        stop_passwd (passwd_handler);
-        g_free (passwd_handler);
-}
-
-void
-passwd_authenticate (PasswdHandler *passwd_handler,
-                     const char    *current_password,
-                     PasswdCallback cb,
-                     const gpointer user_data)
-{
-        GError *error = NULL;
-
-        /* Don't stop if we've already started chaging password */
-        if (passwd_handler->changing_password)
-                return;
-
-        /* Clear data from possible previous attempts to change password */
-        passwd_handler->new_password = NULL;
-        passwd_handler->chpasswd_cb = NULL;
-        passwd_handler->chpasswd_cb_data = NULL;
-        g_queue_foreach (passwd_handler->backend_stdin_queue, (GFunc) g_free, NULL);
-        g_queue_clear (passwd_handler->backend_stdin_queue);
-
-        passwd_handler->current_password = current_password;
-        passwd_handler->auth_cb = cb;
-        passwd_handler->auth_cb_data = user_data;
-
-        /* Spawn backend */
-        stop_passwd (passwd_handler);
-
-        if (!spawn_passwd (passwd_handler, &error)) {
-                g_warning ("%s", error->message);
-                g_error_free (error);
-
-                return;
-        }
-
-        authenticate (passwd_handler);
-
-        /* Our IO watcher should now handle the rest */
-}
-
-gboolean
-passwd_change_password (PasswdHandler *passwd_handler,
-                        const char    *new_password,
-                        PasswdCallback cb,
-                        const gpointer user_data)
-{
-        GError *error = NULL;
-
-        passwd_handler->changing_password = TRUE;
-
-        passwd_handler->new_password = new_password;
-        passwd_handler->chpasswd_cb = cb;
-        passwd_handler->chpasswd_cb_data = user_data;
-
-        /* Stop passwd if an error occured and it is still running */
-        if (passwd_handler->backend_state == PASSWD_STATE_ERR) {
-
-                /* Stop passwd, free resources */
-                stop_passwd (passwd_handler);
-        }
-
-        /* Check that the backend is still running, or that an error
-         * has occured but it has not yet exited */
-        if (passwd_handler->backend_pid == -1) {
-                /* If it is not, re-run authentication */
-
-                /* Spawn backend */
-                stop_passwd (passwd_handler);
-
-                if (!spawn_passwd (passwd_handler, &error)) {
-                        g_warning ("%s", error->message);
-                        g_error_free (error);
-
-                        return FALSE;
-                }
-
-                /* Add current and new passwords to queue */
-                authenticate (passwd_handler);
-                update_password (passwd_handler);
-        } else {
-                /* Only add new passwords to queue */
-                update_password (passwd_handler);
-        }
-
-        /* Pop new password through the backend.
-         * If user has no password, popping the queue would output current
-         * password, while 'passwd' is waiting for the new one. So wait for
-         * io_watch_stdout() to remove current password from the queue,
-         * and output the new one for us.
-         */
-        if (passwd_handler->current_password)
-                io_queue_pop (passwd_handler->backend_stdin_queue, passwd_handler->backend_stdin);
-
-        /* Our IO watcher should now handle the rest */
-
-        return TRUE;
-}
diff --git a/panels/user-accounts/run-passwd.h b/panels/user-accounts/run-passwd.h
deleted file mode 100644
index 2b07185..0000000
--- a/panels/user-accounts/run-passwd.h
+++ /dev/null
@@ -1,58 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*- */
-/* run-passwd.h: this file is part of users-admin, a gnome-system-tools frontend
- * for user administration.
- *
- * Copyright (C) 2010 Milan Bouchet-Valat
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as
- * published by the Free Software Foundation; either version 2 of the
- * License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
- *
- * Authors: Milan Bouchet-Valat <nalimilan@club.fr>
- */
-
-#ifndef _RUN_PASSWD_H
-#define _RUN_PASSWD_H
-
-struct PasswdHandler;
-
-typedef struct PasswdHandler PasswdHandler;
-
-typedef void (*PasswdCallback) (PasswdHandler *passwd_handler, GError *error, const gpointer user_data);
-
-/* Error codes */
-typedef enum {
-        PASSWD_ERROR_REJECTED,          /* New password is not secure enough */
-        PASSWD_ERROR_AUTH_FAILED,       /* Wrong old password, or PAM failure */
-        PASSWD_ERROR_REAUTH_FAILED,     /* Password has changed since first authentication */
-        PASSWD_ERROR_BACKEND,           /* Backend error */
-        PASSWD_ERROR_UNKNOWN            /* General error */
-} PasswdError;
-
-
-PasswdHandler *passwd_init                (void);
-
-void           passwd_destroy             (PasswdHandler *passwd_handler);
-
-void           passwd_authenticate        (PasswdHandler *passwd_handler,
-                                           const char    *current_password,
-                                           PasswdCallback cb,
-                                           gpointer       user_data);
-
-gboolean       passwd_change_password     (PasswdHandler *passwd_handler,
-                                           const char    *new_password,
-                                           PasswdCallback cb,
-                                           const gpointer user_data);
-
-#endif /* _RUN_PASSWD_H */
-
diff --git a/panels/user-accounts/um-account-dialog.c b/panels/user-accounts/um-account-dialog.c
deleted file mode 100644
index ec044f4..0000000
--- a/panels/user-accounts/um-account-dialog.c
+++ /dev/null
@@ -1,1281 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#include "config.h"
-
-#include <glib.h>
-#include <glib/gi18n.h>
-#include <gtk/gtk.h>
-#include <act/act.h>
-
-#include "um-account-dialog.h"
-#include "um-realm-manager.h"
-#include "um-utils.h"
-
-typedef enum {
-        UM_LOCAL,
-        UM_ENTERPRISE,
-        NUM_MODES
-} UmAccountMode;
-
-static void   mode_change          (UmAccountDialog *self,
-                                    UmAccountMode mode);
-
-static void   dialog_validate      (UmAccountDialog *self);
-
-static void   on_join_login        (GObject *source,
-                                    GAsyncResult *result,
-                                    gpointer user_data);
-
-static void   on_realm_joined      (GObject *source,
-                                    GAsyncResult *result,
-                                    gpointer user_data);
-
-static void   um_account_dialog_response  (GtkDialog *dialog,
-                                           gint response_id);
-
-#define UM_ACCOUNT_DIALOG_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass), UM_TYPE_ACCOUNT_DIALOG, \
-                                                                    UmAccountDialogClass))
-#define UM_IS_ACCOUNT_DIALOG_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UM_TYPE_ACCOUNT_DIALOG))
-#define UM_ACCOUNT_DIALOG_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj), UM_TYPE_ACCOUNT_DIALOG, \
-                                                                      UmAccountDialogClass))
-
-struct _UmAccountDialog {
-        GtkDialog parent;
-        GtkWidget *container_widget;
-        GSimpleAsyncResult *async;
-        GCancellable *cancellable;
-        GPermission *permission;
-        GtkSpinner *spinner;
-
-        /* Buttons to switch modes between local/enterprise */
-        UmAccountMode mode;
-        GtkWidget *mode_container;
-        gboolean mode_updating;
-        GtkWidget *mode_buttons[NUM_MODES];
-        GtkWidget *mode_areas[NUM_MODES];
-
-        /* Local user account widgets */
-        GtkWidget *local_username;
-        GtkWidget *local_name;
-        GtkWidget *local_account_type;
-
-        /* Enterprise widgets */
-        guint realmd_watch;
-        GtkWidget *enterprise_button;
-        GtkListStore *enterprise_realms;
-        GtkComboBox *enterprise_domain;
-        GtkEntry *enterprise_domain_entry;
-        gboolean enterprise_domain_chosen;
-        GtkEntry *enterprise_login;
-        GtkEntry *enterprise_password;
-        UmRealmManager *realm_manager;
-        UmRealmObject *selected_realm;
-
-        /* Join credential dialog */
-        GtkDialog *join_dialog;
-        GtkLabel *join_domain;
-        GtkEntry *join_name;
-        GtkEntry *join_password;
-        gboolean join_prompted;
-};
-
-struct _UmAccountDialogClass {
-        GtkDialogClass parent_class;
-};
-
-G_DEFINE_TYPE (UmAccountDialog, um_account_dialog, GTK_TYPE_DIALOG);
-
-static void
-show_error_dialog (UmAccountDialog *self,
-                   const gchar *message,
-                   GError *error)
-{
-        GtkWidget *dialog;
-
-        dialog = gtk_message_dialog_new (GTK_WINDOW (self),
-                                         GTK_DIALOG_MODAL | GTK_DIALOG_DESTROY_WITH_PARENT,
-                                         GTK_MESSAGE_ERROR,
-                                         GTK_BUTTONS_CLOSE,
-                                         "%s", message);
-
-        if (error != NULL) {
-                g_dbus_error_strip_remote_error (error);
-                gtk_message_dialog_format_secondary_text (GTK_MESSAGE_DIALOG (dialog),
-                                                          "%s", error->message);
-        }
-
-        g_signal_connect (dialog, "response", G_CALLBACK (gtk_widget_destroy), NULL);
-        gtk_window_present (GTK_WINDOW (dialog));
-}
-
-static void
-begin_action (UmAccountDialog *self)
-{
-        g_debug ("Beginning action, disabling dialog controls");
-
-        gtk_widget_set_sensitive (self->container_widget, FALSE);
-        gtk_dialog_set_response_sensitive (GTK_DIALOG (self), GTK_RESPONSE_OK, FALSE);
-
-        gtk_widget_show (GTK_WIDGET (self->spinner));
-        gtk_spinner_start (self->spinner);
-}
-
-static void
-finish_action (UmAccountDialog *self)
-{
-        g_debug ("Completed action, enabling dialog controls");
-
-        gtk_widget_set_sensitive (self->container_widget, TRUE);
-        gtk_dialog_set_response_sensitive (GTK_DIALOG (self), GTK_RESPONSE_OK, TRUE);
-
-        gtk_widget_hide (GTK_WIDGET (self->spinner));
-        gtk_spinner_stop (self->spinner);
-}
-
-static void
-complete_dialog (UmAccountDialog *self,
-                 ActUser         *user)
-{
-        if (user != NULL) {
-                g_simple_async_result_set_op_res_gpointer (self->async,
-                                                           g_object_ref (user),
-                                                           g_object_unref);
-        }
-
-        g_simple_async_result_complete_in_idle (self->async);
-        gtk_widget_hide (GTK_WIDGET (self));
-}
-
-static void
-user_loaded_cb (ActUser         *user,
-                GParamSpec      *pspec,
-                UmAccountDialog *self)
-{
-  finish_action (self);
-  complete_dialog (self, user);
-}
-
-static void
-create_user_done (ActUserManager  *manager,
-                  GAsyncResult    *res,
-                  UmAccountDialog *self)
-{
-        ActUser *user;
-        GError *error;
-
-        /* Note that user is returned without an extra reference */
-
-        error = NULL;
-        user = act_user_manager_create_user_finish (manager, res, &error);
-
-        if (user == NULL) {
-                finish_action (self);
-                g_debug ("Failed to create user: %s", error->message);
-                if (!g_error_matches (error, ACT_USER_MANAGER_ERROR, ACT_USER_MANAGER_ERROR_PERMISSION_DENIED))
-                       show_error_dialog (self, _("Failed to add account"), error);
-                g_error_free (error);
-                gtk_widget_grab_focus (self->local_name);
-        } else {
-                g_debug ("Created user: %s", act_user_get_user_name (user));
-                /* Check if the returned object is fully loaded before returning it */
-                if (act_user_is_loaded (user))
-                        user_loaded_cb (user, NULL, self);
-                else
-                        g_signal_connect (user, "notify::is-loaded", G_CALLBACK (user_loaded_cb), self);
-        }
-}
-
-static void
-local_create_user (UmAccountDialog *self)
-{
-        ActUserManager *manager;
-        const gchar *username;
-        const gchar *name;
-        gint account_type;
-        GtkTreeModel *model;
-        GtkTreeIter iter;
-
-        begin_action (self);
-
-        name = gtk_entry_get_text (GTK_ENTRY (self->local_name));
-        username = gtk_combo_box_text_get_active_text (GTK_COMBO_BOX_TEXT (self->local_username));
-        model = gtk_combo_box_get_model (GTK_COMBO_BOX (self->local_account_type));
-        gtk_combo_box_get_active_iter (GTK_COMBO_BOX (self->local_account_type), &iter);
-        gtk_tree_model_get (model, &iter, 1, &account_type, -1);
-
-        g_debug ("Creating local user: %s", username);
-
-        manager = act_user_manager_get_default ();
-        act_user_manager_create_user_async (manager,
-                                            username,
-                                            name,
-                                            account_type,
-                                            self->cancellable,
-                                            (GAsyncReadyCallback)create_user_done,
-                                            self);
-}
-
-static gboolean
-local_validate (UmAccountDialog *self)
-{
-        gboolean valid_login;
-        gboolean valid_name;
-        GtkWidget *entry;
-        const gchar *name;
-        gchar *tip;
-
-        name = gtk_combo_box_text_get_active_text (GTK_COMBO_BOX_TEXT (self->local_username));
-        valid_login = is_valid_username (name, &tip);
-
-        entry = gtk_bin_get_child (GTK_BIN (self->local_username));
-        if (tip) {
-                set_entry_validation_error (GTK_ENTRY (entry), tip);
-                g_free (tip);
-        } else {
-                clear_entry_validation_error (GTK_ENTRY (entry));
-        }
-
-        name = gtk_entry_get_text (GTK_ENTRY (self->local_name));
-        valid_name = is_valid_name (name);
-
-        return valid_name && valid_login;
-}
-
-static void
-on_username_changed (GtkComboBoxText *combo,
-                     gpointer         user_data)
-{
-        dialog_validate (UM_ACCOUNT_DIALOG (user_data));
-}
-
-static void
-on_name_changed (GtkEditable *editable,
-                 gpointer user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-        GtkTreeModel *model;
-        const char *name;
-        GtkWidget *entry;
-
-        model = gtk_combo_box_get_model (GTK_COMBO_BOX (self->local_username));
-        gtk_list_store_clear (GTK_LIST_STORE (model));
-
-        name = gtk_entry_get_text (GTK_ENTRY (editable));
-        if (strlen (name) == 0) {
-                entry = gtk_bin_get_child (GTK_BIN (self->local_username));
-                gtk_entry_set_text (GTK_ENTRY (entry), "");
-        } else {
-                generate_username_choices (name, GTK_LIST_STORE (model));
-                gtk_combo_box_set_active (GTK_COMBO_BOX (self->local_username), 0);
-        }
-
-        dialog_validate (self);
-}
-
-static void
-local_init (UmAccountDialog *self,
-            GtkBuilder *builder)
-{
-        GtkWidget *widget;
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "local-username");
-        g_signal_connect (widget, "changed",
-                          G_CALLBACK (on_username_changed), self);
-        self->local_username = widget;
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "local-name");
-        g_signal_connect (widget, "changed", G_CALLBACK (on_name_changed), self);
-        self->local_name = widget;
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "local-account-type");
-        self->local_account_type = widget;
-}
-
-static void
-local_prepare (UmAccountDialog *self)
-{
-        GtkTreeModel *model;
-
-        gtk_entry_set_text (GTK_ENTRY (self->local_name), "");
-        gtk_entry_set_text (GTK_ENTRY (gtk_bin_get_child (GTK_BIN (self->local_username))), "");
-        model = gtk_combo_box_get_model (GTK_COMBO_BOX (self->local_username));
-        gtk_list_store_clear (GTK_LIST_STORE (model));
-        gtk_combo_box_set_active (GTK_COMBO_BOX (self->local_account_type), 0);
-}
-
-static gboolean
-enterprise_validate (UmAccountDialog *self)
-{
-        const gchar *name;
-        gboolean valid_name;
-        gboolean valid_domain;
-        GtkTreeIter iter;
-
-        name = gtk_entry_get_text (GTK_ENTRY (self->enterprise_login));
-        valid_name = is_valid_name (name);
-
-        if (gtk_combo_box_get_active_iter (self->enterprise_domain, &iter)) {
-                gtk_tree_model_get (gtk_combo_box_get_model (self->enterprise_domain),
-                                    &iter, 0, &name, -1);
-        } else {
-                name = gtk_entry_get_text (self->enterprise_domain_entry);
-        }
-
-        valid_domain = is_valid_name (name);
-        return valid_name && valid_domain;
-}
-
-static void
-enterprise_add_realm (UmAccountDialog *self,
-                      UmRealmObject *realm)
-{
-        GtkTreeModel *model;
-        GtkTreeIter iter;
-        UmRealmCommon *common;
-        const gchar *realm_name;
-        gboolean match;
-        gboolean ret;
-        gchar *name;
-
-        common = um_realm_object_get_common (realm);
-        realm_name = um_realm_common_get_name (common);
-
-        /*
-         * Don't add a second realm if we already have one with this name.
-         * Sometimes realmd returns to realms for the same name, if it has
-         * different ways to use that realm. The first one that realmd
-         * returns is the one it prefers.
-         */
-
-        model = GTK_TREE_MODEL (self->enterprise_realms);
-        ret = gtk_tree_model_get_iter_first (model, &iter);
-        while (ret) {
-                gtk_tree_model_get (model, &iter, 0, &name, -1);
-                match = (g_strcmp0 (name, realm_name) == 0);
-                g_free (name);
-                if (match) {
-                        g_debug ("ignoring duplicate realm: %s", realm_name);
-                        g_object_unref (common);
-                        return;
-                }
-                ret = gtk_tree_model_iter_next (model, &iter);
-        }
-
-        gtk_list_store_append (self->enterprise_realms, &iter);
-        gtk_list_store_set (self->enterprise_realms, &iter,
-                            0, realm_name,
-                            1, realm,
-                            -1);
-
-        g_debug ("added realm to drop down: %s %s", realm_name,
-                 g_dbus_object_get_object_path (G_DBUS_OBJECT (realm)));
-
-        if (!self->enterprise_domain_chosen && um_realm_is_configured (realm))
-                gtk_combo_box_set_active_iter (self->enterprise_domain, &iter);
-
-        g_object_unref (common);
-}
-
-static void
-on_manager_realm_added (UmRealmManager  *manager,
-                        UmRealmObject   *realm,
-                        gpointer         user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-        enterprise_add_realm (self, realm);
-}
-
-
-static void
-on_register_user (GObject *source,
-                  GAsyncResult *result,
-                  gpointer user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-        GError *error = NULL;
-        ActUser *user;
-
-        user = act_user_manager_cache_user_finish (ACT_USER_MANAGER (source), result, &error);
-
-        /* This is where we're finally done */
-        if (user != NULL) {
-                g_debug ("Successfully cached remote user: %s", act_user_get_user_name (user));
-                finish_action (self);
-                complete_dialog (self, user);
-
-        } else {
-                show_error_dialog (self, _("Failed to register account"), error);
-                g_message ("Couldn't cache user account: %s", error->message);
-                finish_action (self);
-                g_error_free (error);
-        }
-
-        g_object_unref (self);
-}
-
-static void
-on_permit_user_login (GObject *source,
-                      GAsyncResult *result,
-                      gpointer user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-        UmRealmCommon *common;
-        ActUserManager *manager;
-        GError *error = NULL;
-        gchar *login;
-
-        common = UM_REALM_COMMON (source);
-        um_realm_common_call_change_login_policy_finish (common, result, &error);
-        if (error == NULL) {
-
-                /*
-                 * Now tell the account service about this user. The account service
-                 * should also lookup information about this via the realm and make
-                 * sure all that is functional.
-                 */
-                manager = act_user_manager_get_default ();
-                login = um_realm_calculate_login (common, gtk_entry_get_text (self->enterprise_login));
-                g_return_if_fail (login != NULL);
-
-                g_debug ("Caching remote user: %s", login);
-
-                act_user_manager_cache_user_async (manager, login, self->cancellable,
-                                                   on_register_user, g_object_ref (self));
-
-                g_free (login);
-
-        } else {
-                show_error_dialog (self, _("Failed to register account"), error);
-                g_message ("Couldn't permit logins on account: %s", error->message);
-                finish_action (self);
-                g_error_free (error);
-        }
-
-        g_object_unref (self);
-}
-
-static void
-enterprise_permit_user_login (UmAccountDialog *self)
-{
-        UmRealmCommon *common;
-        gchar *login;
-        const gchar *add[2];
-        const gchar *remove[1];
-        GVariant *options;
-
-        common = um_realm_object_get_common (self->selected_realm);
-
-        login = um_realm_calculate_login (common, gtk_entry_get_text (self->enterprise_login));
-        g_return_if_fail (login != NULL);
-
-        add[0] = login;
-        add[1] = NULL;
-        remove[0] = NULL;
-
-        g_debug ("Permitting login for: %s", login);
-        options = g_variant_new_array (G_VARIANT_TYPE ("{sv}"), NULL, 0);
-
-        um_realm_common_call_change_login_policy (common, "",
-                                                  add, remove, options,
-                                                  self->cancellable,
-                                                  on_permit_user_login,
-                                                  g_object_ref (self));
-
-        g_object_unref (common);
-        g_free (login);
-}
-
-static void
-on_join_response (GtkDialog *dialog,
-                  gint response,
-                  gpointer user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-
-        gtk_widget_hide (GTK_WIDGET (dialog));
-        if (response != GTK_RESPONSE_OK) {
-                finish_action (self);
-                return;
-        }
-
-        g_debug ("Logging in as admin user: %s", gtk_entry_get_text (self->join_name));
-
-        /* Prompted for some admin credentials, try to use them to log in */
-        um_realm_login (self->selected_realm,
-                        gtk_entry_get_text (self->join_name),
-                        gtk_entry_get_text (self->join_password),
-                        self->cancellable,
-                        on_join_login,
-                        g_object_ref (self));
-}
-
-static void
-join_show_prompt (UmAccountDialog *self,
-                  GError *error)
-{
-        UmRealmKerberosMembership *membership;
-        UmRealmKerberos *kerberos;
-        const gchar *name;
-
-        gtk_entry_set_text (self->join_password, "");
-        gtk_widget_grab_focus (GTK_WIDGET (self->join_password));
-
-        kerberos = um_realm_object_get_kerberos (self->selected_realm);
-        membership = um_realm_object_get_kerberos_membership (self->selected_realm);
-
-        gtk_label_set_text (self->join_domain,
-                            um_realm_kerberos_get_domain_name (kerberos));
-
-        clear_entry_validation_error (self->join_name);
-        clear_entry_validation_error (self->join_password);
-
-        if (!self->join_prompted) {
-                name = um_realm_kerberos_membership_get_suggested_administrator (membership);
-                if (name && !g_str_equal (name, "")) {
-                        g_debug ("Suggesting admin user: %s", name);
-                        gtk_entry_set_text (self->join_name, name);
-                } else {
-                        gtk_widget_grab_focus (GTK_WIDGET (self->join_name));
-                }
-
-        } else if (g_error_matches (error, UM_REALM_ERROR, UM_REALM_ERROR_BAD_PASSWORD)) {
-                g_debug ("Bad admin password: %s", error->message);
-                set_entry_validation_error (self->join_password, error->message);
-
-        } else {
-                g_debug ("Admin login failure: %s", error->message);
-                g_dbus_error_strip_remote_error (error);
-                set_entry_validation_error (self->join_name, error->message);
-        }
-
-        g_debug ("Showing admin password dialog");
-        gtk_window_set_transient_for (GTK_WINDOW (self->join_dialog), GTK_WINDOW (self));
-        gtk_window_set_modal (GTK_WINDOW (self->join_dialog), TRUE);
-        gtk_window_present (GTK_WINDOW (self->join_dialog));
-
-        self->join_prompted = TRUE;
-        g_object_unref (kerberos);
-        g_object_unref (membership);
-
-        /* And now we wait for on_join_response() */
-}
-
-static void
-on_join_login (GObject *source,
-               GAsyncResult *result,
-               gpointer user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-        GError *error = NULL;
-        GBytes *creds;
-
-        um_realm_login_finish (result, &creds, &error);
-
-        /* Logged in as admin successfully, use creds to join domain */
-        if (error == NULL) {
-                if (!um_realm_join_as_admin (self->selected_realm,
-                                             gtk_entry_get_text (self->join_name),
-                                             gtk_entry_get_text (self->join_password),
-                                             creds, self->cancellable, on_realm_joined,
-                                             g_object_ref (self))) {
-                        show_error_dialog (self, _("No supported way to authenticate with this domain"), NULL);
-                        g_message ("Authenticating as admin is not supported by the realm");
-                        finish_action (self);
-                }
-
-                g_bytes_unref (creds);
-
-        /* Couldn't login as admin, show prompt again */
-        } else {
-                join_show_prompt (self, error);
-                g_message ("Couldn't log in as admin to join domain: %s", error->message);
-                g_error_free (error);
-        }
-
-        g_object_unref (self);
-}
-
-static void
-join_init (UmAccountDialog *self,
-           GtkBuilder *builder)
-{
-        self->join_dialog = GTK_DIALOG (gtk_builder_get_object (builder, "join-dialog"));
-        self->join_domain = GTK_LABEL (gtk_builder_get_object (builder, "join-domain"));
-        self->join_name = GTK_ENTRY (gtk_builder_get_object (builder, "join-name"));
-        self->join_password = GTK_ENTRY (gtk_builder_get_object (builder, "join-password"));
-
-        g_signal_connect (self->join_dialog, "response",
-                          G_CALLBACK (on_join_response), self);
-}
-
-static void
-on_realm_joined (GObject *source,
-                 GAsyncResult *result,
-                 gpointer user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-        GError *error = NULL;
-
-        um_realm_join_finish (self->selected_realm,
-                              result, &error);
-
-        /* Yay, joined the domain, register the user locally */
-        if (error == NULL) {
-                g_debug ("Joining realm completed successfully");
-                enterprise_permit_user_login (self);
-
-        /* Credential failure while joining domain, prompt for admin creds */
-        } else if (g_error_matches (error, UM_REALM_ERROR, UM_REALM_ERROR_BAD_LOGIN) ||
-                   g_error_matches (error, UM_REALM_ERROR, UM_REALM_ERROR_BAD_PASSWORD)) {
-                g_debug ("Joining realm failed due to credentials");
-                join_show_prompt (self, error);
-
-        /* Other failure */
-        } else {
-                show_error_dialog (self, _("Failed to join domain"), error);
-                g_message ("Failed to join the domain: %s", error->message);
-                finish_action (self);
-        }
-
-        g_clear_error (&error);
-        g_object_unref (self);
-}
-
-static void
-on_realm_login (GObject *source,
-                GAsyncResult *result,
-                gpointer user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-        GError *error = NULL;
-        GBytes *creds = NULL;
-
-        um_realm_login_finish (result, &creds, &error);
-
-        /*
-         * User login is valid, but cannot authenticate right now (eg: user needs
-         * to change password at next login etc.)
-         */
-        if (g_error_matches (error, UM_REALM_ERROR, UM_REALM_ERROR_CANNOT_AUTH)) {
-                g_clear_error (&error);
-                creds = NULL;
-        }
-
-        if (error == NULL) {
-
-                /* Already joined to the domain, just register this user */
-                if (um_realm_is_configured (self->selected_realm)) {
-                        g_debug ("Already joined to this realm");
-                        enterprise_permit_user_login (self);
-
-                /* Join the domain, try using the user's creds */
-                } else if (creds == NULL ||
-                           !um_realm_join_as_user (self->selected_realm,
-                                                   gtk_entry_get_text (self->enterprise_login),
-                                                   gtk_entry_get_text (self->enterprise_password),
-                                                   creds, self->cancellable,
-                                                   on_realm_joined,
-                                                   g_object_ref (self))) {
-
-                        /* If we can't do user auth, try to authenticate as admin */
-                        g_debug ("Cannot join with user credentials");
-                        join_show_prompt (self, NULL);
-                }
-
-                g_bytes_unref (creds);
-
-        /* A problem with the user's login name or password */
-        } else if (g_error_matches (error, UM_REALM_ERROR, UM_REALM_ERROR_BAD_LOGIN)) {
-                g_debug ("Problem with the user's login: %s", error->message);
-                set_entry_validation_error (self->enterprise_login, error->message);
-                finish_action (self);
-                gtk_widget_grab_focus (GTK_WIDGET (self->enterprise_login));
-
-        } else if (g_error_matches (error, UM_REALM_ERROR, UM_REALM_ERROR_BAD_PASSWORD)) {
-                g_debug ("Problem with the user's password: %s", error->message);
-                set_entry_validation_error (self->enterprise_password, error->message);
-                finish_action (self);
-                gtk_widget_grab_focus (GTK_WIDGET (self->enterprise_password));
-
-        /* Other login failure */
-        } else {
-                g_dbus_error_strip_remote_error (error);
-                show_error_dialog (self, _("Failed to log into domain"), error);
-                g_message ("Couldn't log in as user: %s", error->message);
-                finish_action (self);
-        }
-
-        g_clear_error (&error);
-        g_object_unref (self);
-}
-
-static void
-enterprise_check_login (UmAccountDialog *self)
-{
-        g_assert (self->selected_realm);
-
-        um_realm_login (self->selected_realm,
-                        gtk_entry_get_text (self->enterprise_login),
-                        gtk_entry_get_text (self->enterprise_password),
-                        self->cancellable,
-                        on_realm_login,
-                        g_object_ref (self));
-}
-
-static void
-on_realm_discover_input (GObject *source,
-                         GAsyncResult *result,
-                         gpointer user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-        GError *error = NULL;
-        GList *realms;
-
-        realms = um_realm_manager_discover_finish (self->realm_manager,
-                                                   result, &error);
-
-        /* Found a realm, log user into domain */
-        if (error == NULL) {
-                g_assert (realms != NULL);
-                self->selected_realm = g_object_ref (realms->data);
-                enterprise_check_login (self);
-                g_list_free_full (realms, g_object_unref);
-
-        /* The domain is likely invalid*/
-        } else {
-                finish_action (self);
-                g_message ("Couldn't discover domain: %s", error->message);
-                gtk_widget_grab_focus (GTK_WIDGET (self->enterprise_domain_entry));
-                g_dbus_error_strip_remote_error (error);
-                set_entry_validation_error (self->enterprise_domain_entry,
-                                            error->message);
-                g_error_free (error);
-        }
-
-        g_object_unref (self);
-}
-
-static void
-enterprise_add_user (UmAccountDialog *self)
-{
-        GtkTreeIter iter;
-
-        begin_action (self);
-
-        g_clear_object (&self->selected_realm);
-        self->join_prompted = FALSE;
-
-        /* Already know about this realm, try to login as user */
-        if (gtk_combo_box_get_active_iter (self->enterprise_domain, &iter)) {
-                gtk_tree_model_get (gtk_combo_box_get_model (self->enterprise_domain),
-                                    &iter, 1, &self->selected_realm, -1);
-                enterprise_check_login (self);
-
-        /* Something the user typed, we need to discover realm */
-        } else {
-                um_realm_manager_discover (self->realm_manager,
-                                           gtk_entry_get_text (self->enterprise_domain_entry),
-                                           self->cancellable,
-                                           on_realm_discover_input,
-                                           g_object_ref (self));
-        }
-}
-
-static void
-on_realm_manager_created (GObject *source,
-                           GAsyncResult *result,
-                           gpointer user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-        GError *error = NULL;
-        GList *realms, *l;
-
-        g_clear_object (&self->realm_manager);
-
-        self->realm_manager = um_realm_manager_new_finish (result, &error);
-        if (error != NULL) {
-                g_warning ("Couldn't contact realmd service: %s", error->message);
-                g_error_free (error);
-                return;
-        }
-
-        /* Lookup all the realm objects */
-        realms = um_realm_manager_get_realms (self->realm_manager);
-        for (l = realms; l != NULL; l = g_list_next (l))
-                enterprise_add_realm (self, l->data);
-        g_list_free (realms);
-        g_signal_connect (self->realm_manager, "realm-added",
-                          G_CALLBACK (on_manager_realm_added), self);
-
-        /* When no realms try to discover a sensible default, triggers realm-added signal */
-        um_realm_manager_discover (self->realm_manager, "", self->cancellable,
-                                   NULL, NULL);
-
-        /* Show the 'Enterprise Login' stuff, and update mode */
-        gtk_widget_show (self->enterprise_button);
-        mode_change (self, self->mode);
-}
-
-static void
-on_realmd_appeared (GDBusConnection *connection,
-                    const gchar *name,
-                    const gchar *name_owner,
-                    gpointer user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-        um_realm_manager_new (self->cancellable, on_realm_manager_created, self);
-}
-
-static void
-on_realmd_disappeared (GDBusConnection *unused1,
-                       const gchar *unused2,
-                       gpointer user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-
-        if (self->realm_manager) {
-                g_signal_handlers_disconnect_by_func (self->realm_manager,
-                                                      on_manager_realm_added,
-                                                      self);
-                g_object_unref (self->realm_manager);
-                self->realm_manager = NULL;
-        }
-
-        gtk_list_store_clear (self->enterprise_realms);
-        gtk_widget_hide (self->enterprise_button);
-        mode_change (self, UM_LOCAL);
-}
-
-static void
-on_domain_changed (GtkComboBox *widget,
-                   gpointer user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-
-        dialog_validate (self);
-        self->enterprise_domain_chosen = TRUE;
-        clear_entry_validation_error (self->enterprise_domain_entry);
-}
-
-static void
-on_entry_changed (GtkEditable *editable,
-                  gpointer user_data)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-        dialog_validate (self);
-        clear_entry_validation_error (GTK_ENTRY (editable));
-}
-
-static void
-enterprise_init (UmAccountDialog *self,
-                 GtkBuilder *builder)
-{
-        GtkWidget *widget;
-
-        self->enterprise_realms = gtk_list_store_new (2, G_TYPE_STRING, G_TYPE_OBJECT);
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "enterprise-domain");
-        g_signal_connect (widget, "changed", G_CALLBACK (on_domain_changed), self);
-        self->enterprise_domain = GTK_COMBO_BOX (widget);
-        gtk_combo_box_set_model (self->enterprise_domain,
-                                 GTK_TREE_MODEL (self->enterprise_realms));
-        gtk_combo_box_set_entry_text_column (self->enterprise_domain, 0);
-        self->enterprise_domain_entry = GTK_ENTRY (gtk_bin_get_child (GTK_BIN (widget)));
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "enterprise-login");
-        g_signal_connect (widget, "changed", G_CALLBACK (on_entry_changed), self);
-        self->enterprise_login = GTK_ENTRY (widget);
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "enterprise-password");
-        g_signal_connect (widget, "changed", G_CALLBACK (on_entry_changed), self);
-        self->enterprise_password = GTK_ENTRY (widget);
-
-        /* Initially we hide the 'Enterprise Login' stuff */
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "enterprise-button");
-        self->enterprise_button = widget;
-        gtk_widget_hide (widget);
-
-        self->realmd_watch = g_bus_watch_name (G_BUS_TYPE_SYSTEM, "org.freedesktop.realmd",
-                                               G_BUS_NAME_WATCHER_FLAGS_AUTO_START,
-                                               on_realmd_appeared, on_realmd_disappeared,
-                                               self, NULL);
-}
-
-static void
-enterprise_prepare (UmAccountDialog *self)
-{
-        gtk_entry_set_text (GTK_ENTRY (self->enterprise_login), "");
-        gtk_entry_set_text (GTK_ENTRY (self->enterprise_password), "");
-}
-
-static void
-dialog_validate (UmAccountDialog *self)
-{
-        gboolean valid = FALSE;
-
-        switch (self->mode) {
-        case UM_LOCAL:
-                valid = local_validate (self);
-                break;
-        case UM_ENTERPRISE:
-                valid = enterprise_validate (self);
-                break;
-        default:
-                valid = FALSE;
-                break;
-        }
-
-        gtk_dialog_set_response_sensitive (GTK_DIALOG (self), GTK_RESPONSE_OK, valid);
-}
-
-static void
-label_set_bold (GtkLabel *label,
-                gboolean  bold)
-{
-        PangoAttrList *attrs;
-        PangoAttribute *attr;
-
-        attrs = pango_attr_list_new ();
-        attr = pango_attr_weight_new (bold ? PANGO_WEIGHT_BOLD : PANGO_WEIGHT_NORMAL);
-        pango_attr_list_insert (attrs, attr);
-        gtk_label_set_attributes (label, attrs);
-        pango_attr_list_unref (attrs);
-}
-
-
-static void
-mode_change (UmAccountDialog *self,
-             UmAccountMode mode)
-{
-        GtkWidget *button;
-        gint visible_count = 0;
-        gboolean active;
-        gint i;
-
-        g_assert (!self->mode_updating);
-        self->mode_updating = TRUE;
-
-        for (i = 0; i < NUM_MODES; i++) {
-                button = self->mode_buttons[i];
-                active = (i == (gint)mode);
-
-                /* The toggle state */
-                if (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (button)) != active)
-                        gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (button), active);
-
-                /* Make toggled buttons bold */
-                label_set_bold (GTK_LABEL (gtk_bin_get_child (GTK_BIN (button))), active);
-
-                /* Show the correct area */
-                gtk_widget_set_visible (GTK_WIDGET (self->mode_areas[i]), active);
-
-                if (gtk_widget_get_visible (button))
-                        visible_count++;
-        }
-
-        /* Show mode container if more than one visible */
-        gtk_widget_set_visible (GTK_WIDGET (self->mode_container), visible_count > 1);
-
-        self->mode = mode;
-        self->mode_updating = FALSE;
-        dialog_validate (self);
-}
-
-static void
-mode_toggled (UmAccountDialog *self,
-              GtkToggleButton *toggle,
-              UmAccountMode mode)
-{
-        if (self->mode_updating)
-                return;
-
-        /* Undo the toggle if already pressed */
-        if (!gtk_toggle_button_get_active (toggle))
-                gtk_toggle_button_set_active (toggle, TRUE);
-
-        /* Otherwise update mode */
-        else
-                mode_change (self, mode);
-}
-
-static void
-on_local_toggle (GtkToggleButton *toggle,
-                 gpointer user_data)
-{
-        mode_toggled (UM_ACCOUNT_DIALOG (user_data), toggle, UM_LOCAL);
-}
-
-static void
-on_enterprise_toggle (GtkToggleButton *toggle,
-                      gpointer user_data)
-{
-        mode_toggled (UM_ACCOUNT_DIALOG (user_data), toggle, UM_ENTERPRISE);
-}
-
-static void
-mode_init (UmAccountDialog *self,
-           GtkBuilder *builder)
-{
-        GtkWidget *widget;
-
-        self->mode_container = (GtkWidget *) gtk_builder_get_object (builder, "account-mode");
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "local-area");
-        self->mode_areas[UM_LOCAL] = widget;
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "enterprise-area");
-        self->mode_areas[UM_ENTERPRISE] = widget;
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "local-button");
-        g_signal_connect (widget, "toggled", G_CALLBACK (on_local_toggle), self);
-        self->mode_buttons[UM_LOCAL] = widget;
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "enterprise-button");
-        g_signal_connect (widget, "toggled", G_CALLBACK (on_enterprise_toggle), self);
-        self->mode_buttons[UM_ENTERPRISE] = widget;
-}
-
-static void
-um_account_dialog_init (UmAccountDialog *self)
-{
-        GtkBuilder *builder;
-        GtkWidget *widget;
-        GError *error = NULL;
-        GtkDialog *dialog;
-        GtkWidget *content;
-        GtkWidget *actions;
-        GtkWidget *box;
-
-        builder = gtk_builder_new ();
-
-        if (!gtk_builder_add_from_resource (builder,
-                                            "/org/gnome/control-center/user-accounts/account-dialog.ui",
-                                            &error)) {
-                g_error ("%s", error->message);
-                g_error_free (error);
-                return;
-        }
-
-        dialog = GTK_DIALOG (self);
-        actions = gtk_dialog_get_action_area (dialog);
-        content = gtk_dialog_get_content_area (dialog);
-        gtk_container_set_border_width (GTK_CONTAINER (dialog), 5);
-        gtk_window_set_resizable (GTK_WINDOW (dialog), FALSE);
-        gtk_window_set_title (GTK_WINDOW (dialog), " ");
-        gtk_window_set_icon_name (GTK_WINDOW (dialog), "system-users");
-
-        /* Rearrange the bottom of dialog, so we can have spinner on left */
-        g_object_ref (actions);
-        box = gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 10);
-        gtk_container_remove (GTK_CONTAINER (content), actions);
-        gtk_box_pack_end (GTK_BOX (box), actions, FALSE, TRUE, 0);
-        gtk_box_pack_end (GTK_BOX (content), box, TRUE, TRUE, 0);
-        gtk_widget_show (box);
-        g_object_unref (actions);
-
-        /* Create the spinner, but don't show it yet */
-        self->spinner = GTK_SPINNER (gtk_spinner_new ());
-        widget = gtk_alignment_new (0.5, 0.5, 1.0, 1.0);
-        gtk_alignment_set_padding (GTK_ALIGNMENT (widget), 0, 0, 12, 6);
-        gtk_box_pack_start (GTK_BOX (box), widget, FALSE, FALSE, 0);
-        gtk_container_add (GTK_CONTAINER (widget), GTK_WIDGET (self->spinner));
-        gtk_widget_show (widget);
-
-        gtk_dialog_add_button (dialog, _("Cancel"), GTK_RESPONSE_CANCEL);
-        widget = gtk_dialog_add_button (dialog, _("_Add"), GTK_RESPONSE_OK);
-        gtk_dialog_set_default_response (dialog, GTK_RESPONSE_OK);
-        gtk_widget_grab_default (widget);
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "account-dialog");
-        gtk_container_add (GTK_CONTAINER (content), widget);
-        self->container_widget = widget;
-
-        local_init (self, builder);
-        enterprise_init (self, builder);
-        join_init (self, builder);
-        mode_init (self, builder);
-
-        g_object_unref (builder);
-}
-
-static void
-on_permission_acquired (GObject *source_object,
-                        GAsyncResult *res,
-                        gpointer user_data)
-{
-	UmAccountDialog *self = UM_ACCOUNT_DIALOG (user_data);
-	GError *error = NULL;
-
-	/* Paired with begin_action in um_account_dialog_response () */
-	finish_action (self);
-
-	if (g_permission_acquire_finish (self->permission, res, &error)) {
-		g_return_if_fail (g_permission_get_allowed (self->permission));
-		um_account_dialog_response (GTK_DIALOG (self), GTK_RESPONSE_OK);
-	} else if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED)) {
-		g_warning ("Failed to acquire permission: %s", error->message);
-	}
-
-	g_clear_error (&error);
-	g_object_unref (self);
-}
-
-static void
-um_account_dialog_response (GtkDialog *dialog,
-                            gint response_id)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (dialog);
-
-        switch (response_id) {
-        case GTK_RESPONSE_OK:
-                /* We don't (or no longer) have necessary permissions */
-                if (self->permission && !g_permission_get_allowed (self->permission)) {
-                        begin_action (self);
-                        g_permission_acquire_async (self->permission, self->cancellable,
-                                                    on_permission_acquired, g_object_ref (self));
-                        return;
-                }
-
-                switch (self->mode) {
-                case UM_LOCAL:
-                        local_create_user (self);
-                        break;
-                case UM_ENTERPRISE:
-                        enterprise_add_user (self);
-                        break;
-                default:
-                        g_assert_not_reached ();
-                }
-                break;
-        case GTK_RESPONSE_CANCEL:
-        case GTK_RESPONSE_DELETE_EVENT:
-                g_cancellable_cancel (self->cancellable);
-                complete_dialog (self, NULL);
-                break;
-        }
-}
-
-static void
-um_account_dialog_dispose (GObject *obj)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (obj);
-
-        if (self->cancellable)
-                g_cancellable_cancel (self->cancellable);
-
-        if (self->realmd_watch)
-                g_bus_unwatch_name (self->realmd_watch);
-        self->realmd_watch = 0;
-
-        if (self->realm_manager) {
-                g_signal_handlers_disconnect_by_func (self->realm_manager,
-                                                      on_manager_realm_added,
-                                                      self);
-                g_object_unref (self->realm_manager);
-                self->realm_manager = NULL;
-        }
-
-        g_clear_pointer (&self->join_dialog, gtk_widget_destroy);
-
-        G_OBJECT_CLASS (um_account_dialog_parent_class)->dispose (obj);
-}
-
-static void
-um_account_dialog_finalize (GObject *obj)
-{
-        UmAccountDialog *self = UM_ACCOUNT_DIALOG (obj);
-
-        if (self->cancellable)
-                g_object_unref (self->cancellable);
-        g_clear_object (&self->permission);
-        g_object_unref (self->enterprise_realms);
-
-        G_OBJECT_CLASS (um_account_dialog_parent_class)->finalize (obj);
-}
-
-static void
-um_account_dialog_class_init (UmAccountDialogClass *klass)
-{
-        GObjectClass *object_class = G_OBJECT_CLASS (klass);
-        GtkDialogClass *dialog_class = GTK_DIALOG_CLASS (klass);
-
-        object_class->dispose = um_account_dialog_dispose;
-        object_class->finalize = um_account_dialog_finalize;
-
-        dialog_class->response = um_account_dialog_response;
-}
-
-UmAccountDialog *
-um_account_dialog_new (void)
-{
-        return g_object_new (UM_TYPE_ACCOUNT_DIALOG, NULL);
-}
-
-void
-um_account_dialog_show (UmAccountDialog     *self,
-                        GtkWindow           *parent,
-                        GPermission         *permission,
-                        GAsyncReadyCallback  callback,
-                        gpointer             user_data)
-{
-        g_return_if_fail (UM_IS_ACCOUNT_DIALOG (self));
-
-        /* Make sure not already doing an operation */
-        g_return_if_fail (self->async == NULL);
-
-        self->async = g_simple_async_result_new (G_OBJECT (self), callback, user_data,
-                                                 um_account_dialog_show);
-
-        if (self->cancellable)
-                g_object_unref (self->cancellable);
-        self->cancellable = g_cancellable_new ();
-
-        g_clear_object (&self->permission);
-        self->permission = permission ? g_object_ref (permission) : NULL;
-
-        local_prepare (self);
-        enterprise_prepare (self);
-        mode_change (self, UM_LOCAL);
-        dialog_validate (self);
-
-        gtk_window_set_modal (GTK_WINDOW (self), parent != NULL);
-        gtk_window_set_transient_for (GTK_WINDOW (self), parent);
-        gtk_window_present (GTK_WINDOW (self));
-        gtk_widget_grab_focus (self->local_name);
-}
-
-ActUser *
-um_account_dialog_finish (UmAccountDialog     *self,
-                          GAsyncResult        *result)
-{
-        ActUser *user;
-
-        g_return_val_if_fail (UM_IS_ACCOUNT_DIALOG (self), NULL);
-        g_return_val_if_fail (g_simple_async_result_is_valid (result, G_OBJECT (self),
-                              um_account_dialog_show), NULL);
-        g_return_val_if_fail (result == G_ASYNC_RESULT (self->async), NULL);
-
-        user = g_simple_async_result_get_op_res_gpointer (self->async);
-        if (user != NULL)
-                g_object_ref (user);
-
-        g_clear_object (&self->async);
-        return user;
-}
diff --git a/panels/user-accounts/um-account-dialog.h b/panels/user-accounts/um-account-dialog.h
deleted file mode 100644
index c69df2d..0000000
--- a/panels/user-accounts/um-account-dialog.h
+++ /dev/null
@@ -1,49 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#ifndef __UM_ACCOUNT_DIALOG_H__
-#define __UM_ACCOUNT_DIALOG_H__
-
-#include <act/act.h>
-#include <gtk/gtk.h>
-
-G_BEGIN_DECLS
-
-#define UM_TYPE_ACCOUNT_DIALOG      (um_account_dialog_get_type ())
-#define UM_ACCOUNT_DIALOG(obj)      (G_TYPE_CHECK_INSTANCE_CAST ((obj), UM_TYPE_ACCOUNT_DIALOG, UmAccountDialog))
-#define UM_IS_ACCOUNT_DIALOG(obj)   (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UM_TYPE_ACCOUNT_DIALOG))
-
-typedef struct _UmAccountDialog UmAccountDialog;
-typedef struct _UmAccountDialogClass UmAccountDialogClass;
-
-GType            um_account_dialog_get_type (void) G_GNUC_CONST;
-UmAccountDialog *um_account_dialog_new      (void);
-void             um_account_dialog_show     (UmAccountDialog     *self,
-                                             GtkWindow           *parent,
-                                             GPermission         *permission,
-                                             GAsyncReadyCallback  callback,
-                                             gpointer             user_data);
-ActUser *        um_account_dialog_finish   (UmAccountDialog     *self,
-                                             GAsyncResult        *result);
-
-G_END_DECLS
-
-#endif
diff --git a/panels/user-accounts/um-account-type.c b/panels/user-accounts/um-account-type.c
deleted file mode 100644
index 86e5934..0000000
--- a/panels/user-accounts/um-account-type.c
+++ /dev/null
@@ -1,41 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#include "config.h"
-
-#include <glib.h>
-#include <glib/gi18n.h>
-#include <glib-object.h>
-
-#include "um-account-type.h"
-
-const gchar *
-um_account_type_get_name (UmAccountType account_type)
-{
-        switch (account_type) {
-        case UM_ACCOUNT_TYPE_STANDARD:
-                return C_("Account type", "Standard");
-        case UM_ACCOUNT_TYPE_ADMINISTRATOR:
-                return C_("Account type", "Administrator");
-        default:
-                g_assert_not_reached ();
-        }
-}
diff --git a/panels/user-accounts/um-account-type.h b/panels/user-accounts/um-account-type.h
deleted file mode 100644
index f1fdd8c..0000000
--- a/panels/user-accounts/um-account-type.h
+++ /dev/null
@@ -1,36 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#ifndef __UM_ACCOUNT_TYPE__
-#define __UM_ACCOUNT_TYPE__
-
-G_BEGIN_DECLS
-
-typedef enum {
-  UM_ACCOUNT_TYPE_STANDARD,
-  UM_ACCOUNT_TYPE_ADMINISTRATOR
-} UmAccountType;
-
-const gchar *um_account_type_get_name (UmAccountType account_type);
-
-G_END_DECLS
-
-#endif
diff --git a/panels/user-accounts/um-crop-area.c b/panels/user-accounts/um-crop-area.c
deleted file mode 100644
index de7e277..0000000
--- a/panels/user-accounts/um-crop-area.c
+++ /dev/null
@@ -1,818 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#include "config.h"
-
-#include <stdlib.h>
-
-#include <glib.h>
-#include <glib/gi18n.h>
-#include <gtk/gtk.h>
-
-#include "um-crop-area.h"
-
-struct _UmCropAreaPrivate {
-        GdkPixbuf *browse_pixbuf;
-        GdkPixbuf *pixbuf;
-        GdkPixbuf *color_shifted;
-        gdouble scale;
-        GdkRectangle image;
-        GdkCursorType current_cursor;
-        GdkRectangle crop;
-        gint active_region;
-        gint last_press_x;
-        gint last_press_y;
-        gint base_width;
-        gint base_height;
-        gdouble aspect;
-};
-
-G_DEFINE_TYPE (UmCropArea, um_crop_area, GTK_TYPE_DRAWING_AREA);
-
-static inline guchar
-shift_color_byte (guchar b,
-                  int    shift)
-{
-        return CLAMP(b + shift, 0, 255);
-}
-
-static void
-shift_colors (GdkPixbuf *pixbuf,
-              gint       red,
-              gint       green,
-              gint       blue,
-              gint       alpha)
-{
-        gint x, y, offset, y_offset, rowstride, width, height;
-        guchar *pixels;
-        gint channels;
-
-        width = gdk_pixbuf_get_width (pixbuf);
-        height = gdk_pixbuf_get_height (pixbuf);
-        rowstride = gdk_pixbuf_get_rowstride (pixbuf);
-        pixels = gdk_pixbuf_get_pixels (pixbuf);
-        channels = gdk_pixbuf_get_n_channels (pixbuf);
-
-        for (y = 0; y < height; y++) {
-                y_offset = y * rowstride;
-                for (x = 0; x < width; x++) {
-                        offset = y_offset + x * channels;
-                        if (red != 0)
-                                pixels[offset] = shift_color_byte (pixels[offset], red);
-                        if (green != 0)
-                                pixels[offset + 1] = shift_color_byte (pixels[offset + 1], green);
-                        if (blue != 0)
-                                pixels[offset + 2] = shift_color_byte (pixels[offset + 2], blue);
-                        if (alpha != 0 && channels >= 4)
-                                pixels[offset + 3] = shift_color_byte (pixels[offset + 3], blue);
-                }
-        }
-}
-
-static void
-update_pixbufs (UmCropArea *area)
-{
-        gint width;
-        gint height;
-        GtkAllocation allocation;
-        gdouble scale;
-        GdkRGBA color;
-        guint32 pixel;
-        gint dest_x, dest_y, dest_width, dest_height;
-        GtkWidget *widget;
-        GtkStyleContext *context;
-
-        widget = GTK_WIDGET (area);
-        gtk_widget_get_allocation (widget, &allocation);
-        context = gtk_widget_get_style_context (widget);
-
-        if (area->priv->pixbuf == NULL ||
-            gdk_pixbuf_get_width (area->priv->pixbuf) != allocation.width ||
-            gdk_pixbuf_get_height (area->priv->pixbuf) != allocation.height) {
-                if (area->priv->pixbuf != NULL)
-                        g_object_unref (area->priv->pixbuf);
-                area->priv->pixbuf = gdk_pixbuf_new (GDK_COLORSPACE_RGB,
-                                                     gdk_pixbuf_get_has_alpha (area->priv->browse_pixbuf),
-                                                     8,
-                                                     allocation.width, allocation.height);
-
-                gtk_style_context_get_background_color (context, gtk_style_context_get_state (context), &color);
-                pixel = (((gint)(color.red * 1.0)) << 16) |
-                        (((gint)(color.green * 1.0)) << 8) |
-                         ((gint)(color.blue * 1.0));
-                gdk_pixbuf_fill (area->priv->pixbuf, pixel);
-
-                width = gdk_pixbuf_get_width (area->priv->browse_pixbuf);
-                height = gdk_pixbuf_get_height (area->priv->browse_pixbuf);
-
-                scale = allocation.height / (gdouble)height;
-                if (scale * width > allocation.width)
-                    scale = allocation.width / (gdouble)width;
-
-                dest_width = width * scale;
-                dest_height = height * scale;
-                dest_x = (allocation.width - dest_width) / 2;
-                dest_y = (allocation.height - dest_height) / 2,
-
-                gdk_pixbuf_scale (area->priv->browse_pixbuf,
-                                  area->priv->pixbuf,
-                                  dest_x, dest_y,
-                                  dest_width, dest_height,
-                                  dest_x, dest_y,
-                                  scale, scale,
-                                  GDK_INTERP_BILINEAR);
-
-                if (area->priv->color_shifted)
-                        g_object_unref (area->priv->color_shifted);
-                area->priv->color_shifted = gdk_pixbuf_copy (area->priv->pixbuf);
-                shift_colors (area->priv->color_shifted, -32, -32, -32, 0);
-
-                if (area->priv->scale == 0.0) {
-                        area->priv->crop.width = 2 * area->priv->base_width / scale;
-                        area->priv->crop.height = 2 * area->priv->base_height / scale;
-                        area->priv->crop.x = (gdk_pixbuf_get_width (area->priv->browse_pixbuf) - area->priv->crop.width) / 2;
-                        area->priv->crop.y = (gdk_pixbuf_get_height (area->priv->browse_pixbuf) - area->priv->crop.height) / 2;
-                }
-
-                area->priv->scale = scale;
-                area->priv->image.x = dest_x;
-                area->priv->image.y = dest_y;
-                area->priv->image.width = dest_width;
-                area->priv->image.height = dest_height;
-        }
-}
-
-static void
-crop_to_widget (UmCropArea    *area,
-                GdkRectangle  *crop)
-{
-        crop->x = area->priv->image.x + area->priv->crop.x * area->priv->scale;
-        crop->y = area->priv->image.y + area->priv->crop.y * area->priv->scale;
-        crop->width = area->priv->crop.width * area->priv->scale;
-        crop->height = area->priv->crop.height * area->priv->scale;
-}
-
-typedef enum {
-        OUTSIDE,
-        INSIDE,
-        TOP,
-        TOP_LEFT,
-        TOP_RIGHT,
-        BOTTOM,
-        BOTTOM_LEFT,
-        BOTTOM_RIGHT,
-        LEFT,
-        RIGHT
-} Location;
-
-static gboolean
-um_crop_area_draw (GtkWidget *widget,
-                   cairo_t   *cr)
-{
-        GdkRectangle crop;
-        gint width, height;
-        UmCropArea *uarea = UM_CROP_AREA (widget);
-
-        if (uarea->priv->browse_pixbuf == NULL)
-                return FALSE;
-
-        update_pixbufs (uarea);
-
-        width = gdk_pixbuf_get_width (uarea->priv->pixbuf);
-        height = gdk_pixbuf_get_height (uarea->priv->pixbuf);
-        crop_to_widget (uarea, &crop);
-
-        gdk_cairo_set_source_pixbuf (cr, uarea->priv->color_shifted, 0, 0);
-        cairo_rectangle (cr, 0, 0, width, crop.y);
-        cairo_rectangle (cr, 0, crop.y, crop.x, crop.height);
-        cairo_rectangle (cr, crop.x + crop.width, crop.y, width - crop.x - crop.width, crop.height);
-        cairo_rectangle (cr, 0, crop.y + crop.height, width, height - crop.y - crop.height);
-        cairo_fill (cr);
-
-        gdk_cairo_set_source_pixbuf (cr, uarea->priv->pixbuf, 0, 0);
-        cairo_rectangle (cr, crop.x, crop.y, crop.width, crop.height);
-        cairo_fill (cr);
-
-        if (uarea->priv->active_region != OUTSIDE) {
-                gint x1, x2, y1, y2;
-                cairo_set_source_rgb (cr, 1, 1, 1);
-                cairo_set_line_width (cr, 1.0);
-                x1 = crop.x + crop.width / 3.0;
-                x2 = crop.x + 2 * crop.width / 3.0;
-                y1 = crop.y + crop.height / 3.0;
-                y2 = crop.y + 2 * crop.height / 3.0;
-
-                cairo_move_to (cr, x1 + 0.5, crop.y);
-                cairo_line_to (cr, x1 + 0.5, crop.y + crop.height);
-
-                cairo_move_to (cr, x2 + 0.5, crop.y);
-                cairo_line_to (cr, x2 + 0.5, crop.y + crop.height);
-
-                cairo_move_to (cr, crop.x, y1 + 0.5);
-                cairo_line_to (cr, crop.x + crop.width, y1 + 0.5);
-
-                cairo_move_to (cr, crop.x, y2 + 0.5);
-                cairo_line_to (cr, crop.x + crop.width, y2 + 0.5);
-                cairo_stroke (cr);
-        }
-
-        cairo_set_source_rgb (cr,  0, 0, 0);
-        cairo_set_line_width (cr, 1.0);
-        cairo_rectangle (cr,
-                         crop.x + 0.5,
-                         crop.y + 0.5,
-                         crop.width - 1.0,
-                         crop.height - 1.0);
-        cairo_stroke (cr);
-
-        cairo_set_source_rgb (cr, 1, 1, 1);
-        cairo_set_line_width (cr, 2.0);
-        cairo_rectangle (cr,
-                         crop.x + 2.0,
-                         crop.y + 2.0,
-                         crop.width - 4.0,
-                         crop.height - 4.0);
-        cairo_stroke (cr);
-
-        return FALSE;
-}
-
-typedef enum {
-        BELOW,
-        LOWER,
-        BETWEEN,
-        UPPER,
-        ABOVE
-} Range;
-
-static Range
-find_range (gint x,
-            gint min,
-            gint max)
-{
-        gint tolerance = 12;
-
-        if (x < min - tolerance)
-                return BELOW;
-        if (x <= min + tolerance)
-                return LOWER;
-        if (x < max - tolerance)
-                return BETWEEN;
-        if (x <= max + tolerance)
-                return UPPER;
-        return ABOVE;
-}
-
-static Location
-find_location (GdkRectangle *rect,
-               gint          x,
-               gint          y)
-{
-        Range x_range, y_range;
-        Location location[5][5] = {
-                { OUTSIDE, OUTSIDE,     OUTSIDE, OUTSIDE,      OUTSIDE },
-                { OUTSIDE, TOP_LEFT,    TOP,     TOP_RIGHT,    OUTSIDE },
-                { OUTSIDE, LEFT,        INSIDE,  RIGHT,        OUTSIDE },
-                { OUTSIDE, BOTTOM_LEFT, BOTTOM,  BOTTOM_RIGHT, OUTSIDE },
-                { OUTSIDE, OUTSIDE,     OUTSIDE, OUTSIDE,      OUTSIDE }
-        };
-
-        x_range = find_range (x, rect->x, rect->x + rect->width);
-        y_range = find_range (y, rect->y, rect->y + rect->height);
-
-        return location[y_range][x_range];
-}
-
-static void
-update_cursor (UmCropArea *area,
-               gint           x,
-               gint           y)
-{
-        gint cursor_type;
-        GdkRectangle crop;
-        gint region;
-
-        region = area->priv->active_region;
-        if (region == OUTSIDE) {
-                crop_to_widget (area, &crop);
-                region = find_location (&crop, x, y);
-        }
-
-        switch (region) {
-        case OUTSIDE:
-                cursor_type = GDK_LEFT_PTR;
-                break;
-        case TOP_LEFT:
-                cursor_type = GDK_TOP_LEFT_CORNER;
-                break;
-        case TOP:
-                cursor_type = GDK_TOP_SIDE;
-                break;
-        case TOP_RIGHT:
-                cursor_type = GDK_TOP_RIGHT_CORNER;
-                break;
-        case LEFT:
-                cursor_type = GDK_LEFT_SIDE;
-                break;
-        case INSIDE:
-                cursor_type = GDK_FLEUR;
-                break;
-        case RIGHT:
-                cursor_type = GDK_RIGHT_SIDE;
-                break;
-        case BOTTOM_LEFT:
-                cursor_type = GDK_BOTTOM_LEFT_CORNER;
-                break;
-        case BOTTOM:
-                cursor_type = GDK_BOTTOM_SIDE;
-                break;
-        case BOTTOM_RIGHT:
-                cursor_type = GDK_BOTTOM_RIGHT_CORNER;
-                break;
-	default:
-		g_assert_not_reached ();
-        }
-
-        if (cursor_type != area->priv->current_cursor) {
-                GdkCursor *cursor = gdk_cursor_new (cursor_type);
-                gdk_window_set_cursor (gtk_widget_get_window (GTK_WIDGET (area)), cursor);
-                g_object_unref (cursor);
-                area->priv->current_cursor = cursor_type;
-        }
-}
-
-static int
-eval_radial_line (gdouble center_x, gdouble center_y,
-                  gdouble bounds_x, gdouble bounds_y,
-                  gdouble user_x)
-{
-        gdouble decision_slope;
-        gdouble decision_intercept;
-
-        decision_slope = (bounds_y - center_y) / (bounds_x - center_x);
-        decision_intercept = -(decision_slope * bounds_x);
-
-        return (int) (decision_slope * user_x + decision_intercept);
-}
-
-static gboolean
-um_crop_area_motion_notify_event (GtkWidget      *widget,
-                                  GdkEventMotion *event)
-{
-        UmCropArea *area = UM_CROP_AREA (widget);
-        gint x, y;
-        gint delta_x, delta_y;
-        gint width, height;
-        gint adj_width, adj_height;
-        gint pb_width, pb_height;
-        GdkRectangle damage;
-        gint left, right, top, bottom;
-        gdouble new_width, new_height;
-        gdouble center_x, center_y;
-        gint min_width, min_height;
-
-        if (area->priv->browse_pixbuf == NULL)
-                return FALSE;
-
-        update_cursor (area, event->x, event->y);
-
-        crop_to_widget (area, &damage);
-        gtk_widget_queue_draw_area (widget,
-                                    damage.x - 1, damage.y - 1,
-                                    damage.width + 2, damage.height + 2);
-
-        pb_width = gdk_pixbuf_get_width (area->priv->browse_pixbuf);
-        pb_height = gdk_pixbuf_get_height (area->priv->browse_pixbuf);
-
-        x = (event->x - area->priv->image.x) / area->priv->scale;
-        y = (event->y - area->priv->image.y) / area->priv->scale;
-
-        delta_x = x - area->priv->last_press_x;
-        delta_y = y - area->priv->last_press_y;
-        area->priv->last_press_x = x;
-        area->priv->last_press_y = y;
-
-        left = area->priv->crop.x;
-        right = area->priv->crop.x + area->priv->crop.width - 1;
-        top = area->priv->crop.y;
-        bottom = area->priv->crop.y + area->priv->crop.height - 1;
-
-        center_x = (left + right) / 2.0;
-        center_y = (top + bottom) / 2.0;
-
-        switch (area->priv->active_region) {
-        case INSIDE:
-                width = right - left + 1;
-                height = bottom - top + 1;
-
-                left += delta_x;
-                right += delta_x;
-                top += delta_y;
-                bottom += delta_y;
-
-                if (left < 0)
-                        left = 0;
-                if (top < 0)
-                        top = 0;
-                if (right > pb_width)
-                        right = pb_width;
-                if (bottom > pb_height)
-                        bottom = pb_height;
-
-                adj_width = right - left + 1;
-                adj_height = bottom - top + 1;
-                if (adj_width != width) {
-                        if (delta_x < 0)
-                                right = left + width - 1;
-                        else
-                                left = right - width + 1;
-                }
-                if (adj_height != height) {
-                        if (delta_y < 0)
-                                bottom = top + height - 1;
-                        else
-                                top = bottom - height + 1;
-                }
-
-                break;
-
-        case TOP_LEFT:
-                if (area->priv->aspect < 0) {
-                        top = y;
-                        left = x;
-                }
-                else if (y < eval_radial_line (center_x, center_y, left, top, x)) {
-                        top = y;
-                        new_width = (bottom - top) * area->priv->aspect;
-                        left = right - new_width;
-                }
-                else {
-                        left = x;
-                        new_height = (right - left) / area->priv->aspect;
-                        top = bottom - new_height;
-                }
-                break;
-
-        case TOP:
-                top = y;
-                if (area->priv->aspect > 0) {
-                        new_width = (bottom - top) * area->priv->aspect;
-                        right = left + new_width;
-                }
-                break;
-
-        case TOP_RIGHT:
-                if (area->priv->aspect < 0) {
-                        top = y;
-                        right = x;
-                }
-                else if (y < eval_radial_line (center_x, center_y, right, top, x)) {
-                        top = y;
-                        new_width = (bottom - top) * area->priv->aspect;
-                        right = left + new_width;
-                }
-                else {
-                        right = x;
-                        new_height = (right - left) / area->priv->aspect;
-                        top = bottom - new_height;
-                }
-                break;
-
-        case LEFT:
-                left = x;
-                if (area->priv->aspect > 0) {
-                        new_height = (right - left) / area->priv->aspect;
-                        bottom = top + new_height;
-                }
-                break;
-
-        case BOTTOM_LEFT:
-                if (area->priv->aspect < 0) {
-                        bottom = y;
-                        left = x;
-                }
-                else if (y < eval_radial_line (center_x, center_y, left, bottom, x)) {
-                        left = x;
-                        new_height = (right - left) / area->priv->aspect;
-                        bottom = top + new_height;
-                }
-                else {
-                        bottom = y;
-                        new_width = (bottom - top) * area->priv->aspect;
-                        left = right - new_width;
-                }
-                break;
-
-        case RIGHT:
-                right = x;
-                if (area->priv->aspect > 0) {
-                        new_height = (right - left) / area->priv->aspect;
-                        bottom = top + new_height;
-                }
-                break;
-
-        case BOTTOM_RIGHT:
-                if (area->priv->aspect < 0) {
-                        bottom = y;
-                        right = x;
-                }
-                else if (y < eval_radial_line (center_x, center_y, right, bottom, x)) {
-                        right = x;
-                        new_height = (right - left) / area->priv->aspect;
-                        bottom = top + new_height;
-                }
-                else {
-                        bottom = y;
-                        new_width = (bottom - top) * area->priv->aspect;
-                        right = left + new_width;
-                }
-                break;
-
-        case BOTTOM:
-                bottom = y;
-                if (area->priv->aspect > 0) {
-                        new_width = (bottom - top) * area->priv->aspect;
-                        right= left + new_width;
-                }
-                break;
-
-        default:
-                return FALSE;
-        }
-
-        min_width = area->priv->base_width / area->priv->scale;
-        min_height = area->priv->base_height / area->priv->scale;
-
-        width = right - left + 1;
-        height = bottom - top + 1;
-        if (area->priv->aspect < 0) {
-                if (left < 0)
-                        left = 0;
-                if (top < 0)
-                        top = 0;
-                if (right > pb_width)
-                        right = pb_width;
-                if (bottom > pb_height)
-                        bottom = pb_height;
-
-                width = right - left + 1;
-                height = bottom - top + 1;
-
-                switch (area->priv->active_region) {
-                case LEFT:
-                case TOP_LEFT:
-                case BOTTOM_LEFT:
-                        if (width < min_width)
-                                left = right - min_width;
-                        break;
-                case RIGHT:
-                case TOP_RIGHT:
-                case BOTTOM_RIGHT:
-                        if (width < min_width)
-                                right = left + min_width;
-                        break;
-
-                default: ;
-                }
-
-                switch (area->priv->active_region) {
-                case TOP:
-                case TOP_LEFT:
-                case TOP_RIGHT:
-                        if (height < min_height)
-                                top = bottom - min_height;
-                        break;
-                case BOTTOM:
-                case BOTTOM_LEFT:
-                case BOTTOM_RIGHT:
-                        if (height < min_height)
-                                bottom = top + min_height;
-                        break;
-
-                default: ;
-                }
-        }
-        else {
-                if (left < 0 || top < 0 ||
-                    right > pb_width || bottom > pb_height ||
-                    width < min_width || height < min_height) {
-                        left = area->priv->crop.x;
-                        right = area->priv->crop.x + area->priv->crop.width - 1;
-                        top = area->priv->crop.y;
-                        bottom = area->priv->crop.y + area->priv->crop.height - 1;
-                }
-        }
-
-        area->priv->crop.x = left;
-        area->priv->crop.y = top;
-        area->priv->crop.width = right - left + 1;
-        area->priv->crop.height = bottom - top + 1;
-
-        crop_to_widget (area, &damage);
-        gtk_widget_queue_draw_area (widget,
-                                    damage.x - 1, damage.y - 1,
-                                    damage.width + 2, damage.height + 2);
-
-        return FALSE;
-}
-
-static gboolean
-um_crop_area_button_press_event (GtkWidget      *widget,
-                                 GdkEventButton *event)
-{
-        UmCropArea *area = UM_CROP_AREA (widget);
-        GdkRectangle crop;
-
-        if (area->priv->browse_pixbuf == NULL)
-                return FALSE;
-
-        crop_to_widget (area, &crop);
-
-        area->priv->last_press_x = (event->x - area->priv->image.x) / area->priv->scale;
-        area->priv->last_press_y = (event->y - area->priv->image.y) / area->priv->scale;
-        area->priv->active_region = find_location (&crop, event->x, event->y);
-
-        gtk_widget_queue_draw_area (widget,
-                                    crop.x - 1, crop.y - 1,
-                                    crop.width + 2, crop.height + 2);
-
-        return FALSE;
-}
-
-static gboolean
-um_crop_area_button_release_event (GtkWidget      *widget,
-                                   GdkEventButton *event)
-{
-        UmCropArea *area = UM_CROP_AREA (widget);
-        GdkRectangle crop;
-
-        if (area->priv->browse_pixbuf == NULL)
-                return FALSE;
-
-        crop_to_widget (area, &crop);
-
-        area->priv->last_press_x = -1;
-        area->priv->last_press_y = -1;
-        area->priv->active_region = OUTSIDE;
-
-        gtk_widget_queue_draw_area (widget,
-                                    crop.x - 1, crop.y - 1,
-                                    crop.width + 2, crop.height + 2);
-
-        return FALSE;
-}
-
-static void
-um_crop_area_finalize (GObject *object)
-{
-        UmCropArea *area = UM_CROP_AREA (object);
-
-        if (area->priv->browse_pixbuf) {
-                g_object_unref (area->priv->browse_pixbuf);
-                area->priv->browse_pixbuf = NULL;
-        }
-        if (area->priv->pixbuf) {
-                g_object_unref (area->priv->pixbuf);
-                area->priv->pixbuf = NULL;
-        }
-        if (area->priv->color_shifted) {
-                g_object_unref (area->priv->color_shifted);
-                area->priv->color_shifted = NULL;
-        }
-}
-
-static void
-um_crop_area_class_init (UmCropAreaClass *klass)
-{
-        GObjectClass   *object_class = G_OBJECT_CLASS (klass);
-        GtkWidgetClass *widget_class = GTK_WIDGET_CLASS (klass);
-
-        object_class->finalize = um_crop_area_finalize;
-        widget_class->draw = um_crop_area_draw;
-        widget_class->button_press_event = um_crop_area_button_press_event;
-        widget_class->button_release_event = um_crop_area_button_release_event;
-        widget_class->motion_notify_event = um_crop_area_motion_notify_event;
-
-        g_type_class_add_private (klass, sizeof (UmCropAreaPrivate));
-}
-
-static void
-um_crop_area_init (UmCropArea *area)
-{
-        area->priv = (G_TYPE_INSTANCE_GET_PRIVATE ((area), UM_TYPE_CROP_AREA,
-                                                   UmCropAreaPrivate));
-
-        gtk_widget_add_events (GTK_WIDGET (area), GDK_POINTER_MOTION_MASK |
-                               GDK_BUTTON_PRESS_MASK |
-                               GDK_BUTTON_RELEASE_MASK);
-
-        area->priv->scale = 0.0;
-        area->priv->image.x = 0;
-        area->priv->image.y = 0;
-        area->priv->image.width = 0;
-        area->priv->image.height = 0;
-        area->priv->active_region = OUTSIDE;
-        area->priv->base_width = 48;
-        area->priv->base_height = 48;
-        area->priv->aspect = 1;
-}
-
-GtkWidget *
-um_crop_area_new (void)
-{
-        return g_object_new (UM_TYPE_CROP_AREA, NULL);
-}
-
-GdkPixbuf *
-um_crop_area_get_picture (UmCropArea *area)
-{
-        gint width, height;
-
-        width = gdk_pixbuf_get_width (area->priv->browse_pixbuf);
-        height = gdk_pixbuf_get_height (area->priv->browse_pixbuf);
-        width = MIN (area->priv->crop.width, width - area->priv->crop.x);
-        height = MIN (area->priv->crop.height, height - area->priv->crop.y);
-
-        return gdk_pixbuf_new_subpixbuf (area->priv->browse_pixbuf,
-                                         area->priv->crop.x,
-                                         area->priv->crop.y,
-                                         width, height);
-}
-
-void
-um_crop_area_set_picture (UmCropArea *area,
-                          GdkPixbuf  *pixbuf)
-{
-        int width;
-        int height;
-
-        if (area->priv->browse_pixbuf) {
-                g_object_unref (area->priv->browse_pixbuf);
-                area->priv->browse_pixbuf = NULL;
-        }
-        if (pixbuf) {
-                area->priv->browse_pixbuf = g_object_ref (pixbuf);
-                width = gdk_pixbuf_get_width (pixbuf);
-                height = gdk_pixbuf_get_height (pixbuf);
-        } else {
-                width = 0;
-                height = 0;
-        }
-
-        area->priv->crop.width = 2 * area->priv->base_width;
-        area->priv->crop.height = 2 * area->priv->base_height;
-        area->priv->crop.x = (width - area->priv->crop.width) / 2;
-        area->priv->crop.y = (height - area->priv->crop.height) / 2;
-
-        area->priv->scale = 0.0;
-        area->priv->image.x = 0;
-        area->priv->image.y = 0;
-        area->priv->image.width = 0;
-        area->priv->image.height = 0;
-
-        gtk_widget_queue_draw (GTK_WIDGET (area));
-}
-
-void
-um_crop_area_set_min_size (UmCropArea *area,
-                           gint        width,
-                           gint        height)
-{
-        area->priv->base_width = width;
-        area->priv->base_height = height;
-
-        if (area->priv->aspect > 0) {
-                area->priv->aspect = area->priv->base_width / (gdouble)area->priv->base_height;
-        }
-}
-
-void
-um_crop_area_set_constrain_aspect (UmCropArea *area,
-                                   gboolean    constrain)
-{
-        if (constrain) {
-                area->priv->aspect = area->priv->base_width / (gdouble)area->priv->base_height;
-        }
-        else {
-                area->priv->aspect = -1;
-        }
-}
-
diff --git a/panels/user-accounts/um-crop-area.h b/panels/user-accounts/um-crop-area.h
deleted file mode 100644
index 8992957..0000000
--- a/panels/user-accounts/um-crop-area.h
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Copyright © 2009 Bastien Nocera <hadess@hadess.net>
- *
- * Licensed under the GNU General Public License Version 2
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
- */
-
-#ifndef _UM_CROP_AREA_H_
-#define _UM_CROP_AREA_H_
-
-#include <glib-object.h>
-#include <gtk/gtk.h>
-
-G_BEGIN_DECLS
-
-#define UM_TYPE_CROP_AREA (um_crop_area_get_type ())
-#define UM_CROP_AREA(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), UM_TYPE_CROP_AREA, \
-                                                                           UmCropArea))
-#define UM_CROP_AREA_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass), UM_TYPE_CROP_AREA, \
-                                                                        UmCropAreaClass))
-#define UM_IS_CROP_AREA(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UM_TYPE_CROP_AREA))
-#define UM_IS_CROP_AREA_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UM_TYPE_CROP_AREA))
-#define UM_CROP_AREA_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj), UM_TYPE_CROP_AREA, \
-                                                                          UmCropAreaClass))
-
-typedef struct _UmCropAreaClass UmCropAreaClass;
-typedef struct _UmCropArea UmCropArea;
-typedef struct _UmCropAreaPrivate UmCropAreaPrivate;
-
-struct _UmCropAreaClass {
-        GtkDrawingAreaClass parent_class;
-};
-
-struct _UmCropArea {
-        GtkDrawingArea parent_instance;
-        UmCropAreaPrivate *priv;
-};
-
-GType      um_crop_area_get_type             (void) G_GNUC_CONST;
-
-GtkWidget *um_crop_area_new                  (void);
-GdkPixbuf *um_crop_area_get_picture          (UmCropArea *area);
-void       um_crop_area_set_picture          (UmCropArea *area,
-                                              GdkPixbuf  *pixbuf);
-void       um_crop_area_set_min_size         (UmCropArea *area,
-                                              gint        width,
-                                              gint        height);
-void       um_crop_area_set_constrain_aspect (UmCropArea *area,
-                                              gboolean    constrain);
-
-G_END_DECLS
-
-#endif /* _UM_CROP_AREA_H_ */
diff --git a/panels/user-accounts/um-editable-button.c b/panels/user-accounts/um-editable-button.c
deleted file mode 100644
index f78f21c..0000000
--- a/panels/user-accounts/um-editable-button.c
+++ /dev/null
@@ -1,429 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#include <gdk/gdkkeysyms.h>
-#include "um-editable-button.h"
-
-#define EMPTY_TEXT "\xe2\x80\x94"
-
-struct _UmEditableButtonPrivate {
-        GtkNotebook *notebook;
-        GtkLabel    *label;
-        GtkButton   *button;
-
-        gchar *text;
-        gboolean editable;
-        gint weight;
-        gboolean weight_set;
-        gdouble scale;
-        gboolean scale_set;
-};
-
-#define UM_EDITABLE_BUTTON_GET_PRIVATE(obj) (G_TYPE_INSTANCE_GET_PRIVATE ((obj), UM_TYPE_EDITABLE_BUTTON, UmEditableButtonPrivate))
-
-enum {
-        PROP_0,
-        PROP_TEXT,
-        PROP_EDITABLE,
-        PROP_SCALE,
-        PROP_SCALE_SET,
-        PROP_WEIGHT,
-        PROP_WEIGHT_SET
-};
-
-enum {
-        START_EDITING,
-        ACTIVATE,
-        LAST_SIGNAL
-};
-
-static guint signals [LAST_SIGNAL] = { 0, };
-
-G_DEFINE_TYPE (UmEditableButton, um_editable_button, GTK_TYPE_ALIGNMENT);
-
-void
-um_editable_button_set_text (UmEditableButton *button,
-                             const gchar      *text)
-{
-        UmEditableButtonPrivate *priv;
-        gchar *tmp;
-        GtkWidget *label;
-
-        priv = button->priv;
-
-        tmp = g_strdup (text);
-        g_free (priv->text);
-        priv->text = tmp;
-
-        if (tmp == NULL || tmp[0] == '\0')
-                tmp = EMPTY_TEXT;
-
-        gtk_label_set_text (priv->label, tmp);
-        label = gtk_bin_get_child (GTK_BIN (priv->button));
-        gtk_label_set_text (GTK_LABEL (label), tmp);
-
-        g_object_notify (G_OBJECT (button), "text");
-}
-
-const gchar *
-um_editable_button_get_text (UmEditableButton *button)
-{
-        return button->priv->text;
-}
-
-void
-um_editable_button_set_editable (UmEditableButton *button,
-                                 gboolean          editable)
-{
-        UmEditableButtonPrivate *priv;
-
-        priv = button->priv;
-
-        if (priv->editable != editable) {
-                priv->editable = editable;
-
-                gtk_notebook_set_current_page (priv->notebook, editable ? 1 : 0);
-
-                g_object_notify (G_OBJECT (button), "editable");
-        }
-}
-
-gboolean
-um_editable_button_get_editable (UmEditableButton *button)
-{
-        return button->priv->editable;
-}
-
-static void
-update_fonts (UmEditableButton *button)
-{
-        PangoAttrList *attrs;
-        PangoAttribute *attr;
-        GtkWidget *label;
-
-        UmEditableButtonPrivate *priv = button->priv;
-
-        attrs = pango_attr_list_new ();
-        if (priv->scale_set) {
-                attr = pango_attr_scale_new (priv->scale);
-                pango_attr_list_insert (attrs, attr);
-        }
-        if (priv->weight_set) {
-                attr = pango_attr_weight_new (priv->weight);
-                pango_attr_list_insert (attrs, attr);
-        }
-
-        gtk_label_set_attributes (priv->label, attrs);
-
-        label = gtk_bin_get_child (GTK_BIN (priv->button));
-        gtk_label_set_attributes (GTK_LABEL (label), attrs);
-
-        pango_attr_list_unref (attrs);
-}
-
-void
-um_editable_button_set_weight (UmEditableButton *button,
-                               gint              weight)
-{
-        UmEditableButtonPrivate *priv = button->priv;
-
-        if (priv->weight == weight && priv->weight_set)
-                return;
-
-        priv->weight = weight;
-        priv->weight_set = TRUE;
-
-        update_fonts (button);
-
-        g_object_notify (G_OBJECT (button), "weight");
-        g_object_notify (G_OBJECT (button), "weight-set");
-}
-
-gint
-um_editable_button_get_weight (UmEditableButton *button)
-{
-        return button->priv->weight;
-}
-
-void
-um_editable_button_set_scale (UmEditableButton *button,
-                              gdouble           scale)
-{
-        UmEditableButtonPrivate *priv = button->priv;
-
-        if (priv->scale == scale && priv->scale_set)
-                return;
-
-        priv->scale = scale;
-        priv->scale_set = TRUE;
-
-        update_fonts (button);
-
-        g_object_notify (G_OBJECT (button), "scale");
-        g_object_notify (G_OBJECT (button), "scale-set");
-}
-
-gdouble
-um_editable_button_get_scale (UmEditableButton *button)
-{
-        return button->priv->scale;
-}
-
-static void
-um_editable_button_set_property (GObject      *object,
-                                 guint         prop_id,
-                                 const GValue *value,
-                                 GParamSpec   *pspec)
-{
-        UmEditableButton *button = UM_EDITABLE_BUTTON (object);
-
-        switch (prop_id) {
-        case PROP_TEXT:
-                um_editable_button_set_text (button, g_value_get_string (value));
-                break;
-        case PROP_EDITABLE:
-                um_editable_button_set_editable (button, g_value_get_boolean (value));
-                break;
-        case PROP_WEIGHT:
-                um_editable_button_set_weight (button, g_value_get_int (value));
-                break;
-        case PROP_WEIGHT_SET:
-                button->priv->weight_set = g_value_get_boolean (value);
-                break;
-        case PROP_SCALE:
-                um_editable_button_set_scale (button, g_value_get_double (value));
-                break;
-        case PROP_SCALE_SET:
-                button->priv->scale_set = g_value_get_boolean (value);
-                break;
-        default:
-                G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
-                break;
-        }
-}
-
-static void
-um_editable_button_get_property (GObject    *object,
-                                 guint       prop_id,
-                                 GValue     *value,
-                                 GParamSpec *pspec)
-{
-        UmEditableButton *button = UM_EDITABLE_BUTTON (object);
-
-        switch (prop_id) {
-        case PROP_TEXT:
-                g_value_set_string (value,
-                                    um_editable_button_get_text (button));
-                break;
-        case PROP_EDITABLE:
-                g_value_set_boolean (value,
-                                     um_editable_button_get_editable (button));
-                break;
-        case PROP_WEIGHT:
-                g_value_set_int (value,
-                                 um_editable_button_get_weight (button));
-                break;
-        case PROP_WEIGHT_SET:
-                g_value_set_boolean (value,
-                                     button->priv->weight_set);
-                break;
-        case PROP_SCALE:
-                g_value_set_double (value,
-                                    um_editable_button_get_scale (button));
-                break;
-        case PROP_SCALE_SET:
-                g_value_set_boolean (value,
-                                     button->priv->scale_set);
-                break;
-        default:
-                G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
-                break;
-        }
-}
-
-static void
-um_editable_button_finalize (GObject *object)
-{
-        UmEditableButton *button = (UmEditableButton*)object;
-
-        g_free (button->priv->text);
-
-        G_OBJECT_CLASS (um_editable_button_parent_class)->finalize (object);
-}
-
-static void um_editable_button_activate (UmEditableButton *button);
-
-static void
-um_editable_button_class_init (UmEditableButtonClass *class)
-{
-        GObjectClass *object_class;
-        GtkWidgetClass *widget_class;
-
-        object_class = G_OBJECT_CLASS (class);
-        widget_class = GTK_WIDGET_CLASS (class);
-
-        object_class->set_property = um_editable_button_set_property;
-        object_class->get_property = um_editable_button_get_property;
-        object_class->finalize = um_editable_button_finalize;
-
-        signals[START_EDITING] =
-                g_signal_new ("start-editing",
-                              G_TYPE_FROM_CLASS (class),
-                              G_SIGNAL_RUN_LAST,
-                              G_STRUCT_OFFSET (UmEditableButtonClass, start_editing),
-                              NULL, NULL,
-                              g_cclosure_marshal_VOID__VOID,
-                              G_TYPE_NONE, 0);
-        signals[ACTIVATE] =
-                g_signal_new ("activate",
-                              G_TYPE_FROM_CLASS (class),
-                              G_SIGNAL_RUN_FIRST | G_SIGNAL_ACTION,
-                              G_STRUCT_OFFSET (UmEditableButtonClass, activate),
-                              NULL, NULL,
-                              g_cclosure_marshal_VOID__VOID,
-                              G_TYPE_NONE, 0);
-        widget_class->activate_signal = signals[ACTIVATE];
-        class->activate = um_editable_button_activate;
-
-
-        g_object_class_install_property (object_class, PROP_TEXT,
-                g_param_spec_string ("text",
-                                     "Text", "The text of the button",
-                                     NULL,
-                                     G_PARAM_READWRITE));
-
-        g_object_class_install_property (object_class, PROP_EDITABLE,
-                g_param_spec_boolean ("editable",
-                                      "Editable", "Whether the text can be edited",
-                                      FALSE,
-                                      G_PARAM_READWRITE));
-
-        g_object_class_install_property (object_class, PROP_WEIGHT,
-                g_param_spec_int ("weight",
-                                  "Font Weight", "The font weight to use",
-                                  0, G_MAXINT, PANGO_WEIGHT_NORMAL,
-                                  G_PARAM_READWRITE));
-
-        g_object_class_install_property (object_class, PROP_WEIGHT_SET,
-                g_param_spec_boolean ("weight-set",
-                                      "Font Weight Set", "Whether a font weight is set",
-                                      FALSE,
-                                      G_PARAM_READWRITE));
-
-        g_object_class_install_property (object_class, PROP_SCALE,
-                g_param_spec_double ("scale",
-                                     "Font Scale", "The font scale to use",
-                                     0.0, G_MAXDOUBLE, 1.0,
-                                     G_PARAM_READWRITE));
-
-        g_object_class_install_property (object_class, PROP_SCALE_SET,
-                g_param_spec_boolean ("scale-set",
-                                      "Font Scale Set", "Whether a font scale is set",
-                                      FALSE,
-                                      G_PARAM_READWRITE));
-
-        g_type_class_add_private (class, sizeof (UmEditableButtonPrivate));
-}
-
-static void
-start_editing (UmEditableButton *button)
-{
-        g_signal_emit (button, signals[START_EDITING], 0);
-}
-
-static void
-um_editable_button_activate (UmEditableButton *button)
-{
-        UmEditableButtonPrivate *priv = button->priv;
-
-        if (priv->editable) {
-                gtk_widget_grab_focus (GTK_WIDGET (button->priv->button));
-        }
-}
-
-static void
-button_clicked (GtkWidget        *widget,
-                UmEditableButton *button)
-{
-        start_editing (button);
-}
-
-static void
-update_button_padding (GtkWidget        *widget,
-                       GtkAllocation    *allocation,
-                       UmEditableButton *button)
-{
-        UmEditableButtonPrivate *priv = button->priv;
-        GtkAllocation parent_allocation;
-        gint offset;
-        gint pad;
-
-        gtk_widget_get_allocation (gtk_widget_get_parent (widget), &parent_allocation);
-
-        offset = allocation->x - parent_allocation.x;
-
-        gtk_misc_get_padding  (GTK_MISC (priv->label), &pad, NULL);
-        if (offset != pad)
-                gtk_misc_set_padding (GTK_MISC (priv->label), offset, 0);
-}
-
-static void
-um_editable_button_init (UmEditableButton *button)
-{
-        UmEditableButtonPrivate *priv;
-
-        priv = button->priv = UM_EDITABLE_BUTTON_GET_PRIVATE (button);
-
-        priv->weight = PANGO_WEIGHT_NORMAL;
-        priv->weight_set = FALSE;
-        priv->scale = 1.0;
-        priv->scale_set = FALSE;
-
-        priv->notebook = (GtkNotebook*)gtk_notebook_new ();
-        gtk_notebook_set_show_tabs (priv->notebook, FALSE);
-        gtk_notebook_set_show_border (priv->notebook, FALSE);
-
-        priv->label = (GtkLabel*)gtk_label_new (EMPTY_TEXT);
-        gtk_misc_set_alignment (GTK_MISC (priv->label), 0.0, 0.5);
-        gtk_notebook_append_page (priv->notebook, (GtkWidget*)priv->label, NULL);
-
-        priv->button = (GtkButton*)gtk_button_new_with_label (EMPTY_TEXT);
-        gtk_widget_set_receives_default ((GtkWidget*)priv->button, TRUE);
-        gtk_button_set_relief (priv->button, GTK_RELIEF_NONE);
-        gtk_button_set_alignment (priv->button, 0.0, 0.5);
-        gtk_notebook_append_page (priv->notebook, (GtkWidget*)priv->button, NULL);
-        g_signal_connect (priv->button, "clicked", G_CALLBACK (button_clicked), button);
-        g_signal_connect (gtk_bin_get_child (GTK_BIN (priv->button)), "size-allocate", G_CALLBACK (update_button_padding), button);
-
-        gtk_container_add (GTK_CONTAINER (button), (GtkWidget*)priv->notebook);
-
-        gtk_widget_show ((GtkWidget*)priv->notebook);
-        gtk_widget_show ((GtkWidget*)priv->label);
-        gtk_widget_show ((GtkWidget*)priv->button);
-
-        gtk_notebook_set_current_page (priv->notebook, 0);
-}
-
-GtkWidget *
-um_editable_button_new (void)
-{
-        return (GtkWidget *) g_object_new (UM_TYPE_EDITABLE_BUTTON, NULL);
-}
diff --git a/panels/user-accounts/um-editable-button.h b/panels/user-accounts/um-editable-button.h
deleted file mode 100644
index 4397849..0000000
--- a/panels/user-accounts/um-editable-button.h
+++ /dev/null
@@ -1,73 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#ifndef _UM_EDITABLE_BUTTON_H
-#define _UM_EDITABLE_BUTTON_H
-
-#include <gtk/gtk.h>
-
-G_BEGIN_DECLS
-
-#define UM_TYPE_EDITABLE_BUTTON  um_editable_button_get_type()
-
-#define UM_EDITABLE_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UM_TYPE_EDITABLE_BUTTON, UmEditableButton))
-#define UM_EDITABLE_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UM_TYPE_EDITABLE_BUTTON, UmEditableButtonClass))
-#define UM_IS_EDITABLE_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UM_TYPE_EDITABLE_BUTTON))
-#define UM_IS_EDITABLE_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UM_TYPE_EDITABLE_BUTTON))
-#define UM_EDITABLE_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UM_TYPE_EDITABLE_BUTTON, UmEditableButtonClass))
-
-typedef struct _UmEditableButton UmEditableButton;
-typedef struct _UmEditableButtonClass UmEditableButtonClass;
-typedef struct _UmEditableButtonPrivate UmEditableButtonPrivate;
-
-struct _UmEditableButton
-{
-  GtkAlignment parent;
-
-  UmEditableButtonPrivate *priv;
-};
-
-struct _UmEditableButtonClass
-{
-  GtkAlignmentClass parent_class;
-
-  void (* start_editing) (UmEditableButton *button);
-  void (* activate)      (UmEditableButton *button);
-};
-
-GType        um_editable_button_get_type     (void) G_GNUC_CONST;
-GtkWidget   *um_editable_button_new          (void);
-void         um_editable_button_set_text     (UmEditableButton *button,
-                                              const gchar      *text);
-const gchar *um_editable_button_get_text     (UmEditableButton *button);
-void         um_editable_button_set_editable (UmEditableButton *button,
-                                              gboolean          editable);
-gboolean     um_editable_button_get_editable (UmEditableButton *button);
-void         um_editable_button_set_weight   (UmEditableButton *button,
-                                              gint              weight);
-gint         um_editable_button_get_weight   (UmEditableButton *button);
-void         um_editable_button_set_scale    (UmEditableButton *button,
-                                              gdouble           scale);
-gdouble      um_editable_button_get_scale    (UmEditableButton *button);
-
-G_END_DECLS
-
-#endif /* _UM_EDITABLE_BUTTON_H_ */
diff --git a/panels/user-accounts/um-editable-combo.c b/panels/user-accounts/um-editable-combo.c
deleted file mode 100644
index 6431029..0000000
--- a/panels/user-accounts/um-editable-combo.c
+++ /dev/null
@@ -1,464 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#include <gdk/gdkkeysyms.h>
-#include "um-editable-combo.h"
-
-#define EMPTY_TEXT "\xe2\x80\x94"
-
-struct _UmEditableComboPrivate {
-        GtkNotebook *notebook;
-        GtkLabel    *label;
-        GtkButton   *button;
-        GtkComboBox *combo;
-        GtkWidget   *toplevel;
-
-        gint active;
-        gint editable;
-        gint text_column;
-};
-
-#define UM_EDITABLE_COMBO_GET_PRIVATE(obj) (G_TYPE_INSTANCE_GET_PRIVATE ((obj), UM_TYPE_EDITABLE_COMBO, UmEditableComboPrivate))
-
-enum {
-        PROP_0,
-        PROP_EDITABLE,
-        PROP_MODEL,
-        PROP_TEXT_COLUMN
-};
-
-enum {
-        EDITING_DONE,
-        ACTIVATE,
-        LAST_SIGNAL
-};
-
-static guint signals [LAST_SIGNAL] = { 0, };
-
-G_DEFINE_TYPE (UmEditableCombo, um_editable_combo, GTK_TYPE_ALIGNMENT);
-
-void
-um_editable_combo_set_editable (UmEditableCombo *combo,
-                                gboolean         editable)
-{
-        UmEditableComboPrivate *priv;
-
-        priv = combo->priv;
-
-        if (priv->editable != editable) {
-                priv->editable = editable;
-
-                gtk_notebook_set_current_page (priv->notebook, editable ? 1 : 0);
-
-                g_object_notify (G_OBJECT (combo), "editable");
-        }
-}
-
-gboolean
-um_editable_combo_get_editable (UmEditableCombo *combo)
-{
-        return combo->priv->editable;
-}
-
-void
-um_editable_combo_set_model (UmEditableCombo *combo,
-                             GtkTreeModel    *model)
-{
-        gtk_combo_box_set_model (combo->priv->combo, model);
-
-        g_object_notify (G_OBJECT (combo), "model");
-}
-
-GtkTreeModel *
-um_editable_combo_get_model (UmEditableCombo *combo)
-{
-        return gtk_combo_box_get_model (combo->priv->combo);
-}
-
-void
-um_editable_combo_set_text_column (UmEditableCombo *combo,
-                                   gint             text_column)
-{
-        UmEditableComboPrivate *priv = combo->priv;
-        GList *cells;
-
-        if (priv->text_column == text_column)
-                return;
-
-        priv->text_column = text_column;
-
-        cells = gtk_cell_layout_get_cells (GTK_CELL_LAYOUT (priv->combo));
-        gtk_cell_layout_set_attributes (GTK_CELL_LAYOUT (priv->combo),
-                                        cells->data,
-                                        "text", text_column,
-                                        NULL);
-        g_list_free (cells);
-
-        g_object_notify (G_OBJECT (combo), "text-column");
-}
-
-gint
-um_editable_combo_get_text_column (UmEditableCombo *combo)
-{
-        return combo->priv->text_column;
-}
-
-void
-um_editable_combo_set_active (UmEditableCombo *combo,
-                              gint             active)
-{
-        GtkTreeModel *model;
-        GtkTreePath *path;
-        GtkTreeIter iter;
-
-        if (active == -1)
-                um_editable_combo_set_active_iter (combo, NULL);
-        else {
-                model = gtk_combo_box_get_model (combo->priv->combo);
-                path = gtk_tree_path_new_from_indices (active, -1);
-                gtk_tree_model_get_iter (model, &iter, path);
-                gtk_tree_path_free (path);
-                um_editable_combo_set_active_iter (combo, &iter);
-        }
-}
-
-void
-um_editable_combo_set_active_iter (UmEditableCombo *combo,
-                                   GtkTreeIter     *iter)
-{
-        UmEditableComboPrivate *priv = combo->priv;
-        GtkWidget *label;
-        gchar *text;
-        GtkTreeModel *model;
-
-        gtk_combo_box_set_active_iter (priv->combo, iter);
-        priv->active = gtk_combo_box_get_active (priv->combo);
-
-        if (priv->text_column == -1)
-                return;
-
-        if (iter) {
-                model = gtk_combo_box_get_model (priv->combo);
-                gtk_tree_model_get (model, iter, priv->text_column, &text, -1);
-        }
-        else {
-                text = g_strdup (EMPTY_TEXT);
-        }
-
-        gtk_label_set_text (priv->label, text);
-        label = gtk_bin_get_child ((GtkBin*)priv->button);
-        gtk_label_set_text (GTK_LABEL (label), text);
-
-        g_free (text);
-}
-
-gboolean
-um_editable_combo_get_active_iter (UmEditableCombo *combo,
-                                   GtkTreeIter     *iter)
-{
-        return gtk_combo_box_get_active_iter (combo->priv->combo, iter);
-}
-
-gint
-um_editable_combo_get_active (UmEditableCombo *combo)
-{
-        return combo->priv->active;
-}
-
-static void
-um_editable_combo_set_property (GObject      *object,
-                                guint         prop_id,
-                                const GValue *value,
-                                GParamSpec   *pspec)
-{
-        UmEditableCombo *combo = UM_EDITABLE_COMBO (object);
-
-        switch (prop_id) {
-        case PROP_EDITABLE:
-                um_editable_combo_set_editable (combo, g_value_get_boolean (value));
-                break;
-        case PROP_MODEL:
-                um_editable_combo_set_model (combo, g_value_get_object (value));
-                break;
-        case PROP_TEXT_COLUMN:
-                um_editable_combo_set_text_column (combo, g_value_get_int (value));
-                break;
-        default:
-                G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
-                break;
-        }
-}
-
-static void
-um_editable_combo_get_property (GObject    *object,
-                                guint       prop_id,
-                                GValue     *value,
-                                GParamSpec *pspec)
-{
-        UmEditableCombo *combo = UM_EDITABLE_COMBO (object);
-
-        switch (prop_id) {
-        case PROP_EDITABLE:
-                g_value_set_boolean (value,
-                                     um_editable_combo_get_editable (combo));
-                break;
-        case PROP_MODEL:
-                g_value_set_object (value,
-                                    um_editable_combo_get_model (combo));
-                break;
-        case PROP_TEXT_COLUMN:
-                g_value_set_int (value,
-                                 um_editable_combo_get_text_column (combo));
-                break;
-        default:
-                G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
-                break;
-        }
-}
-
-static void um_editable_combo_activate (UmEditableCombo *combo);
-
-static void
-um_editable_combo_class_init (UmEditableComboClass *class)
-{
-        GObjectClass *object_class;
-        GtkWidgetClass *widget_class;
-
-        object_class = G_OBJECT_CLASS (class);
-        widget_class = GTK_WIDGET_CLASS (class);
-
-        object_class->set_property = um_editable_combo_set_property;
-        object_class->get_property = um_editable_combo_get_property;
-
-        signals[EDITING_DONE] =
-                g_signal_new ("editing-done",
-                              G_TYPE_FROM_CLASS (class),
-                              G_SIGNAL_RUN_LAST,
-                              G_STRUCT_OFFSET (UmEditableComboClass, editing_done),
-                              NULL, NULL,
-                              g_cclosure_marshal_VOID__VOID,
-                              G_TYPE_NONE, 0);
-        signals[ACTIVATE] =
-                g_signal_new ("activate",
-                              G_TYPE_FROM_CLASS (class),
-                              G_SIGNAL_RUN_FIRST | G_SIGNAL_ACTION,
-                              G_STRUCT_OFFSET (UmEditableComboClass, activate),
-                              NULL, NULL,
-                              g_cclosure_marshal_VOID__VOID,
-                              G_TYPE_NONE, 0);
-        widget_class->activate_signal = signals[ACTIVATE];
-        class->activate = um_editable_combo_activate;
-
-        g_object_class_install_property (object_class, PROP_MODEL,
-                g_param_spec_object ("model",
-                                     "Model", "The options to present in the combobox",
-                                     GTK_TYPE_TREE_MODEL,
-                                     G_PARAM_READWRITE));
-
-        g_object_class_install_property (object_class, PROP_TEXT_COLUMN,
-                g_param_spec_int ("text-column",
-                                  "Text Column", "The model column that contains the displayable text",
-                                  -1, G_MAXINT, -1,
-                                  G_PARAM_READWRITE));
-
-
-        g_object_class_install_property (object_class, PROP_EDITABLE,
-                g_param_spec_boolean ("editable",
-                                      "Editable", "Whether the text can be edited",
-                                      FALSE,
-                                      G_PARAM_READWRITE));
-
-        g_type_class_add_private (class, sizeof (UmEditableComboPrivate));
-}
-
-static void
-start_editing (UmEditableCombo *combo)
-{
-        gtk_notebook_set_current_page (combo->priv->notebook, 2);
-        gtk_combo_box_popup (combo->priv->combo);
-}
-
-static void
-stop_editing (UmEditableCombo *combo)
-{
-        um_editable_combo_set_active (combo,
-                                      gtk_combo_box_get_active (combo->priv->combo));
-        gtk_notebook_set_current_page (combo->priv->notebook, 1);
-
-        g_signal_emit (combo, signals[EDITING_DONE], 0);
-}
-
-static void
-cancel_editing (UmEditableCombo *combo)
-{
-        gtk_combo_box_set_active (combo->priv->combo,
-                                  um_editable_combo_get_active (combo));
-        gtk_notebook_set_current_page (combo->priv->notebook, 1);
-}
-
-static void
-um_editable_combo_activate (UmEditableCombo *combo)
-{
-        if (combo->priv->editable) {
-                gtk_notebook_set_current_page (combo->priv->notebook, 2);
-                gtk_widget_grab_focus (GTK_WIDGET (combo->priv->combo));
-        }
-}
-
-static void
-button_clicked (GtkWidget       *widget,
-                UmEditableCombo *combo)
-{
-        if (combo->priv->editable)
-                start_editing (combo);
-}
-
-static void
-combo_changed (GtkWidget       *widget,
-               UmEditableCombo *combo)
-{
-        if (combo->priv->editable)
-                stop_editing (combo);
-}
-
-static gboolean
-combo_key_press (GtkWidget       *widget,
-                 GdkEventKey     *event,
-                 UmEditableCombo *combo)
-{
-        if (event->keyval == GDK_KEY_Escape) {
-                cancel_editing (combo);
-                return TRUE;
-        }
-        return FALSE;
-}
-
-static void
-focus_moved (GtkWindow       *window,
-             GtkWidget       *widget,
-             UmEditableCombo *combo)
-{
-        if (gtk_notebook_get_current_page (combo->priv->notebook) == 2 &&
-            (!widget || !gtk_widget_is_ancestor (widget, (GtkWidget *)combo)))
-                stop_editing (combo);
-}
-
-static void
-combo_hierarchy_changed (GtkWidget       *widget,
-                         GtkWidget       *previous_toplevel,
-                         UmEditableCombo *combo)
-{
-        UmEditableComboPrivate *priv;
-        GtkWidget *toplevel;
-
-        priv = combo->priv;
-
-        toplevel = gtk_widget_get_toplevel (widget);
-        if (priv->toplevel != toplevel) {
-                if (priv->toplevel)
-                        g_signal_handlers_disconnect_by_func (priv->toplevel,
-                                                              focus_moved, combo);
-
-                if (GTK_IS_WINDOW (toplevel))
-                        priv->toplevel = toplevel;
-                else
-                        priv->toplevel = NULL;
-
-                if (priv->toplevel)
-                        g_signal_connect (priv->toplevel, "set-focus",
-                                          G_CALLBACK (focus_moved), combo);
-        }
-}
-
-static void
-update_button_padding (GtkWidget       *widget,
-                       GtkAllocation   *allocation,
-                       UmEditableCombo *combo)
-{
-        UmEditableComboPrivate *priv = combo->priv;
-        GtkAllocation parent_allocation;
-        gint offset;
-        gint pad;
-
-        gtk_widget_get_allocation (gtk_widget_get_parent (widget), &parent_allocation);
-
-        offset = allocation->x - parent_allocation.x;
-
-        gtk_misc_get_padding  (GTK_MISC (priv->label), &pad, NULL);
-        if (offset != pad)
-                gtk_misc_set_padding (GTK_MISC (priv->label), offset, 0);
-}
-
-static void
-um_editable_combo_init (UmEditableCombo *combo)
-{
-        UmEditableComboPrivate *priv;
-        GtkCellRenderer *cell;
-
-        priv = combo->priv = UM_EDITABLE_COMBO_GET_PRIVATE (combo);
-
-        priv->active = -1;
-        priv->text_column = -1;
-
-        priv->notebook = (GtkNotebook*)gtk_notebook_new ();
-        gtk_notebook_set_show_tabs (priv->notebook, FALSE);
-        gtk_notebook_set_show_border (priv->notebook, FALSE);
-
-        priv->label = (GtkLabel*)gtk_label_new ("");
-        gtk_misc_set_alignment (GTK_MISC (priv->label), 0.0, 0.5);
-        gtk_notebook_append_page (priv->notebook, (GtkWidget*)priv->label, NULL);
-
-        priv->button = (GtkButton*)gtk_button_new_with_label ("");
-        gtk_widget_set_receives_default ((GtkWidget*)priv->button, TRUE);
-        gtk_button_set_relief (priv->button, GTK_RELIEF_NONE);
-        gtk_button_set_alignment (priv->button, 0.0, 0.5);
-        gtk_notebook_append_page (priv->notebook, (GtkWidget*)priv->button, NULL);
-        g_signal_connect (priv->button, "clicked", G_CALLBACK (button_clicked), combo);
-
-        priv->combo = (GtkComboBox*)gtk_combo_box_new ();
-        cell = gtk_cell_renderer_text_new ();
-        gtk_cell_layout_pack_start (GTK_CELL_LAYOUT (priv->combo), cell, TRUE);
-        gtk_notebook_append_page (priv->notebook, (GtkWidget*)priv->combo, NULL);
-
-        g_signal_connect (priv->combo, "changed", G_CALLBACK (combo_changed), combo);
-        g_signal_connect (priv->combo, "key-press-event", G_CALLBACK (combo_key_press), combo);
-        g_signal_connect (gtk_bin_get_child (GTK_BIN (priv->button)), "size-allocate", G_CALLBACK (update_button_padding), combo);
-
-
-        gtk_container_add (GTK_CONTAINER (combo), (GtkWidget*)priv->notebook);
-
-        gtk_widget_show ((GtkWidget*)priv->notebook);
-        gtk_widget_show ((GtkWidget*)priv->label);
-        gtk_widget_show ((GtkWidget*)priv->button);
-        gtk_widget_show ((GtkWidget*)priv->combo);
-
-        gtk_notebook_set_current_page (priv->notebook, 0);
-
-        /* ugly hack to catch the combo box losing focus */
-        g_signal_connect (combo, "hierarchy-changed",
-                          G_CALLBACK (combo_hierarchy_changed), combo);
-}
-
-GtkWidget *
-um_editable_combo_new (void)
-{
-        return (GtkWidget *) g_object_new (UM_TYPE_EDITABLE_COMBO, NULL);
-}
diff --git a/panels/user-accounts/um-editable-combo.h b/panels/user-accounts/um-editable-combo.h
deleted file mode 100644
index e6b0f28..0000000
--- a/panels/user-accounts/um-editable-combo.h
+++ /dev/null
@@ -1,77 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#ifndef _UM_EDITABLE_COMBO_H
-#define _UM_EDITABLE_COMBO_H
-
-#include <gtk/gtk.h>
-
-G_BEGIN_DECLS
-
-#define UM_TYPE_EDITABLE_COMBO  um_editable_combo_get_type()
-
-#define UM_EDITABLE_COMBO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UM_TYPE_EDITABLE_COMBO, UmEditableCombo))
-#define UM_EDITABLE_COMBO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UM_TYPE_EDITABLE_COMBO, UmEditableComboClass))
-#define UM_IS_EDITABLE_COMBO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UM_TYPE_EDITABLE_COMBO))
-#define UM_IS_EDITABLE_COMBO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UM_TYPE_EDITABLE_COMBO))
-#define UM_EDITABLE_COMBO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UM_TYPE_EDITABLE_COMBO, UmEditableComboClass))
-
-typedef struct _UmEditableCombo UmEditableCombo;
-typedef struct _UmEditableComboClass UmEditableComboClass;
-typedef struct _UmEditableComboPrivate UmEditableComboPrivate;
-
-struct _UmEditableCombo
-{
-  GtkAlignment parent;
-
-  UmEditableComboPrivate *priv;
-};
-
-struct _UmEditableComboClass
-{
-  GtkAlignmentClass parent_class;
-
-  void (* editing_done) (UmEditableCombo *combo);
-  void (* activate)     (UmEditableCombo *combo);
-};
-
-GType         um_editable_combo_get_type        (void) G_GNUC_CONST;
-GtkWidget    *um_editable_combo_new             (void);
-void          um_editable_combo_set_editable    (UmEditableCombo *combo,
-                                                 gboolean         editable);
-gboolean      um_editable_combo_get_editable    (UmEditableCombo *combo);
-void          um_editable_combo_set_model       (UmEditableCombo *combo,
-                                                 GtkTreeModel    *model);
-GtkTreeModel *um_editable_combo_get_model       (UmEditableCombo *combo);
-void          um_editable_combo_set_text_column (UmEditableCombo *combo,
-                                                 gint             column);
-gint          um_editable_combo_get_text_column (UmEditableCombo *combo);
-gint          um_editable_combo_get_active      (UmEditableCombo *combo);
-void          um_editable_combo_set_active      (UmEditableCombo *combo,
-                                                 gint             active);
-gboolean      um_editable_combo_get_active_iter (UmEditableCombo *combo,
-                                                 GtkTreeIter     *iter);
-void          um_editable_combo_set_active_iter (UmEditableCombo *combo,
-                                                 GtkTreeIter     *iter);
-
-G_END_DECLS
-
-#endif /* _UM_EDITABLE_COMBO_H_ */
diff --git a/panels/user-accounts/um-fingerprint-dialog.c b/panels/user-accounts/um-fingerprint-dialog.c
deleted file mode 100644
index ff6d810..0000000
--- a/panels/user-accounts/um-fingerprint-dialog.c
+++ /dev/null
@@ -1,774 +0,0 @@
-/* gnome-about-me-fingerprint.h
- * Copyright (C) 2008 Bastien Nocera <hadess@hadess.net>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2, or (at your option)
- * any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
- * 02111-1307, USA.
- */
-
-#include "config.h"
-
-#include <stdlib.h>
-#include <glib/gi18n.h>
-#include <gio/gio.h>
-#include <gtk/gtk.h>
-
-#include "um-fingerprint-dialog.h"
-
-#include "fingerprint-strings.h"
-
-/* Retrieve a widget from the UI object */
-#define WID(s) GTK_WIDGET (gtk_builder_get_object (dialog, s))
-
-/* Translate fprintd strings */
-#define TR(s) dgettext("fprintd", s)
-
-/* This must match the number of images on the 2nd page in the UI file */
-#define MAX_ENROLL_STAGES 5
-
-static GDBusProxy *manager = NULL;
-static GDBusConnection *connection = NULL;
-static gboolean is_disable = FALSE;
-
-enum {
-        STATE_NONE,
-        STATE_CLAIMED,
-        STATE_ENROLLING
-};
-
-typedef struct {
-        GtkWidget *label1;
-        GtkWidget *label2;
-
-        GtkWidget *ass;
-        GtkBuilder *dialog;
-
-        GDBusProxy *device;
-        gboolean is_swipe;
-        int num_enroll_stages;
-        int num_stages_done;
-        char *name;
-        const char *finger;
-        gint state;
-} EnrollData;
-
-static void create_manager (void)
-{
-        GError *error = NULL;
-
-        connection = g_bus_get_sync (G_BUS_TYPE_SYSTEM, NULL, &error);
-        if (connection == NULL) {
-                g_warning ("Failed to connect to session bus: %s", error->message);
-                g_error_free (error);
-                return;
-        }
-
-        manager = g_dbus_proxy_new_sync (connection,
-                                         G_DBUS_PROXY_FLAGS_NONE,
-                                         NULL,
-                                         "net.reactivated.Fprint",
-                                         "/net/reactivated/Fprint/Manager",
-                                         "net.reactivated.Fprint.Manager",
-                                         NULL,
-                                         &error);
-        if (manager == NULL) {
-                g_warning ("Failed to create fingerprint manager proxy: %s", error->message);
-                g_error_free (error);
-        }
-}
-
-static GDBusProxy *
-get_first_device (void)
-{
-        GDBusProxy *device;
-        GVariant *result;
-        char *device_str = NULL;
-        GError *error = NULL;
-
-        result = g_dbus_proxy_call_sync (manager,
-                                         "GetDefaultDevice",
-                                         g_variant_new ("()"),
-                                         G_DBUS_CALL_FLAGS_NONE,
-                                         -1,
-                                         NULL,
-                                         NULL);
-        if (result == NULL)
-                return NULL;
-        if (!g_variant_is_of_type (result, G_VARIANT_TYPE ("(o)")))
-                g_warning ("net.reactivated.Fprint.Manager.GetDefaultDevice returns unknown result %s", g_variant_get_type_string (result));
-        else
-                g_variant_get (result, "(o)", &device_str);
-        g_variant_unref (result);
-
-        if (device_str == NULL)
-                return NULL;
-
-        device = g_dbus_proxy_new_sync (connection,
-                                        G_DBUS_PROXY_FLAGS_NONE,
-                                        NULL,
-                                        "net.reactivated.Fprint",
-                                        device_str,
-                                        "net.reactivated.Fprint.Device",
-                                        NULL,
-                                        &error);
-        if (device == NULL) {
-                g_warning ("Failed to create fingerprint device proxy: %s", error->message);
-                g_error_free (error);
-        }
-
-        g_free (device_str);
-
-        return device;
-}
-
-static const char *
-get_reason_for_error (const char *dbus_error)
-{
-        if (g_str_equal (dbus_error, "net.reactivated.Fprint.Error.PermissionDenied"))
-                return N_("You are not allowed to access the device. Contact your system administrator.");
-        if (g_str_equal (dbus_error, "net.reactivated.Fprint.Error.AlreadyInUse"))
-                return N_("The device is already in use.");
-        if (g_str_equal (dbus_error, "net.reactivated.Fprint.Error.Internal"))
-                return N_("An internal error occurred.");
-
-        return NULL;
-}
-
-static GtkWidget *
-get_error_dialog (const char *title,
-                  const char *dbus_error,
-                  GtkWindow *parent)
-{
-        GtkWidget *error_dialog;
-        const char *reason;
-
-        if (dbus_error == NULL)
-                g_warning ("get_error_dialog called with reason == NULL");
-
-        error_dialog =
-                gtk_message_dialog_new (parent,
-                                GTK_DIALOG_MODAL,
-                                GTK_MESSAGE_ERROR,
-                                GTK_BUTTONS_OK,
-                                "%s", title);
-        reason = get_reason_for_error (dbus_error);
-        gtk_message_dialog_format_secondary_text
-                (GTK_MESSAGE_DIALOG (error_dialog), "%s", reason ? _(reason) : _(dbus_error));
-
-        gtk_window_set_title (GTK_WINDOW (error_dialog), ""); /* as per HIG */
-        gtk_container_set_border_width (GTK_CONTAINER (error_dialog), 5);
-        gtk_dialog_set_default_response (GTK_DIALOG (error_dialog),
-                                         GTK_RESPONSE_OK);
-        gtk_window_set_modal (GTK_WINDOW (error_dialog), TRUE);
-        gtk_window_set_position (GTK_WINDOW (error_dialog), GTK_WIN_POS_CENTER_ON_PARENT);
-
-        return error_dialog;
-}
-
-gboolean
-set_fingerprint_label (GtkWidget *label1,
-                       GtkWidget *label2)
-{
-        GDBusProxy *device;
-        GVariant *result;
-        GVariantIter *fingers;
-        GError *error = NULL;
-
-        if (manager == NULL) {
-                create_manager ();
-                if (manager == NULL) {
-                        return FALSE;
-                }
-        }
-
-        device = get_first_device ();
-        if (device == NULL)
-                return FALSE;
-
-        result = g_dbus_proxy_call_sync (device, "ListEnrolledFingers", g_variant_new ("(s)", ""), G_DBUS_CALL_FLAGS_NONE, -1, NULL, &error);
-        if (!result) {
-                if (!g_dbus_error_is_remote_error (error) ||
-                    strcmp (g_dbus_error_get_remote_error(error), "net.reactivated.Fprint.Error.NoEnrolledPrints") != 0) {
-                        g_object_unref (device);
-                        return FALSE;
-                }
-        }
-
-        if (result && g_variant_is_of_type (result, G_VARIANT_TYPE ("(as)")))
-                g_variant_get (result, "(as)", &fingers);
-        else
-                fingers = NULL;
-
-        if (fingers == NULL || g_variant_iter_n_children (fingers) == 0) {
-                is_disable = FALSE;
-                gtk_label_set_text (GTK_LABEL (label1), _("Disabled"));
-                gtk_label_set_text (GTK_LABEL (label2), _("Disabled"));
-        } else {
-                is_disable = TRUE;
-                gtk_label_set_text (GTK_LABEL (label1), _("Enabled"));
-                gtk_label_set_text (GTK_LABEL (label2), _("Enabled"));
-        }
-
-        if (result != NULL)
-                g_variant_unref (result);
-        if (fingers != NULL)
-                g_variant_iter_free (fingers);
-        g_object_unref (device);
-
-        return TRUE;
-}
-
-static void
-delete_fingerprints (void)
-{
-        GDBusProxy *device;
-        GVariant *result;
-
-        if (manager == NULL) {
-                create_manager ();
-                if (manager == NULL)
-                        return;
-        }
-
-        device = get_first_device ();
-        if (device == NULL)
-                return;
-
-        result = g_dbus_proxy_call_sync (device, "DeleteEnrolledFingers", g_variant_new ("(s)", ""), G_DBUS_CALL_FLAGS_NONE, -1, NULL, NULL);
-        if (result)
-                g_variant_unref (result);
-
-        g_object_unref (device);
-}
-
-static void
-delete_fingerprints_question (GtkWindow *parent,
-                              GtkWidget *label1,
-                              GtkWidget *label2,
-                              ActUser   *user)
-{
-        GtkWidget *question;
-        GtkWidget *button;
-
-        question = gtk_message_dialog_new (parent,
-                                           GTK_DIALOG_MODAL,
-                                           GTK_MESSAGE_QUESTION,
-                                           GTK_BUTTONS_NONE,
-                                           _("Delete registered fingerprints?"));
-        gtk_dialog_add_button (GTK_DIALOG (question), _("_Cancel"), GTK_RESPONSE_CANCEL);
-        gtk_window_set_modal (GTK_WINDOW (question), TRUE);
-
-        button = gtk_button_new_with_mnemonic (_("_Delete Fingerprints"));
-        gtk_button_set_image (GTK_BUTTON (button), gtk_image_new_from_icon_name ("edit-delete", GTK_ICON_SIZE_BUTTON));
-        gtk_widget_set_can_default (button, TRUE);
-        gtk_widget_show (button);
-        gtk_dialog_add_action_widget (GTK_DIALOG (question), button, GTK_RESPONSE_OK);
-
-        gtk_message_dialog_format_secondary_text (GTK_MESSAGE_DIALOG (question),
-                                                  _("Do you want to delete your registered fingerprints so fingerprint login is disabled?"));
-        gtk_container_set_border_width (GTK_CONTAINER (question), 5);
-        gtk_dialog_set_default_response (GTK_DIALOG (question), GTK_RESPONSE_OK);
-        gtk_window_set_position (GTK_WINDOW (question), GTK_WIN_POS_CENTER_ON_PARENT);
-        gtk_window_set_modal (GTK_WINDOW (question), TRUE);
-
-        if (gtk_dialog_run (GTK_DIALOG (question)) == GTK_RESPONSE_OK) {
-                delete_fingerprints ();
-                set_fingerprint_label (label1, label2);
-        }
-
-        gtk_widget_destroy (question);
-}
-
-static gboolean
-enroll_start (EnrollData *data, GError **error)
-{
-        GVariant *result;
-
-        result = g_dbus_proxy_call_sync (data->device, "EnrollStart", g_variant_new ("(s)", data->finger), G_DBUS_CALL_FLAGS_NONE, -1, NULL, error);
-        if (result == NULL)
-                return FALSE;
-        g_variant_unref (result);
-        return TRUE;
-}
-
-static gboolean
-enroll_stop (EnrollData *data, GError **error)
-{
-        GVariant *result;
-
-        result = g_dbus_proxy_call_sync (data->device, "EnrollStop", g_variant_new ("()"), G_DBUS_CALL_FLAGS_NONE, -1, NULL, error);
-        if (result == NULL)
-                return FALSE;
-        g_variant_unref (result);
-        return TRUE;
-}
-
-static gboolean
-claim (EnrollData *data, GError **error)
-{
-        GVariant *result;
-
-        result = g_dbus_proxy_call_sync (data->device, "Claim", g_variant_new ("(s)", ""), G_DBUS_CALL_FLAGS_NONE, -1, NULL, error);
-        if (result == NULL)
-                return FALSE;
-        g_variant_unref (result);
-        return TRUE;
-}
-
-static gboolean
-release (EnrollData *data, GError **error)
-{
-        GVariant *result;
-
-        result = g_dbus_proxy_call_sync (data->device, "Release", g_variant_new ("()"), G_DBUS_CALL_FLAGS_NONE, -1, NULL, error);
-        if (result == NULL)
-                return FALSE;
-        g_variant_unref (result);
-        return TRUE;
-}
-
-static void
-enroll_data_destroy (EnrollData *data)
-{
-        switch (data->state) {
-        case STATE_ENROLLING:
-                enroll_stop (data, NULL);
-                /* fall-through */
-        case STATE_CLAIMED:
-                release (data, NULL);
-                /* fall-through */
-        case STATE_NONE:
-                g_free (data->name);
-                g_object_unref (data->device);
-                g_object_unref (data->dialog);
-                gtk_widget_destroy (data->ass);
-
-                g_free (data);
-        }
-}
-
-static const char *
-selected_finger (GtkBuilder *dialog)
-{
-        int index;
-
-        if (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (WID ("radiobutton1")))) {
-                gtk_widget_set_sensitive (WID ("finger_combobox"), FALSE);
-                return "right-index-finger";
-        }
-        if (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (WID ("radiobutton2")))) {
-                gtk_widget_set_sensitive (WID ("finger_combobox"), FALSE);
-                return "left-index-finger";
-        }
-        gtk_widget_set_sensitive (WID ("finger_combobox"), TRUE);
-        index = gtk_combo_box_get_active (GTK_COMBO_BOX (WID ("finger_combobox")));
-        switch (index) {
-        case 0:
-                return "left-thumb";
-        case 1:
-                return "left-middle-finger";
-        case 2:
-                return "left-ring-finger";
-        case 3:
-                return "left-little-finger";
-        case 4:
-                return "right-thumb";
-        case 5:
-                return "right-middle-finger";
-        case 6:
-                return "right-ring-finger";
-        case 7:
-                return "right-little-finger";
-        default:
-                g_assert_not_reached ();
-        }
-
-        return NULL;
-}
-
-static void
-finger_radio_button_toggled (GtkToggleButton *button, EnrollData *data)
-{
-        GtkBuilder *dialog = data->dialog;
-        char *msg;
-
-        data->finger = selected_finger (data->dialog);
-
-        msg = g_strdup_printf (TR(finger_str_to_msg (data->finger, data->is_swipe)), data->name);
-        gtk_label_set_text (GTK_LABEL (WID("enroll-label")), msg);
-        g_free (msg);
-}
-
-static void
-finger_combobox_changed (GtkComboBox *combobox, EnrollData *data)
-{
-        GtkBuilder *dialog = data->dialog;
-        char *msg;
-
-        data->finger = selected_finger (data->dialog);
-
-        msg = g_strdup_printf (TR(finger_str_to_msg (data->finger, data->is_swipe)), data->name);
-        gtk_label_set_text (GTK_LABEL (WID("enroll-label")), msg);
-        g_free (msg);
-}
-
-static void
-assistant_cancelled (GtkAssistant *ass, EnrollData *data)
-{
-        GtkWidget *label1, *label2;
-
-        label1 = data->label1;
-        label2 = data->label2;
-
-        enroll_data_destroy (data);
-        set_fingerprint_label (label1, label2);
-}
-
-static void
-enroll_result (EnrollData *data, const char *result, gboolean done)
-{
-        GtkBuilder *dialog = data->dialog;
-        char *msg;
-
-        if (g_str_equal (result, "enroll-completed") || g_str_equal (result, "enroll-stage-passed")) {
-                char *name, *path;
-
-                data->num_stages_done++;
-                name = g_strdup_printf ("image%d", data->num_stages_done);
-                path = g_strdup_printf ("/org/gnome/control-center/user-accounts/print_ok.png");
-                gtk_image_set_from_resource (GTK_IMAGE (WID (name)), path);
-                g_free (name);
-                g_free (path);
-        }
-        if (g_str_equal (result, "enroll-completed")) {
-                gtk_label_set_text (GTK_LABEL (WID ("status-label")), _("Done!"));
-                gtk_label_set_text (GTK_LABEL (WID("enroll-label")), "");
-                gtk_assistant_set_page_complete (GTK_ASSISTANT (data->ass), WID ("page2"), TRUE);
-        }
-
-        if (done != FALSE) {
-                enroll_stop (data, NULL);
-                data->state = STATE_CLAIMED;
-                if (g_str_equal (result, "enroll-completed") == FALSE) {
-                        /* The enrollment failed, restart it */
-                        enroll_start (data, NULL);
-                        data->state = STATE_ENROLLING;
-                        result = "enroll-retry-scan";
-                } else {
-                        return;
-                }
-        }
-
-        msg = g_strdup_printf (TR(enroll_result_str_to_msg (result, data->is_swipe)), data->name);
-        gtk_label_set_text (GTK_LABEL (WID ("status-label")), msg);
-        g_free (msg);
-}
-
-static void
-device_signal_cb (GDBusProxy *proxy, gchar *sender_name, gchar *signal_name, GVariant *parameters, EnrollData *data)
-{
-        if (strcmp (signal_name, "EnrollStatus") == 0) {
-                if (g_variant_is_of_type (parameters, G_VARIANT_TYPE ("(sb)"))) {
-                        gchar *result;
-                        gboolean done;
-
-                        g_variant_get (parameters, "(&sb)", &result, &done);
-                        enroll_result (data, result, done);
-                }
-        }
-}
-
-static void
-assistant_prepare (GtkAssistant *ass, GtkWidget *page, EnrollData *data)
-{
-        const char *name;
-
-        name = g_object_get_data (G_OBJECT (page), "name");
-        if (name == NULL)
-                return;
-
-        if (g_str_equal (name, "enroll")) {
-                GError *error = NULL;
-                GtkBuilder *dialog = data->dialog;
-                char *path;
-                guint i;
-                GVariant *result;
-                gint num_enroll_stages;
-
-                if (!claim (data, &error)) {
-                        GtkWidget *d;
-                        char *msg;
-
-                        /* translators:
-                         * The variable is the name of the device, for example:
-                         * "Could you not access "Digital Persona U.are.U 4000/4000B" device */
-                        msg = g_strdup_printf (_("Could not access '%s' device"), data->name);
-                        d = get_error_dialog (msg, error->message, GTK_WINDOW (data->ass));
-                        g_error_free (error);
-                        gtk_dialog_run (GTK_DIALOG (d));
-                        gtk_widget_destroy (d);
-                        g_free (msg);
-
-                        enroll_data_destroy (data);
-
-                        return;
-                }
-                data->state = STATE_CLAIMED;
-
-                result = g_dbus_connection_call_sync (connection,
-                                                      "net.reactivated.Fprint",
-                                                      g_dbus_proxy_get_object_path (data->device),
-                                                      "org.freedesktop.DBus.Properties",
-                                                      "Get",
-                                                      g_variant_new ("(ss)", "net.reactivated.Fprint.Device", "num-enroll-stages"),
-                                                      G_VARIANT_TYPE ("(v)"),
-                                                      G_DBUS_CALL_FLAGS_NONE,
-                                                      -1,
-                                                      NULL,
-                                                      &error);
-                num_enroll_stages = 0;
-                if (result) {
-                        GVariant *v;
-
-                        g_variant_get (result, "(v)", &v);
-                        num_enroll_stages = g_variant_get_int32 (v);
-
-                        g_variant_unref (result);
-                        g_variant_unref (v);
-                }
-
-                if (num_enroll_stages < 1) {
-                        GtkWidget *d;
-                        char *msg;
-
-                        /* translators:
-                         * The variable is the name of the device, for example:
-                         * "Could you not access "Digital Persona U.are.U 4000/4000B" device */
-                        msg = g_strdup_printf (_("Could not access '%s' device"), data->name);
-                        d = get_error_dialog (msg, "net.reactivated.Fprint.Error.Internal", GTK_WINDOW (data->ass));
-                        gtk_dialog_run (GTK_DIALOG (d));
-                        gtk_widget_destroy (d);
-                        g_free (msg);
-
-                        enroll_data_destroy (data);
-                        return;
-                }
-
-                data->num_enroll_stages = num_enroll_stages;
-
-                /* Hide the extra "bulbs" if not needed */
-                for (i = MAX_ENROLL_STAGES; i > data->num_enroll_stages; i--) {
-                        char *name;
-
-                        name = g_strdup_printf ("image%d", i);
-                        gtk_widget_hide (WID (name));
-                        g_free (name);
-                }
-                /* And set the right image */
-                {
-                        path = g_strdup_printf ("/org/gnome/control-center/user-accounts/%s.png", data->finger);
-                }
-                for (i = 1; i <= data->num_enroll_stages; i++) {
-                        char *name;
-                        name = g_strdup_printf ("image%d", i);
-                        gtk_image_set_from_resource (GTK_IMAGE (WID (name)), path);
-                        g_free (name);
-                }
-                g_free (path);
-
-                g_signal_connect (data->device, "g-signal", G_CALLBACK (device_signal_cb), data);
-
-                if (!enroll_start (data, &error)) {
-                        GtkWidget *d;
-                        char *msg;
-
-                        /* translators:
-                         * The variable is the name of the device, for example:
-                         * "Could you not access "Digital Persona U.are.U 4000/4000B" device */
-                        msg = g_strdup_printf (_("Could not start finger capture on '%s' device"), data->name);
-                        d = get_error_dialog (msg, error->message, GTK_WINDOW (data->ass));
-                        g_error_free (error);
-                        gtk_dialog_run (GTK_DIALOG (d));
-                        gtk_widget_destroy (d);
-                        g_free (msg);
-
-                        enroll_data_destroy (data);
-
-                        return;
-                }
-                data->state = STATE_ENROLLING;;
-        } else {
-                if (data->state == STATE_ENROLLING) {
-                        enroll_stop (data, NULL);
-                        data->state = STATE_CLAIMED;
-                }
-                if (data->state == STATE_CLAIMED) {
-                        release (data, NULL);
-                        data->state = STATE_NONE;
-                }
-        }
-}
-
-static void
-enroll_fingerprints (GtkWindow *parent,
-                     GtkWidget *label1,
-                     GtkWidget *label2,
-                     ActUser   *user)
-{
-        GDBusProxy *device;
-        GtkBuilder *dialog;
-        EnrollData *data;
-        GtkWidget *ass;
-        char *msg;
-        GVariant *result;
-        GError *error = NULL;
-
-        device = NULL;
-
-        if (manager == NULL) {
-                create_manager ();
-                if (manager != NULL)
-                        device = get_first_device ();
-        } else {
-                device = get_first_device ();
-        }
-
-        if (manager == NULL || device == NULL) {
-                GtkWidget *d;
-
-                d = get_error_dialog (_("Could not access any fingerprint readers"),
-                                      _("Please contact your system administrator for help."),
-                                      parent);
-                gtk_dialog_run (GTK_DIALOG (d));
-                gtk_widget_destroy (d);
-                return;
-        }
-
-        data = g_new0 (EnrollData, 1);
-        data->device = device;
-        data->label1 = label1;
-        data->label2 = label2;
-
-        /* Get some details about the device */
-        result = g_dbus_connection_call_sync (connection,
-                                              "net.reactivated.Fprint",
-                                              g_dbus_proxy_get_object_path (data->device),
-                                              "org.freedesktop.DBus.Properties",
-                                              "GetAll",
-                                              g_variant_new ("(s)", "net.reactivated.Fprint.Device"),
-                                              G_VARIANT_TYPE ("(a{sv})"),
-                                              G_DBUS_CALL_FLAGS_NONE,
-                                              -1,
-                                              NULL,
-                                              NULL);
-        if (result) {
-                GVariant *props;
-                gchar *scan_type;
-
-                g_variant_get (result, "(@a{sv})", &props);
-                g_variant_lookup (props, "name", "s", &data->name);
-                g_variant_lookup (props, "scan-type", "s", &scan_type);
-                if (g_strcmp0 (scan_type, "swipe") == 0)
-                        data->is_swipe = TRUE;
-                g_free (scan_type);
-                g_variant_unref (props);
-                g_variant_unref (result);
-        }
-
-        dialog = gtk_builder_new ();
-        if (!gtk_builder_add_from_resource (dialog,
-                                            "/org/gnome/control-center/user-accounts/account-fingerprint.ui",
-                                            &error)) {
-                g_error ("%s", error->message);
-                g_error_free (error);
-                return;
-        }
-        data->dialog = dialog;
-
-        ass = WID ("assistant");
-        gtk_window_set_title (GTK_WINDOW (ass), _("Enable Fingerprint Login"));
-        gtk_window_set_transient_for (GTK_WINDOW (ass), parent);
-        gtk_window_set_modal (GTK_WINDOW (ass), TRUE);
-        gtk_window_set_resizable (GTK_WINDOW (ass), FALSE);
-        gtk_window_set_type_hint (GTK_WINDOW (ass), GDK_WINDOW_TYPE_HINT_DIALOG);
-
-        g_signal_connect (G_OBJECT (ass), "cancel",
-                          G_CALLBACK (assistant_cancelled), data);
-        g_signal_connect (G_OBJECT (ass), "close",
-                          G_CALLBACK (assistant_cancelled), data);
-        g_signal_connect (G_OBJECT (ass), "prepare",
-                          G_CALLBACK (assistant_prepare), data);
-
-        /* Page 1 */
-        gtk_combo_box_set_active (GTK_COMBO_BOX (WID ("finger_combobox")), 0);
-
-        g_signal_connect (G_OBJECT (WID ("radiobutton1")), "toggled",
-                          G_CALLBACK (finger_radio_button_toggled), data);
-        g_signal_connect (G_OBJECT (WID ("radiobutton2")), "toggled",
-                          G_CALLBACK (finger_radio_button_toggled), data);
-        g_signal_connect (G_OBJECT (WID ("radiobutton3")), "toggled",
-                          G_CALLBACK (finger_radio_button_toggled), data);
-        g_signal_connect (G_OBJECT (WID ("finger_combobox")), "changed",
-                          G_CALLBACK (finger_combobox_changed), data);
-
-        data->finger = selected_finger (dialog);
-
-        g_object_set_data (G_OBJECT (WID("page1")), "name", "intro");
-
-        /* translators:
-         * The variable is the name of the device, for example:
-         * "To enable fingerprint login, you need to save one of your fingerprints, using the
-         * 'Digital Persona U.are.U 4000/4000B' device."
-         */
-        msg = g_strdup_printf (_("To enable fingerprint login, you need to save one of your fingerprints, using the '%s' device."),
-                               data->name);
-        gtk_label_set_text (GTK_LABEL (WID("intro-label")), msg);
-        g_free (msg);
-
-        gtk_assistant_set_page_complete (GTK_ASSISTANT (ass), WID("page1"), TRUE);
-
-        gtk_assistant_set_page_title (GTK_ASSISTANT (ass), WID("page1"), _("Selecting finger"));
-        gtk_assistant_set_page_title (GTK_ASSISTANT (ass), WID("page2"), _("Enrolling fingerprints"));
-        gtk_assistant_set_page_title (GTK_ASSISTANT (ass), WID("page3"), _("Summary"));
-
-        /* Page 2 */
-        g_object_set_data (G_OBJECT (WID("page2")), "name", "enroll");
-
-        msg = g_strdup_printf (TR(finger_str_to_msg (data->finger, data->is_swipe)), data->name);
-        gtk_label_set_text (GTK_LABEL (WID("enroll-label")), msg);
-        g_free (msg);
-
-        /* Page 3 */
-        g_object_set_data (G_OBJECT (WID("page3")), "name", "summary");
-
-        data->ass = ass;
-        gtk_widget_show_all (ass);
-}
-
-void
-fingerprint_button_clicked (GtkWindow *parent,
-                            GtkWidget *label1,
-                            GtkWidget *label2,
-                            ActUser   *user)
-{
-        bindtextdomain ("fprintd", GNOMELOCALEDIR);
-        bind_textdomain_codeset ("fprintd", "UTF-8");
-
-        if (is_disable != FALSE) {
-                delete_fingerprints_question (parent, label1, label2, user);
-        } else {
-                enroll_fingerprints (parent, label1, label2, user);
-        }
-}
-
diff --git a/panels/user-accounts/um-fingerprint-dialog.h b/panels/user-accounts/um-fingerprint-dialog.h
deleted file mode 100644
index fd2fcd0..0000000
--- a/panels/user-accounts/um-fingerprint-dialog.h
+++ /dev/null
@@ -1,28 +0,0 @@
-/* gnome-about-me-fingerprint.h
- * Copyright (C) 2008 Bastien Nocera <hadess@hadess.net>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2, or (at your option)
- * any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
- * 02111-1307, USA.
- */
-
-#include <gtk/gtk.h>
-#include <act/act.h>
-
-gboolean set_fingerprint_label (GtkWidget *label1,
-                                GtkWidget *label2);
-void fingerprint_button_clicked (GtkWindow *parent,
-                                 GtkWidget *label1,
-                                 GtkWidget *label2,
-                                 ActUser   *user);
diff --git a/panels/user-accounts/um-history-dialog.c b/panels/user-accounts/um-history-dialog.c
deleted file mode 100644
index bcac677..0000000
--- a/panels/user-accounts/um-history-dialog.c
+++ /dev/null
@@ -1,375 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2012  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Ondrej Holy <oholy@redhat.com>
- */
-
-#include "config.h"
-
-#include <unistd.h>
-#include <stdlib.h>
-#include <sys/types.h>
-#include <sys/wait.h>
-
-#include <glib.h>
-#include <glib/gi18n.h>
-#include <gtk/gtk.h>
-#include <act/act.h>
-
-#include "um-history-dialog.h"
-#include "um-utils.h"
-
-struct _UmHistoryDialog {
-        GtkWidget *dialog;
-        GtkBuilder *builder;
-
-        GDateTime *week;
-        GDateTime *current_week;
-
-        ActUser *user;
-};
-
-typedef struct {
-	gint64 login_time;
-	gint64 logout_time;
-	const gchar *type;
-} UmLoginHistory;
-
-static GtkWidget *
-get_widget (UmHistoryDialog *um,
-            const char *name)
-{
-        return (GtkWidget *)gtk_builder_get_object (um->builder, name);
-}
-
-static void
-close_history_dialog (GtkButton       *button,
-                      UmHistoryDialog *um)
-{
-        gtk_widget_hide (um->dialog);
-
-        um_history_dialog_set_user (um, NULL);
-
-        if (um->week) {
-                g_date_time_unref (um->week);
-                um->week = NULL;
-        }
-
-        if (um->current_week) {
-                g_date_time_unref (um->current_week);
-                um->current_week = NULL;
-        }
-}
-
-static void
-show_week_label (UmHistoryDialog *um)
-{
-        gchar *label, *from, *to;
-        GDateTime *date;
-        GTimeSpan span;
-
-        span = g_date_time_difference (um->current_week, um->week);
-        if (span == 0) {
-                label = g_strdup (_("This Week"));
-        }
-        else if (span == G_TIME_SPAN_DAY * 7) {
-                label = g_strdup (_("Last Week"));
-        }
-        else {
-                date = g_date_time_add_days (um->week, 6);
-                from = g_date_time_format (um->week, "%b %e");
-                if (g_date_time_get_year (um->week) == g_date_time_get_year (um->current_week)) {
-                        to = g_date_time_format (date, "%b %e");
-                }
-                else {
-                        to = g_date_time_format (date, "%b %e, %Y");
-                }
-
-                label = g_strconcat (from, " - ", to, NULL);
-
-                g_date_time_unref (date);
-                g_free (from);
-                g_free (to);
-        }
-
-        gtk_label_set_label (GTK_LABEL (get_widget (um, "week-label")), label);
-
-        g_free (label);
-}
-
-static void
-clear_history (UmHistoryDialog *um)
-{
-        GtkWidget *grid;
-        GList *list, *it;
-
-        grid = get_widget (um, "history-grid");
-        list = gtk_container_get_children (GTK_CONTAINER (grid));
-        for (it = list; it != NULL;  it = it->next) {
-                gtk_container_remove (GTK_CONTAINER (grid), GTK_WIDGET (it->data));
-        }
-        g_list_free (list);
-}
-
-static GArray *
-get_login_history (ActUser *user)
-{
-	GArray *login_history;
-	GVariantIter *iter, *iter2;
-	GVariant *variant;
-	const GVariant *value;
-	const gchar *key;
-	UmLoginHistory history;
-
-	login_history = NULL;
-	value = act_user_get_login_history (user);
-	g_variant_get ((GVariant *) value, "a(xxa{sv})", &iter);
-	while (g_variant_iter_loop (iter, "(xxa{sv})", &history.login_time, &history.logout_time, &iter2)) {
-		while (g_variant_iter_loop (iter2, "{sv}", &key, &variant)) {
-			if (g_strcmp0 (key, "type") == 0) {
-				history.type = g_variant_get_string (variant, NULL);
-			}
-		}
-
-		if (login_history == NULL) {
-			login_history = g_array_new (FALSE, TRUE, sizeof (UmLoginHistory));
-		}
-
-		g_array_append_val (login_history, history);
-	}
-
-	return login_history;
-}
-
-static void
-set_sensitivity (UmHistoryDialog *um)
-{
-        GArray *login_history;
-        UmLoginHistory history;
-        gboolean sensitive = FALSE;
-
-        login_history = get_login_history (um->user);
-        if (login_history != NULL) {
-                history = g_array_index (login_history, UmLoginHistory, 0);
-                sensitive = g_date_time_to_unix (um->week) > history.login_time;
-                g_array_free (login_history, TRUE);
-        }
-        gtk_widget_set_sensitive (get_widget (um, "previous-button"), sensitive);
-
-        sensitive = (g_date_time_compare (um->current_week, um->week) == 1);
-        gtk_widget_set_sensitive (get_widget (um, "next-button"), sensitive);
-}
-
-static void
-add_record (GtkWidget *grid, GDateTime *datetime, gchar *record_string, gint line)
-{
-        gchar *date, *time, *str;
-        GtkWidget *label;
-
-        date = get_smart_date (datetime);
-        time = g_date_time_format (datetime, "%k:%M");
-        str = g_strconcat (date, ", ", time, NULL);
-        label = gtk_label_new (str);
-        gtk_widget_set_halign (label, GTK_ALIGN_START);
-        gtk_grid_attach (GTK_GRID (grid), label, 1, line, 1, 1);
-        g_free (str);
-        g_free (date);
-        g_free (time);
-        g_date_time_unref (datetime);
-
-        label = gtk_label_new (record_string);
-        gtk_widget_set_halign (label, GTK_ALIGN_START);
-        gtk_grid_attach (GTK_GRID (grid), label, 2, line, 1, 1);
-}
-
-static void
-show_week (UmHistoryDialog *um)
-{
-        GArray *login_history;
-        GDateTime *datetime, *temp;
-        gint64 from, to;
-        gint i, line;
-        GtkWidget *grid;
-        UmLoginHistory history;
-
-        show_week_label (um);
-        clear_history (um);
-        set_sensitivity (um);
-
-        login_history = get_login_history (um->user);
-        if (login_history == NULL) {
-                return;
-        }
-
-        /* Find first record for week */
-        from = g_date_time_to_unix (um->week);
-        temp = g_date_time_add_weeks (um->week, 1);
-        to = g_date_time_to_unix (temp);
-        g_date_time_unref (temp);
-        for (i = login_history->len - 1; i >= 0; i--) {
-                history = g_array_index (login_history, UmLoginHistory, i);
-                if (history.login_time < to) {
-                        break;
-                }
-        }
-
-        /* Add new session records */
-        grid = get_widget (um, "history-grid");
-        line = 0;
-        for (;i >= 0; i--) {
-                history = g_array_index (login_history, UmLoginHistory, i);
-                if (history.logout_time > 0 && history.logout_time < from) {
-                        break;
-                }
-
-                /* Display only x-session records */
-                if (!g_str_has_prefix (history.type, ":")) {
-                        continue;
-                }
-
-                if (history.logout_time > 0 && history.logout_time < to) {
-                        datetime = g_date_time_new_from_unix_local (history.logout_time);
-                        add_record (grid, datetime, "Session Ended", line);
-                        line++;
-                }
-
-                if (history.login_time >= from) {
-                        datetime = g_date_time_new_from_unix_local (history.login_time);
-                        add_record (grid, datetime, "Session Started", line);
-                        line++;
-                }
-        }
-
-        gtk_widget_show_all (grid);
-
-        g_array_free (login_history, TRUE);
-}
-
-static void
-show_previous (GtkButton       *button,
-               UmHistoryDialog *um)
-{
-        GDateTime *temp;
-
-        temp = um->week;
-        um->week = g_date_time_add_weeks (um->week, -1);
-        g_date_time_unref (temp);
-
-        show_week (um);
-}
-
-static void
-show_next (GtkButton       *button,
-           UmHistoryDialog *um)
-{
-        GDateTime *temp;
-
-        temp = um->week;
-        um->week = g_date_time_add_weeks (um->week, 1);
-        g_date_time_unref (temp);
-
-        show_week (um);
-}
-
-void
-um_history_dialog_set_user (UmHistoryDialog *um,
-                            ActUser         *user)
-{
-        if (um->user) {
-                g_clear_object (&um->user);
-        }
-
-        if (user) {
-                um->user = g_object_ref (user);
-        }
-}
-
-void
-um_history_dialog_show (UmHistoryDialog *um,
-                        GtkWindow       *parent)
-{
-        GDateTime *temp, *local;
-
-        /* Set the first day of this week */
-        local = g_date_time_new_now_local ();
-        temp = g_date_time_new_local (g_date_time_get_year (local),
-                                      g_date_time_get_month (local),
-                                      g_date_time_get_day_of_month (local),
-                                      0, 0, 0);
-        um->week = g_date_time_add_days (temp, 1 - g_date_time_get_day_of_week (temp));
-        um->current_week = g_date_time_ref (um->week);
-        g_date_time_unref (local);
-        g_date_time_unref (temp);
-
-        show_week (um);
-
-        gtk_window_set_transient_for (GTK_WINDOW (um->dialog), parent);
-        gtk_window_present (GTK_WINDOW (um->dialog));
-}
-
-UmHistoryDialog *
-um_history_dialog_new (void)
-{
-        GError *error = NULL;
-        UmHistoryDialog *um;
-        GtkWidget *widget;
-
-        um = g_new0 (UmHistoryDialog, 1);
-        um->builder = gtk_builder_new ();
-
-        if (!gtk_builder_add_from_resource (um->builder, "/org/gnome/control-center/user-accounts/history-dialog.ui", &error)) {
-                g_error ("%s", error->message);
-                g_error_free (error);
-                g_free (um);
-
-                return NULL;
-        }
-
-        um->dialog = get_widget (um, "dialog");
-        g_signal_connect (um->dialog, "delete-event", G_CALLBACK (gtk_widget_hide_on_delete), NULL);
-
-        widget = get_widget (um, "close-button");
-        g_signal_connect (widget, "clicked", G_CALLBACK (close_history_dialog), um);
-
-        widget = get_widget (um, "next-button");
-        g_signal_connect (widget, "clicked", G_CALLBACK (show_next), um);
-
-        widget = get_widget (um, "previous-button");
-        g_signal_connect (widget, "clicked", G_CALLBACK (show_previous), um);
-
-        return um;
-}
-
-void
-um_history_dialog_free (UmHistoryDialog *um)
-{
-        gtk_widget_destroy (um->dialog);
-
-        g_clear_object (&um->user);
-        g_clear_object (&um->builder);
-
-        if (um->week) {
-                g_date_time_unref (um->week);
-        }
-
-        if (um->current_week) {
-                g_date_time_unref (um->current_week);
-        }
-
-        g_free (um);
-}
diff --git a/panels/user-accounts/um-history-dialog.h b/panels/user-accounts/um-history-dialog.h
deleted file mode 100644
index f0fbe9e..0000000
--- a/panels/user-accounts/um-history-dialog.h
+++ /dev/null
@@ -1,41 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2012  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Ondrej Holy <oholy@redhat.com>
- */
-
-#ifndef __UM_HISTORY_DIALOG_H__
-#define __UM_HISTORY_DIALOG_H__
-
-#include <gtk/gtk.h>
-#include <act/act-user.h>
-
-G_BEGIN_DECLS
-
-typedef struct _UmHistoryDialog UmHistoryDialog;
-
-UmHistoryDialog *um_history_dialog_new      (void);
-void             um_history_dialog_free     (UmHistoryDialog *dialog);
-void             um_history_dialog_set_user (UmHistoryDialog *dialog,
-                                             ActUser         *user);
-void             um_history_dialog_show     (UmHistoryDialog *dialog,
-                                             GtkWindow       *parent);
-
-G_END_DECLS
-
-#endif
diff --git a/panels/user-accounts/um-password-dialog.c b/panels/user-accounts/um-password-dialog.c
deleted file mode 100644
index f5ad624..0000000
--- a/panels/user-accounts/um-password-dialog.c
+++ /dev/null
@@ -1,822 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#include "config.h"
-
-#include <unistd.h>
-#include <stdlib.h>
-#include <sys/types.h>
-#include <sys/wait.h>
-
-#include <glib.h>
-#include <glib/gi18n.h>
-#include <gtk/gtk.h>
-#include <act/act.h>
-
-#include "um-password-dialog.h"
-#include "um-utils.h"
-#include "run-passwd.h"
-#include "pw-utils.h"
-
-struct _UmPasswordDialog {
-        GtkWidget *dialog;
-        GtkWidget *user_icon;
-        GtkWidget *user_name;
-        GtkWidget *action_label;
-        GtkWidget *action_combo;
-        GtkWidget *password_entry;
-        GtkWidget *verify_entry;
-        GtkWidget *strength_indicator;
-        GtkWidget *strength_indicator_label;
-        GtkWidget *normal_hint_entry;
-        GtkWidget *normal_hint_label;
-        GtkWidget *show_password_button;
-        GtkWidget *ok_button;
-
-        ActUser *user;
-        gboolean using_ecryptfs;
-
-        GtkWidget *old_password_label;
-        GtkWidget *old_password_entry;
-        gboolean   old_password_ok;
-
-        PasswdHandler *passwd_handler;
-};
-
-typedef enum {
-        UM_PASSWORD_DIALOG_MODE_NORMAL = 0,
-        UM_PASSWORD_DIALOG_MODE_SET_AT_LOGIN,
-        UM_PASSWORD_DIALOG_MODE_NO_PASSWORD,
-        UM_PASSWORD_DIALOG_MODE_LOCK_ACCOUNT,
-        UM_PASSWORD_DIALOG_MODE_UNLOCK_ACCOUNT
-} UmPasswordDialogMode;
-
-static int
-update_password_strength (UmPasswordDialog *um)
-{
-        const gchar *password;
-        const gchar *old_password;
-        const gchar *username;
-        gint strength_level;
-        const gchar *hint;
-        const gchar *long_hint;
-
-        password = gtk_entry_get_text (GTK_ENTRY (um->password_entry));
-        old_password = gtk_entry_get_text (GTK_ENTRY (um->old_password_entry));
-        username = act_user_get_user_name (um->user);
-
-        pw_strength (password, old_password, username,
-                     &hint, &long_hint, &strength_level);
-
-        gtk_level_bar_set_value (GTK_LEVEL_BAR (um->strength_indicator), strength_level);
-        gtk_label_set_label (GTK_LABEL (um->strength_indicator_label), hint);
-        gtk_widget_set_tooltip_text (um->strength_indicator, long_hint);
-        gtk_widget_set_tooltip_text (um->strength_indicator_label, long_hint);
-
-        return strength_level;
-}
-
-static void
-generate_one_password (GtkWidget        *widget,
-                       UmPasswordDialog *um)
-{
-        gchar *pwd;
-
-        pwd = pw_generate ();
-
-        gtk_entry_set_text (GTK_ENTRY (um->password_entry), pwd);
-        gtk_entry_set_text (GTK_ENTRY (um->verify_entry), "");
-
-
-        gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (um->show_password_button),
-                                      TRUE);
-
-        g_free (pwd);
-}
-
-static void
-activate_icon (GtkEntry             *entry,
-               GtkEntryIconPosition  pos,
-               GdkEventButton       *event,
-               UmPasswordDialog     *um)
-{
-        generate_one_password (GTK_WIDGET (entry), um);
-}
-
-static void
-populate_menu (GtkEntry         *entry,
-               GtkMenu          *menu,
-               UmPasswordDialog *um)
-{
-        GtkWidget *item;
-
-        item = gtk_menu_item_new_with_mnemonic (_("_Generate a password"));
-        g_signal_connect (item, "activate",
-                          G_CALLBACK (generate_one_password), um);
-        gtk_widget_show (item);
-        gtk_menu_shell_append (GTK_MENU_SHELL (menu), item);
-}
-
-static void
-finish_password_change (UmPasswordDialog *um)
-{
-        gtk_widget_hide (um->dialog);
-
-        gtk_entry_set_text (GTK_ENTRY (um->password_entry), " ");
-        gtk_entry_set_text (GTK_ENTRY (um->verify_entry), "");
-        gtk_entry_set_text (GTK_ENTRY (um->normal_hint_entry), "");
-        gtk_entry_set_text (GTK_ENTRY (um->old_password_entry), "");
-
-        um_password_dialog_set_user (um, NULL);
-}
-
-static void
-cancel_password_dialog (GtkButton        *button,
-                        UmPasswordDialog *um)
-{
-        finish_password_change (um);
-}
-
-static void
-dialog_closed (GtkWidget        *dialog,
-               gint              response_id,
-               UmPasswordDialog *um)
-{
-        gtk_widget_destroy (dialog);
-}
-
-static void
-password_changed_cb (PasswdHandler    *handler,
-                     GError           *error,
-                     UmPasswordDialog *um)
-{
-        GtkWidget *dialog;
-        const gchar *primary_text;
-        const gchar *secondary_text;
-
-        gtk_widget_set_sensitive (um->dialog, TRUE);
-        gdk_window_set_cursor (gtk_widget_get_window (um->dialog), NULL);
-
-        if (!error) {
-                finish_password_change (um);
-                return;
-        }
-
-        if (error->code == PASSWD_ERROR_REJECTED) {
-                primary_text = error->message;
-                secondary_text = _("Please choose another password.");
-
-                gtk_entry_set_text (GTK_ENTRY (um->password_entry), "");
-                gtk_widget_grab_focus (um->password_entry);
-
-                gtk_entry_set_text (GTK_ENTRY (um->verify_entry), "");
-        }
-        else if (error->code == PASSWD_ERROR_AUTH_FAILED) {
-                primary_text = error->message;
-                secondary_text = _("Please type your current password again.");
-
-                gtk_entry_set_text (GTK_ENTRY (um->old_password_entry), "");
-                gtk_widget_grab_focus (um->old_password_entry);
-        }
-        else {
-                primary_text = _("Password could not be changed");
-                secondary_text = error->message;
-        }
-
-        dialog = gtk_message_dialog_new (GTK_WINDOW (um->dialog),
-                                         GTK_DIALOG_MODAL,
-                                         GTK_MESSAGE_ERROR,
-                                         GTK_BUTTONS_CLOSE,
-                                         "%s", primary_text);
-        gtk_message_dialog_format_secondary_text (GTK_MESSAGE_DIALOG (dialog),
-                                                  "%s", secondary_text);
-        g_signal_connect (dialog, "response",
-                          G_CALLBACK (dialog_closed), um);
-        gtk_window_present (GTK_WINDOW (dialog));
-
-}
-
-static void
-accept_password_dialog (GtkButton        *button,
-                        UmPasswordDialog *um)
-{
-        GtkTreeModel *model;
-        GtkTreeIter iter;
-        gint mode;
-        const gchar *hint;
-        const gchar *password;
-
-        model = gtk_combo_box_get_model (GTK_COMBO_BOX (um->action_combo));
-        gtk_combo_box_get_active_iter (GTK_COMBO_BOX (um->action_combo), &iter);
-        gtk_tree_model_get (model, &iter, 1, &mode, -1);
-
-        password = gtk_entry_get_text (GTK_ENTRY (um->password_entry));
-        hint = gtk_entry_get_text (GTK_ENTRY (um->normal_hint_entry));
-
-        switch (mode) {
-                case UM_PASSWORD_DIALOG_MODE_NORMAL:
-                        if (act_user_get_uid (um->user) == getuid ()) {
-                                GdkDisplay *display;
-                                GdkCursor *cursor;
-
-                                /* When setting a password for the current user,
-                                 * use passwd directly, to preserve the audit trail
-                                 * and to e.g. update the keyring password.
-                                 */
-                                passwd_change_password (um->passwd_handler, password,
-                                                        (PasswdCallback) password_changed_cb, um);
-                                gtk_widget_set_sensitive (um->dialog, FALSE);
-                                display = gtk_widget_get_display (um->dialog);
-                                cursor = gdk_cursor_new_for_display (display, GDK_WATCH);
-                                gdk_window_set_cursor (gtk_widget_get_window (um->dialog), cursor);
-                                gdk_display_flush (display);
-                                g_object_unref (cursor);
-                                return;
-                        }
-
-                        act_user_set_password_mode (um->user, ACT_USER_PASSWORD_MODE_REGULAR);
-                        act_user_set_password (um->user, password, hint);
-                        break;
-
-                case UM_PASSWORD_DIALOG_MODE_SET_AT_LOGIN:
-                        act_user_set_password_mode (um->user, ACT_USER_PASSWORD_MODE_SET_AT_LOGIN);
-                        act_user_set_automatic_login (um->user, FALSE);
-                        break;
-
-                case UM_PASSWORD_DIALOG_MODE_NO_PASSWORD:
-                        act_user_set_password_mode (um->user, ACT_USER_PASSWORD_MODE_NONE);
-                        break;
-
-                case UM_PASSWORD_DIALOG_MODE_LOCK_ACCOUNT:
-                        act_user_set_locked (um->user, TRUE);
-                        act_user_set_automatic_login (um->user, FALSE);
-                        break;
-
-                case UM_PASSWORD_DIALOG_MODE_UNLOCK_ACCOUNT:
-                        act_user_set_locked (um->user, FALSE);
-                        break;
-
-                default:
-                        g_assert_not_reached ();
-        }
-
-        finish_password_change (um);
-}
-
-static void
-update_sensitivity (UmPasswordDialog *um)
-{
-        const gchar *password, *verify;
-        const gchar *old_password;
-        const gchar *tooltip;
-        gboolean can_change;
-        int strength_level;
-
-        password = gtk_entry_get_text (GTK_ENTRY (um->password_entry));
-        verify = gtk_entry_get_text (GTK_ENTRY (um->verify_entry));
-        old_password = gtk_entry_get_text (GTK_ENTRY (um->old_password_entry));
-
-        /* Don't update the password strength if we didn't enter anything */
-        if (password && *password == '\0' &&
-            verify && *verify == '\0' &&
-            old_password && *old_password == '\0') {
-                gtk_widget_set_sensitive (um->ok_button, FALSE);
-                return;
-            }
-
-        strength_level = update_password_strength (um);
-
-        if (strength_level < 1) {
-                can_change = FALSE;
-                if (password[0] == '\0') {
-                        tooltip = _("You need to enter a new password");
-                }
-                else {
-                        tooltip = _("The new password is not strong enough");
-                }
-        }
-        else if (strcmp (password, verify) != 0) {
-                can_change = FALSE;
-                if (verify[0] == '\0') {
-                        tooltip = _("You need to confirm the password");
-                }
-                else {
-                        tooltip = _("The passwords do not match");
-                }
-        }
-        else if (!um->old_password_ok) {
-                can_change = FALSE;
-                if (old_password[0] == '\0') {
-                        tooltip = _("You need to enter your current password");
-                }
-                else {
-                        tooltip = _("The current password is not correct");
-                }
-        }
-        else {
-                can_change = TRUE;
-                tooltip = NULL;
-        }
-
-        gtk_widget_set_sensitive (um->ok_button, can_change);
-        gtk_widget_set_tooltip_text (um->ok_button, tooltip);
-}
-
-static void
-action_changed (GtkComboBox      *combo,
-                UmPasswordDialog *um)
-{
-        gint active;
-
-        active = gtk_combo_box_get_active (combo);
-        if (active == 0) {
-                gtk_widget_set_sensitive (um->password_entry, TRUE);
-                gtk_entry_set_icon_sensitive (GTK_ENTRY (um->password_entry), GTK_ENTRY_ICON_SECONDARY, TRUE);
-                gtk_widget_set_sensitive (um->verify_entry, TRUE);
-                gtk_widget_set_sensitive (um->old_password_entry, TRUE);
-                gtk_widget_set_sensitive (um->normal_hint_entry, TRUE);
-                gtk_widget_set_sensitive (um->normal_hint_label, TRUE);
-                gtk_widget_set_sensitive (um->strength_indicator_label, TRUE);
-                gtk_widget_set_sensitive (um->show_password_button, TRUE);
-
-                update_sensitivity (um);
-        }
-        else {
-                gtk_widget_set_sensitive (um->password_entry, FALSE);
-                gtk_entry_set_icon_sensitive (GTK_ENTRY (um->password_entry), GTK_ENTRY_ICON_SECONDARY, FALSE);
-                gtk_widget_set_sensitive (um->verify_entry, FALSE);
-                gtk_widget_set_sensitive (um->old_password_entry, FALSE);
-                gtk_widget_set_sensitive (um->normal_hint_entry, FALSE);
-                gtk_widget_set_sensitive (um->normal_hint_label, FALSE);
-                gtk_widget_set_sensitive (um->strength_indicator_label, FALSE);
-                gtk_widget_set_sensitive (um->show_password_button, FALSE);
-                gtk_widget_set_sensitive (um->ok_button, TRUE);
-        }
-}
-
-static void
-show_password_toggled (GtkToggleButton  *button,
-                       UmPasswordDialog *um)
-{
-        gboolean active;
-
-        active = gtk_toggle_button_get_active (button);
-        gtk_entry_set_visibility (GTK_ENTRY (um->password_entry), active);
-        gtk_entry_set_visibility (GTK_ENTRY (um->verify_entry), active);
-}
-
-static void
-update_password_match (UmPasswordDialog *um)
-{
-        const char *password;
-        const char *verify;
-
-        password = gtk_entry_get_text (GTK_ENTRY (um->password_entry));
-        verify = gtk_entry_get_text (GTK_ENTRY (um->verify_entry));
-
-        if (strlen (password) > 0 && strlen (verify) > 0) {
-                if (strcmp (password, verify) != 0) {
-                        set_entry_validation_error (GTK_ENTRY (um->verify_entry),
-                                                    _("Passwords do not match"));
-                }
-                else {
-                        clear_entry_validation_error (GTK_ENTRY (um->verify_entry));
-                }
-        }
-}
-
-static void
-password_entry_changed (GtkEntry         *entry,
-                        GParamSpec       *pspec,
-                        UmPasswordDialog *um)
-{
-        update_password_strength (um);
-        update_sensitivity (um);
-        update_password_match (um);
-}
-
-static gboolean
-password_entry_focus_out (GtkWidget        *entry,
-                          GdkEventFocus    *event,
-                          UmPasswordDialog *um)
-{
-        update_password_match (um);
-        return FALSE;
-}
-
-static void
-verify_entry_changed (GtkEntry         *entry,
-                      GParamSpec       *pspec,
-                      UmPasswordDialog *um)
-{
-        clear_entry_validation_error (GTK_ENTRY (entry));
-        update_password_strength (um);
-        update_sensitivity (um);
-}
-
-static gboolean
-verify_entry_focus_out (GtkWidget        *entry,
-                        GdkEventFocus    *event,
-                        UmPasswordDialog *um)
-{
-        update_password_match (um);
-        return FALSE;
-}
-
-static void
-entry_size_changed (GtkWidget     *entry,
-                    GtkAllocation *allocation,
-                    GtkWidget     *label)
-{
-        gtk_widget_set_size_request (label, allocation->width, -1);
-}
-
-static void
-auth_cb (PasswdHandler    *handler,
-         GError           *error,
-         UmPasswordDialog *um)
-{
-        GtkTreeModel *model;
-        GtkTreeIter iter;
-        gint mode;
-
-        model = gtk_combo_box_get_model (GTK_COMBO_BOX (um->action_combo));
-        gtk_combo_box_get_active_iter (GTK_COMBO_BOX (um->action_combo), &iter);
-        gtk_tree_model_get (model, &iter, 1, &mode, -1);
-
-        if (error) {
-                um->old_password_ok = FALSE;
-                set_entry_validation_error (GTK_ENTRY (um->old_password_entry),
-                                            _("Wrong password"));
-        }
-        else {
-                um->old_password_ok = TRUE;
-                clear_entry_validation_error (GTK_ENTRY (um->old_password_entry));
-        }
-
-        /* Check if we are still in normal mode */
-        if (mode != UM_PASSWORD_DIALOG_MODE_NORMAL){
-                return;
-        }
-
-        update_sensitivity (um);
-}
-
-static gboolean
-old_password_entry_focus_out (GtkWidget        *entry,
-                              GdkEventFocus    *event,
-                              UmPasswordDialog *um)
-{
-        const char *text;
-
-        text = gtk_entry_get_text (GTK_ENTRY (entry));
-        if (strlen (text) > 0) {
-                passwd_authenticate (um->passwd_handler, text,
-                                     (PasswdCallback)auth_cb, um);
-        }
-
-        return FALSE;
-}
-
-static void
-old_password_entry_activate (GtkWidget        *entry,
-                             UmPasswordDialog *um)
-{
-        const char *text;
-
-        text = gtk_entry_get_text (GTK_ENTRY (entry));
-        if (strlen (text) > 0) {
-                passwd_authenticate (um->passwd_handler, text,
-                                     (PasswdCallback)auth_cb, um);
-        }
-}
-
-
-static void
-old_password_entry_changed (GtkEntry         *entry,
-                            GParamSpec       *pspec,
-                            UmPasswordDialog *um)
-{
-        clear_entry_validation_error (GTK_ENTRY (entry));
-        um->old_password_ok = FALSE;
-        update_sensitivity (um);
-}
-
-void
-um_password_dialog_set_privileged (UmPasswordDialog *um,
-                                   gboolean          privileged)
-{
-        if (privileged) {
-                gtk_widget_set_visible (um->action_label, TRUE);
-                gtk_widget_set_visible (um->action_combo, TRUE);
-        }
-        else {
-                gtk_combo_box_set_active (GTK_COMBO_BOX (um->action_combo), 0);
-                gtk_widget_set_visible (um->action_label, FALSE);
-                gtk_widget_set_visible (um->action_combo, FALSE);
-        }
-}
-
-int _is_gdm_running = -1;
-gboolean
-is_gdm_running (void)
-{
-        if (_is_gdm_running == -1) {
-                GDBusProxy *proxy;
-                gchar *owner_name;
-
-                proxy = g_dbus_proxy_new_for_bus_sync (G_BUS_TYPE_SYSTEM,
-                                                       G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES |
-                                                       G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS |
-                                                       G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START,
-                                                       NULL,
-                                                       "org.gnome.DisplayManager",
-                                                       "/org/gnome/DisplayManager/Manager",
-                                                       "org.gnome.DisplayManager.Manager",
-                                                       NULL, NULL);
-
-                if (proxy == NULL)
-                        return FALSE;
-
-                owner_name = g_dbus_proxy_get_name_owner (proxy);
-
-                g_object_unref (proxy);
-                g_free (owner_name);
-
-                _is_gdm_running = (owner_name != NULL) ? 1 : 0;
-        }
-
-        return _is_gdm_running;
-}
-
-UmPasswordDialog *
-um_password_dialog_new (void)
-{
-        GtkBuilder *builder;
-        GError *error;
-        UmPasswordDialog *um;
-        GtkWidget *widget;
-        const char *old_label;
-        char *label;
-        gint len;
-
-        builder = gtk_builder_new ();
-
-        error = NULL;
-        if (!gtk_builder_add_from_resource (builder,
-                                            "/org/gnome/control-center/user-accounts/password-dialog.ui",
-                                            &error)) {
-                g_error ("%s", error->message);
-                g_error_free (error);
-                return NULL;
-        }
-
-        um = g_new0 (UmPasswordDialog, 1);
-
-        um->action_label = (GtkWidget *) gtk_builder_get_object (builder, "action-label");
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "action-combo");
-        g_signal_connect (widget, "changed",
-                          G_CALLBACK (action_changed), um);
-        um->action_combo = widget;
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "dialog");
-        g_signal_connect (widget, "delete-event",
-                          G_CALLBACK (gtk_widget_hide_on_delete), NULL);
-        um->dialog = widget;
-
-        um->user_icon = (GtkWidget *) gtk_builder_get_object (builder, "user-icon");
-        um->user_name = (GtkWidget *) gtk_builder_get_object (builder, "user-name");
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "cancel-button");
-        g_signal_connect (widget, "clicked",
-                          G_CALLBACK (cancel_password_dialog), um);
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "ok-button");
-        g_signal_connect (widget, "clicked",
-                          G_CALLBACK (accept_password_dialog), um);
-        gtk_widget_grab_default (widget);
-        um->ok_button = widget;
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "password-normal-strength-hints-label");
-        old_label = gtk_label_get_label (GTK_LABEL (widget));
-        if (!g_strcmp0(g_getenv("XDG_CURRENT_DESKTOP"), "Unity"))
-            label = g_strdup_printf ("<a href=\"%s\">%s</a>",
-                                 "help:ubuntu-help/user-goodpassword",
-                                  old_label);
-        else
-            label = g_strdup_printf ("<a href=\"%s\">%s</a>",
-                                  "help:gnome-help/user-goodpassword",
-                                  old_label);
-        gtk_label_set_markup (GTK_LABEL (widget), label);
-        g_free (label);
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "show-password-checkbutton");
-        g_signal_connect (widget, "toggled",
-                          G_CALLBACK (show_password_toggled), um);
-        um->show_password_button = widget;
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "password-entry");
-        g_signal_connect (widget, "notify::text",
-                          G_CALLBACK (password_entry_changed), um);
-        g_signal_connect_after (widget, "focus-out-event",
-                                G_CALLBACK (password_entry_focus_out), um);
-        gtk_entry_set_visibility (GTK_ENTRY (widget), FALSE);
-
-        g_signal_connect (widget, "icon-press",
-                          G_CALLBACK (activate_icon), um);
-        g_signal_connect (widget, "populate-popup",
-                          G_CALLBACK (populate_menu), um);
-
-        um->password_entry = widget;
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "old-password-entry");
-        g_signal_connect_after (widget, "focus-out-event",
-                                G_CALLBACK (old_password_entry_focus_out), um);
-        g_signal_connect (widget, "notify::text",
-                          G_CALLBACK (old_password_entry_changed), um);
-        g_signal_connect (widget, "activate",
-                          G_CALLBACK (old_password_entry_activate), um);
-        um->old_password_entry = widget;
-        um->old_password_label = (GtkWidget *) gtk_builder_get_object (builder, "old-password-label");
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "verify-entry");
-        g_signal_connect (widget, "notify::text",
-                          G_CALLBACK (verify_entry_changed), um);
-        g_signal_connect_after (widget, "focus-out-event",
-                                G_CALLBACK (verify_entry_focus_out), um);
-        um->verify_entry = widget;
-
-        len = 0;
-        len = MAX (len, strlen (C_("Password strength", "Too short")));
-        len = MAX (len, strlen (C_("Password strength", "Weak")));
-        len = MAX (len, strlen (C_("Password strength", "Fair")));
-        len = MAX (len, strlen (C_("Password strength", "Good")));
-        len = MAX (len, strlen (C_("Password strength", "Strong")));
-        len += 2;
-
-        widget = (GtkWidget *) gtk_builder_get_object (builder, "strength-indicator-label");
-        gtk_label_set_width_chars (GTK_LABEL (widget), len);
-
-        um->normal_hint_entry = (GtkWidget *) gtk_builder_get_object (builder, "normal-hint-entry");
-
-        /* Label size hack.
-         * This only sort-of works because the dialog is non-resizable.
-         */
-        widget = (GtkWidget *)gtk_builder_get_object (builder, "password-normal-hint-description-label");
-        g_signal_connect (um->normal_hint_entry, "size-allocate",
-                          G_CALLBACK (entry_size_changed), widget);
-        um->normal_hint_label = widget;
-
-        if (!is_gdm_running ()) {
-                widget = (GtkWidget *) gtk_builder_get_object (builder, "password-normal-hint-label");
-                gtk_widget_hide (widget);
-                gtk_widget_hide (um->normal_hint_entry);
-                gtk_widget_hide (um->normal_hint_label);
-        }
-
-        um->strength_indicator = (GtkWidget *) gtk_builder_get_object (builder, "strength-indicator");
-
-        um->strength_indicator_label = (GtkWidget *) gtk_builder_get_object (builder, "strength-indicator-label");
-
-        g_object_unref (builder);
-
-        return um;
-}
-
-void
-um_password_dialog_free (UmPasswordDialog *um)
-{
-        gtk_widget_destroy (um->dialog);
-
-        if (um->user)
-                g_object_unref (um->user);
-
-        if (um->passwd_handler)
-                passwd_destroy (um->passwd_handler);
-
-        g_free (um);
-}
-
-static gboolean
-visible_func (GtkTreeModel     *model,
-              GtkTreeIter      *iter,
-              UmPasswordDialog *um)
-{
-        if (um->user) {
-                gint mode; 
-                gboolean locked = act_user_get_locked (um->user);
-
-                gtk_tree_model_get (model, iter, 1, &mode, -1);
-
-                if (mode == 1 && !is_gdm_running ())
-                        return FALSE;
-
-                if (mode == 2 && um->using_ecryptfs)
-                        return FALSE;
-
-                /* We don't allow the current user to disable their own account,
-                 * as this can lead to them being 'locked out'.
-                 */
-                if (mode == UM_PASSWORD_DIALOG_MODE_LOCK_ACCOUNT &&
-                    (locked || act_user_get_uid (um->user) == getuid ()
-                     || would_demote_only_admin (um->user)))
-                        return FALSE;
-
-                if (mode == UM_PASSWORD_DIALOG_MODE_UNLOCK_ACCOUNT && !locked)
-                        return FALSE;
-
-                return TRUE;
-        }
-
-        return TRUE;
-}
-
-void
-um_password_dialog_set_user (UmPasswordDialog *um,
-                             ActUser          *user)
-{
-        GdkPixbuf *pixbuf;
-        GtkTreeModel *model;
-
-        if (um->user) {
-                g_object_unref (um->user);
-                um->user = NULL;
-        }
-        if (user) {
-                um->user = g_object_ref (user);
-
-                um->using_ecryptfs = is_using_ecryptfs (act_user_get_user_name (user));
-
-                pixbuf = render_user_icon (user, UM_ICON_STYLE_NONE, 48);
-                gtk_image_set_from_pixbuf (GTK_IMAGE (um->user_icon), pixbuf);
-                g_object_unref (pixbuf);
-
-                gtk_label_set_label (GTK_LABEL (um->user_name),
-                                     act_user_get_real_name (user));
-
-                gtk_entry_set_text (GTK_ENTRY (um->password_entry), "");
-                gtk_entry_set_text (GTK_ENTRY (um->verify_entry), "");
-                gtk_entry_set_text (GTK_ENTRY (um->normal_hint_entry), "");
-                gtk_entry_set_text (GTK_ENTRY (um->old_password_entry), "");
-                gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (um->show_password_button), FALSE);
-                if (act_user_get_uid (um->user) == getuid () &&
-                    act_user_get_password_mode (um->user) == ACT_USER_PASSWORD_MODE_REGULAR) {
-                        gtk_widget_show (um->old_password_label);
-                        gtk_widget_show (um->old_password_entry);
-                        um->old_password_ok = FALSE;
-                }
-                else {
-                        gtk_widget_hide (um->old_password_label);
-                        gtk_widget_hide (um->old_password_entry);
-                        um->old_password_ok = TRUE;
-                }
-                if (act_user_get_uid (um->user) == getuid()) {
-                        if (um->passwd_handler != NULL)
-                                passwd_destroy (um->passwd_handler);
-                        um->passwd_handler = passwd_init ();
-                }
-        }
-
-        model = gtk_combo_box_get_model (GTK_COMBO_BOX (um->action_combo));
-        if (!GTK_IS_TREE_MODEL_FILTER (model)) {
-                model = gtk_tree_model_filter_new (model, NULL);
-                gtk_combo_box_set_model (GTK_COMBO_BOX (um->action_combo), model);
-                gtk_tree_model_filter_set_visible_func (GTK_TREE_MODEL_FILTER (model),
-                                                        (GtkTreeModelFilterVisibleFunc) visible_func,
-                                                        um, NULL);
-        }
-
-        gtk_tree_model_filter_refilter (GTK_TREE_MODEL_FILTER (model));
-        gtk_combo_box_set_active (GTK_COMBO_BOX (um->action_combo), 0);
-}
-
-void
-um_password_dialog_show (UmPasswordDialog *um,
-                         GtkWindow        *parent)
-{
-        gtk_window_set_transient_for (GTK_WINDOW (um->dialog), parent);
-        gtk_window_present (GTK_WINDOW (um->dialog));
-        if (um->old_password_ok == FALSE)
-                gtk_widget_grab_focus (um->old_password_entry);
-        else
-                gtk_widget_grab_focus (um->password_entry);
-}
-
diff --git a/panels/user-accounts/um-password-dialog.h b/panels/user-accounts/um-password-dialog.h
deleted file mode 100644
index c6a5974..0000000
--- a/panels/user-accounts/um-password-dialog.h
+++ /dev/null
@@ -1,43 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#ifndef __UM_PASSWORD_DIALOG_H__
-#define __UM_PASSWORD_DIALOG_H__
-
-#include <gtk/gtk.h>
-#include <act/act.h>
-
-G_BEGIN_DECLS
-
-typedef struct _UmPasswordDialog UmPasswordDialog;
-
-UmPasswordDialog *um_password_dialog_new      (void);
-void              um_password_dialog_free     (UmPasswordDialog *dialog);
-void              um_password_dialog_set_user (UmPasswordDialog *dialog,
-                                               ActUser          *user);
-void              um_password_dialog_set_privileged (UmPasswordDialog *dialog,
-                                                     gboolean          privileged);
-void              um_password_dialog_show     (UmPasswordDialog *dialog,
-                                               GtkWindow        *parent);
-
-G_END_DECLS
-
-#endif
diff --git a/panels/user-accounts/um-photo-dialog.c b/panels/user-accounts/um-photo-dialog.c
deleted file mode 100644
index 81f990a..0000000
--- a/panels/user-accounts/um-photo-dialog.c
+++ /dev/null
@@ -1,716 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#include "config.h"
-
-#include <stdlib.h>
-
-#include <glib.h>
-#include <glib/gi18n.h>
-#include <gtk/gtk.h>
-#include <act/act.h>
-#define GNOME_DESKTOP_USE_UNSTABLE_API
-#include <libgnome-desktop/gnome-desktop-thumbnail.h>
-
-#ifdef HAVE_CHEESE
-#include <cheese-avatar-chooser.h>
-#include <cheese-camera-device.h>
-#include <cheese-camera-device-monitor.h>
-#endif /* HAVE_CHEESE */
-
-#include "um-photo-dialog.h"
-#include "um-crop-area.h"
-#include "um-utils.h"
-
-#define ROW_SPAN 6
-
-struct _UmPhotoDialog {
-        GtkWidget *photo_popup;
-        GtkWidget *popup_button;
-        GtkWidget *crop_area;
-
-#ifdef HAVE_CHEESE
-        CheeseCameraDeviceMonitor *monitor;
-        GtkWidget *take_photo_menuitem;
-        guint num_cameras;
-#endif /* HAVE_CHEESE */
-
-        GnomeDesktopThumbnailFactory *thumb_factory;
-
-        ActUser *user;
-};
-
-static void
-crop_dialog_response (GtkWidget     *dialog,
-                      gint           response_id,
-                      UmPhotoDialog *um)
-{
-        GdkPixbuf *pb, *pb2;
-
-        if (response_id != GTK_RESPONSE_ACCEPT) {
-                um->crop_area = NULL;
-                gtk_widget_destroy (dialog);
-                return;
-        }
-
-        pb = um_crop_area_get_picture (UM_CROP_AREA (um->crop_area));
-        pb2 = gdk_pixbuf_scale_simple (pb, 96, 96, GDK_INTERP_BILINEAR);
-
-        set_user_icon_data (um->user, pb2);
-
-        g_object_unref (pb2);
-        g_object_unref (pb);
-
-        um->crop_area = NULL;
-        gtk_widget_destroy (dialog);
-}
-
-static void
-um_photo_dialog_crop (UmPhotoDialog *um,
-                      GdkPixbuf     *pixbuf)
-{
-        GtkWidget *dialog;
-        GtkWidget *frame;
-
-        dialog = gtk_dialog_new_with_buttons ("",
-                                              GTK_WINDOW (gtk_widget_get_toplevel (um->popup_button)),
-                                              0,
-                                              _("_Cancel"),
-                                              GTK_RESPONSE_REJECT,
-                                              _("Select"),
-                                              GTK_RESPONSE_ACCEPT,
-                                              NULL);
-        gtk_window_set_modal (GTK_WINDOW (dialog), TRUE);
-
-        gtk_window_set_icon_name (GTK_WINDOW (dialog), "system-users");
-
-        g_signal_connect (G_OBJECT (dialog), "response",
-                          G_CALLBACK (crop_dialog_response), um);
-
-        /* Content */
-        um->crop_area           = um_crop_area_new ();
-        um_crop_area_set_min_size (UM_CROP_AREA (um->crop_area), 48, 48);
-        um_crop_area_set_constrain_aspect (UM_CROP_AREA (um->crop_area), TRUE);
-        um_crop_area_set_picture (UM_CROP_AREA (um->crop_area), pixbuf);
-        frame                   = gtk_frame_new (NULL);
-        gtk_container_add (GTK_CONTAINER (frame), um->crop_area);
-        gtk_frame_set_shadow_type (GTK_FRAME (frame), GTK_SHADOW_ETCHED_IN);
-
-        gtk_box_pack_start (GTK_BOX (gtk_dialog_get_content_area (GTK_DIALOG (dialog))),
-                            frame,
-                            TRUE, TRUE, 8);
-
-        gtk_window_set_default_size (GTK_WINDOW (dialog), 400, 300);
-
-        gtk_widget_show_all (dialog);
-}
-
-static void
-file_chooser_response (GtkDialog     *chooser,
-                       gint           response,
-                       UmPhotoDialog *um)
-{
-        gchar *filename;
-        GError *error;
-        GdkPixbuf *pixbuf;
-
-        if (response != GTK_RESPONSE_ACCEPT) {
-                gtk_widget_destroy (GTK_WIDGET (chooser));
-                return;
-        }
-
-        filename = gtk_file_chooser_get_filename (GTK_FILE_CHOOSER (chooser));
-
-        error = NULL;
-        pixbuf = gdk_pixbuf_new_from_file (filename, &error);
-        if (pixbuf == NULL) {
-                g_warning ("Failed to load %s: %s", filename, error->message);
-                g_error_free (error);
-        }
-        g_free (filename);
-
-        gtk_widget_destroy (GTK_WIDGET (chooser));
-
-        um_photo_dialog_crop (um, pixbuf);
-        g_object_unref (pixbuf);
-}
-
-static void
-update_preview (GtkFileChooser               *chooser,
-                GnomeDesktopThumbnailFactory *thumb_factory)
-{
-        gchar *uri;
-
-        uri = gtk_file_chooser_get_preview_uri (chooser);
-
-        if (uri) {
-                GdkPixbuf *pixbuf = NULL;
-                const gchar *mime_type = NULL;
-                GFile *file;
-                GFileInfo *file_info;
-                GtkWidget *preview;
-
-                preview = gtk_file_chooser_get_preview_widget (chooser);
-
-                file = g_file_new_for_uri (uri);
-                file_info = g_file_query_info (file,
-                                               G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE,
-                                               G_FILE_QUERY_INFO_NONE,
-                                               NULL, NULL);
-                g_object_unref (file);
-
-                if (file_info != NULL) {
-                        mime_type = g_file_info_get_content_type (file_info);
-                        g_object_unref (file_info);
-                }
-
-                if (mime_type) {
-                        pixbuf = gnome_desktop_thumbnail_factory_generate_thumbnail (thumb_factory,
-                                                                                     uri,
-                                                                                     mime_type);
-                }
-
-                gtk_dialog_set_response_sensitive (GTK_DIALOG (chooser),
-                                                   GTK_RESPONSE_ACCEPT,
-                                                   (pixbuf != NULL));
-
-                if (pixbuf != NULL) {
-                        gtk_image_set_from_pixbuf (GTK_IMAGE (preview), pixbuf);
-                        g_object_unref (pixbuf);
-                }
-                else {
-                        gtk_image_set_from_icon_name (GTK_IMAGE (preview),
-                                                      "dialog-question",
-                                                      GTK_ICON_SIZE_DIALOG);
-                }
-
-                g_free (uri);
-        }
-
-        gtk_file_chooser_set_preview_widget_active (chooser, TRUE);
-}
-
-static void
-um_photo_dialog_select_file (UmPhotoDialog *um)
-{
-        GtkWidget *chooser;
-        const gchar *folder;
-        GtkWidget *preview;
-
-        chooser = gtk_file_chooser_dialog_new (_("Browse for more pictures"),
-                                               GTK_WINDOW (gtk_widget_get_toplevel (um->popup_button)),
-                                               GTK_FILE_CHOOSER_ACTION_OPEN,
-                                               _("_Cancel"), GTK_RESPONSE_CANCEL,
-                                               _("_Open"), GTK_RESPONSE_ACCEPT,
-                                               NULL);
-
-        gtk_window_set_modal (GTK_WINDOW (chooser), TRUE);
-
-        preview = gtk_image_new ();
-        gtk_widget_set_size_request (preview, 128, -1);
-        gtk_file_chooser_set_preview_widget (GTK_FILE_CHOOSER (chooser), preview);
-        gtk_file_chooser_set_use_preview_label (GTK_FILE_CHOOSER (chooser), FALSE);
-        gtk_widget_show (preview);
-        g_signal_connect (chooser, "update-preview",
-                          G_CALLBACK (update_preview), um->thumb_factory);
-
-        folder = g_get_user_special_dir (G_USER_DIRECTORY_PICTURES);
-        if (folder)
-                gtk_file_chooser_set_current_folder (GTK_FILE_CHOOSER (chooser),
-                                                     folder);
-
-        g_signal_connect (chooser, "response",
-                          G_CALLBACK (file_chooser_response), um);
-
-        gtk_window_present (GTK_WINDOW (chooser));
-}
-
-static void
-none_icon_selected (GtkMenuItem   *menuitem,
-                    UmPhotoDialog *um)
-{
-        act_user_set_icon_file (um->user, "");
-}
-
-static void
-file_icon_selected (GtkMenuItem   *menuitem,
-                    UmPhotoDialog *um)
-{
-        um_photo_dialog_select_file (um);
-}
-
-#ifdef HAVE_CHEESE
-static gboolean
-destroy_chooser (GtkWidget *chooser)
-{
-        gtk_widget_destroy (chooser);
-        return FALSE;
-}
-
-static void
-webcam_response_cb (GtkDialog     *dialog,
-                    int            response,
-                    UmPhotoDialog  *um)
-{
-        if (response == GTK_RESPONSE_ACCEPT) {
-                GdkPixbuf *pb, *pb2;
-
-                g_object_get (G_OBJECT (dialog), "pixbuf", &pb, NULL);
-                pb2 = gdk_pixbuf_scale_simple (pb, 96, 96, GDK_INTERP_BILINEAR);
-
-                set_user_icon_data (um->user, pb2);
-
-                g_object_unref (pb2);
-                g_object_unref (pb);
-        }
-        if (response != GTK_RESPONSE_DELETE_EVENT &&
-            response != GTK_RESPONSE_NONE)
-                g_idle_add ((GSourceFunc) destroy_chooser, dialog);
-}
-
-static void
-webcam_icon_selected (GtkMenuItem   *menuitem,
-                      UmPhotoDialog *um)
-{
-        GtkWidget *window;
-
-        window = cheese_avatar_chooser_new ();
-        gtk_window_set_transient_for (GTK_WINDOW (window),
-                                      GTK_WINDOW (gtk_widget_get_toplevel (um->popup_button)));
-        gtk_window_set_modal (GTK_WINDOW (window), TRUE);
-        g_signal_connect (G_OBJECT (window), "response",
-                          G_CALLBACK (webcam_response_cb), um);
-        gtk_widget_show (window);
-}
-
-static void
-update_photo_menu_status (UmPhotoDialog *um)
-{
-        if (um->num_cameras == 0)
-                gtk_widget_set_sensitive (um->take_photo_menuitem, FALSE);
-        else
-                gtk_widget_set_sensitive (um->take_photo_menuitem, TRUE);
-}
-
-static void
-device_added (CheeseCameraDeviceMonitor *monitor,
-              CheeseCameraDevice        *device,
-              UmPhotoDialog             *um)
-{
-        um->num_cameras++;
-        update_photo_menu_status (um);
-}
-
-static void
-device_removed (CheeseCameraDeviceMonitor *monitor,
-                const char                *id,
-                UmPhotoDialog             *um)
-{
-        um->num_cameras--;
-        update_photo_menu_status (um);
-}
-
-#endif /* HAVE_CHEESE */
-
-static void
-stock_icon_selected (GtkMenuItem   *menuitem,
-                     UmPhotoDialog *um)
-{
-        const char *filename;
-
-        filename = g_object_get_data (G_OBJECT (menuitem), "filename");
-        act_user_set_icon_file (um->user, filename);
-}
-
-static GtkWidget *
-menu_item_for_filename (UmPhotoDialog *um,
-                        const char    *filename)
-{
-        GtkWidget *image, *menuitem;
-        GFile *file;
-        GIcon *icon;
-
-        file = g_file_new_for_path (filename);
-        icon = g_file_icon_new (file);
-        g_object_unref (file);
-        image = gtk_image_new_from_gicon (icon, GTK_ICON_SIZE_DIALOG);
-        g_object_unref (icon);
-
-        menuitem = gtk_menu_item_new ();
-        gtk_container_add (GTK_CONTAINER (menuitem), image);
-        gtk_widget_show_all (menuitem);
-
-        g_object_set_data_full (G_OBJECT (menuitem), "filename",
-                                g_strdup (filename), (GDestroyNotify) g_free);
-        g_signal_connect (G_OBJECT (menuitem), "activate",
-                          G_CALLBACK (stock_icon_selected), um);
-
-        return menuitem;
-}
-
-static void
-setup_photo_popup (UmPhotoDialog *um)
-{
-        GtkWidget *menu, *menuitem, *image;
-        guint x, y;
-        const gchar * const * dirs;
-        guint i;
-        GDir *dir;
-        const char *face;
-        gboolean none_item_shown;
-        gboolean added_faces;
-
-        menu = gtk_menu_new ();
-
-        x = 0;
-        y = 0;
-        none_item_shown = added_faces = FALSE;
-
-        dirs = g_get_system_data_dirs ();
-        for (i = 0; dirs[i] != NULL; i++) {
-                char *path;
-
-                path = g_build_filename (dirs[i], "pixmaps", "faces", NULL);
-                dir = g_dir_open (path, 0, NULL);
-                if (dir == NULL) {
-                        g_free (path);
-                        continue;
-                }
-
-                while ((face = g_dir_read_name (dir)) != NULL) {
-                        char *filename;
-
-                        added_faces = TRUE;
-
-                        filename = g_build_filename (path, face, NULL);
-                        menuitem = menu_item_for_filename (um, filename);
-                        g_free (filename);
-                        if (menuitem == NULL)
-                                continue;
-
-                        gtk_menu_attach (GTK_MENU (menu), GTK_WIDGET (menuitem),
-                                         x, x + 1, y, y + 1);
-                        gtk_widget_show (menuitem);
-
-                        x++;
-                        if (x >= ROW_SPAN - 1) {
-                                y++;
-                                x = 0;
-                        }
-                }
-                g_dir_close (dir);
-                g_free (path);
-
-                if (added_faces)
-                        break;
-        }
-
-        if (!added_faces)
-                goto skip_faces;
-
-        image = gtk_image_new_from_icon_name ("avatar-default", GTK_ICON_SIZE_DIALOG);
-        menuitem = gtk_menu_item_new ();
-        gtk_container_add (GTK_CONTAINER (menuitem), image);
-        gtk_widget_show_all (menuitem);
-        gtk_menu_attach (GTK_MENU (menu), GTK_WIDGET (menuitem),
-                         x, x + 1, y, y + 1);
-        g_signal_connect (G_OBJECT (menuitem), "activate",
-                          G_CALLBACK (none_icon_selected), um);
-        gtk_widget_show (menuitem);
-        none_item_shown = TRUE;
-        y++;
-
-skip_faces:
-        if (!none_item_shown) {
-                menuitem = gtk_menu_item_new_with_label (_("Disable image"));
-                gtk_menu_attach (GTK_MENU (menu), GTK_WIDGET (menuitem),
-                                 0, ROW_SPAN - 1, y, y + 1);
-                g_signal_connect (G_OBJECT (menuitem), "activate",
-                                  G_CALLBACK (none_icon_selected), um);
-                gtk_widget_show (menuitem);
-                y++;
-        }
-
-        /* Separator */
-        menuitem = gtk_separator_menu_item_new ();
-        gtk_menu_attach (GTK_MENU (menu), GTK_WIDGET (menuitem),
-                         0, ROW_SPAN - 1, y, y + 1);
-        gtk_widget_show (menuitem);
-
-        y++;
-
-#ifdef HAVE_CHEESE
-        um->take_photo_menuitem = gtk_menu_item_new_with_label (_("Take a photo…"));
-        gtk_menu_attach (GTK_MENU (menu), GTK_WIDGET (um->take_photo_menuitem),
-                         0, ROW_SPAN - 1, y, y + 1);
-        g_signal_connect (G_OBJECT (um->take_photo_menuitem), "activate",
-                          G_CALLBACK (webcam_icon_selected), um);
-        gtk_widget_set_sensitive (um->take_photo_menuitem, FALSE);
-        gtk_widget_show (um->take_photo_menuitem);
-
-        um->monitor = cheese_camera_device_monitor_new ();
-        g_signal_connect (G_OBJECT (um->monitor), "added",
-                          G_CALLBACK (device_added), um);
-        g_signal_connect (G_OBJECT (um->monitor), "removed",
-                          G_CALLBACK (device_removed), um);
-        cheese_camera_device_monitor_coldplug (um->monitor);
-
-        y++;
-#endif /* HAVE_CHEESE */
-
-        menuitem = gtk_menu_item_new_with_label (_("Browse for more pictures…"));
-        gtk_menu_attach (GTK_MENU (menu), GTK_WIDGET (menuitem),
-                         0, ROW_SPAN - 1, y, y + 1);
-        g_signal_connect (G_OBJECT (menuitem), "activate",
-                          G_CALLBACK (file_icon_selected), um);
-        gtk_widget_show (menuitem);
-
-        um->photo_popup = menu;
-}
-
-static void
-popup_icon_menu (GtkToggleButton *button, UmPhotoDialog *um)
-{
-        if (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (button)) && !gtk_widget_get_visible (um->photo_popup)) {
-                gtk_menu_popup (GTK_MENU (um->photo_popup),
-                                NULL, NULL,
-                                (GtkMenuPositionFunc) popup_menu_below_button, um->popup_button,
-                                0, gtk_get_current_event_time ());
-        } else {
-                gtk_menu_popdown (GTK_MENU (um->photo_popup));
-        }
-}
-
-static gboolean
-on_popup_button_button_pressed (GtkToggleButton *button,
-                                GdkEventButton *event,
-                                UmPhotoDialog  *um)
-{
-        if (event->button == 1) {
-                if (!gtk_widget_get_visible (um->photo_popup)) {
-                        popup_icon_menu (button, um);
-                        gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (button), TRUE);
-                } else {
-                        gtk_menu_popdown (GTK_MENU (um->photo_popup));
-                        gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (button), FALSE);
-                }
-
-                return TRUE;
-        }
-
-        return FALSE;
-}
-
-static void
-on_photo_popup_unmap (GtkWidget     *popup_menu,
-                      UmPhotoDialog *um)
-{
-        gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (um->popup_button), FALSE);
-}
-
-static void
-popup_button_draw (GtkWidget      *widget,
-                   cairo_t        *cr,
-                   UmPhotoDialog  *um)
-{
-        if (gtk_widget_get_state (gtk_bin_get_child (GTK_BIN (widget))) != GTK_STATE_PRELIGHT &&
-            !gtk_widget_is_focus (widget)) {
-                return;
-        }
-
-        down_arrow (gtk_widget_get_style_context (widget),
-                    cr,
-                    gtk_widget_get_allocated_width (widget) - 12,
-                    gtk_widget_get_allocated_height (widget) - 12,
-                    12, 12);
-}
-
-static void
-popup_button_focus_changed (GObject       *button,
-                            GParamSpec    *pspec,
-                            UmPhotoDialog *um)
-{
-        gtk_widget_queue_draw (gtk_bin_get_child (GTK_BIN (button)));
-}
-
-UmPhotoDialog *
-um_photo_dialog_new (GtkWidget *button)
-{
-        UmPhotoDialog *um;
-
-        um = g_new0 (UmPhotoDialog, 1);
-
-        um->thumb_factory = gnome_desktop_thumbnail_factory_new (GNOME_DESKTOP_THUMBNAIL_SIZE_NORMAL);
-
-        /* Set up the popup */
-        um->popup_button = button;
-        setup_photo_popup (um);
-        g_signal_connect (button, "toggled",
-                          G_CALLBACK (popup_icon_menu), um);
-        g_signal_connect (button, "button-press-event",
-                          G_CALLBACK (on_popup_button_button_pressed), um);
-        g_signal_connect (button, "notify::is-focus",
-                          G_CALLBACK (popup_button_focus_changed), um);
-        g_signal_connect_after (button, "draw",
-                                G_CALLBACK (popup_button_draw), um);
-
-        g_signal_connect (um->photo_popup, "unmap",
-                          G_CALLBACK (on_photo_popup_unmap), um);
-
-        return um;
-}
-
-void
-um_photo_dialog_free (UmPhotoDialog *um)
-{
-        gtk_widget_destroy (um->photo_popup);
-
-        if (um->thumb_factory)
-                g_object_unref (um->thumb_factory);
-#ifdef HAVE_CHEESE
-        if (um->monitor)
-                g_object_unref (um->monitor);
-#endif
-        if (um->user)
-                g_object_unref (um->user);
-
-        g_free (um);
-}
-
-static void
-clear_tip (GtkMenuItem  *item,
-           gpointer      user_data)
-{
-        GList *children;
-        GtkWidget *image;
-        GIcon *icon, *icon2;
-        const char *filename;
-
-        /* Not a stock icon? */
-        filename = g_object_get_data (G_OBJECT (item), "filename");
-        if (filename == NULL)
-                return;
-
-        children = gtk_container_get_children (GTK_CONTAINER (item));
-        image = children->data;
-        g_assert (image != NULL);
-        g_list_free (children);
-
-        gtk_image_get_gicon (GTK_IMAGE (image), &icon, NULL);
-
-        if (G_IS_EMBLEMED_ICON (icon))
-                icon2 = g_emblemed_icon_get_icon (G_EMBLEMED_ICON (icon));
-        else
-                return;
-
-        gtk_image_set_from_gicon (GTK_IMAGE (image), icon2, GTK_ICON_SIZE_DIALOG);
-        g_object_unref (icon);
-}
-
-static void
-set_tip (GtkWidget  *item,
-         const char *tip,
-         GEmblem    *emblem)
-{
-        GList *children;
-        GtkWidget *image;
-        GIcon *icon, *icon2;
-
-        children = gtk_container_get_children (GTK_CONTAINER (item));
-        image = children->data;
-        g_assert (image != NULL);
-        g_list_free (children);
-
-        gtk_image_get_gicon (GTK_IMAGE (image), &icon, NULL);
-        if (G_IS_EMBLEMED_ICON (icon)) {
-                return;
-        }
-
-        icon2 = g_emblemed_icon_new (icon, emblem);
-        gtk_image_set_from_gicon (GTK_IMAGE (image), icon2, GTK_ICON_SIZE_DIALOG);
-
-        gtk_widget_set_tooltip_text (GTK_WIDGET (item), tip);
-}
-
-void
-um_photo_dialog_set_user (UmPhotoDialog *um,
-                          ActUser       *user)
-{
-        ActUserManager *manager;
-        GSList *list, *l;
-        ActUser *u;
-        GIcon *icon;
-        GEmblem *emblem;
-        GList *children, *c;
-
-        g_return_if_fail (um != NULL);
-
-        if (um->user) {
-                g_object_unref (um->user);
-                um->user = NULL;
-        }
-        um->user = user;
-
-        if (um->user) {
-                g_object_ref (um->user);
-
-                children = gtk_container_get_children (GTK_CONTAINER (um->photo_popup));
-                g_list_foreach (children, (GFunc) clear_tip, NULL);
-
-                manager = act_user_manager_get_default ();
-                list = act_user_manager_list_users (manager);
-
-                icon = g_themed_icon_new ("avatar-default");
-                emblem = g_emblem_new (icon);
-                g_object_unref (icon);
-
-                for (l = list; l; l = l->next) {
-                        const char *filename;
-
-                        u = l->data;
-                        if (u == user)
-                                continue;
-                        filename = act_user_get_icon_file (u);
-                        if (filename  == NULL)
-                                continue;
-                        for (c = children; c; c = c->next) {
-                                const char *f;
-
-                                f = g_object_get_data (G_OBJECT (c->data), "filename");
-                                if (f == NULL)
-                                        continue;
-                                if (strcmp (f, filename) == 0) {
-                                        char *tip;
-
-                                        tip = g_strdup_printf (_("Used by %s"),
-                                                               act_user_get_real_name (u));
-                                        set_tip (GTK_WIDGET (c->data), tip, emblem);
-                                        g_free (tip);
-                                        break;
-                                }
-                        }
-                }
-                g_slist_free (list);
-
-                g_object_unref (emblem);
-        }
-}
-
diff --git a/panels/user-accounts/um-photo-dialog.h b/panels/user-accounts/um-photo-dialog.h
deleted file mode 100644
index fd1a3f2..0000000
--- a/panels/user-accounts/um-photo-dialog.h
+++ /dev/null
@@ -1,39 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#ifndef __UM_PHOTO_DIALOG_H__
-#define __UM_PHOTO_DIALOG_H__
-
-#include <gtk/gtk.h>
-#include <act/act.h>
-
-G_BEGIN_DECLS
-
-typedef struct _UmPhotoDialog UmPhotoDialog;
-
-UmPhotoDialog *um_photo_dialog_new      (GtkWidget     *button);
-void           um_photo_dialog_free     (UmPhotoDialog *dialog);
-void           um_photo_dialog_set_user (UmPhotoDialog *dialog,
-                                         ActUser       *user);
-
-G_END_DECLS
-
-#endif
diff --git a/panels/user-accounts/um-realm-manager.c b/panels/user-accounts/um-realm-manager.c
deleted file mode 100644
index 169cd15..0000000
--- a/panels/user-accounts/um-realm-manager.c
+++ /dev/null
@@ -1,904 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2012  Red Hat, Inc.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Stef Walter <stefw@gnome.org>
- */
-
-#include "config.h"
-
-#include "um-realm-manager.h"
-
-#include <krb5/krb5.h>
-
-#include <glib.h>
-#include <glib/gi18n.h>
-#include <glib/gstdio.h>
-
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <errno.h>
-#include <fcntl.h>
-
-
-struct _UmRealmManager {
-        UmRealmObjectManagerClient parent;
-        UmRealmProvider *provider;
-        guint diagnostics_sig;
-};
-
-typedef struct {
-        UmRealmProviderProxyClass parent_class;
-} UmRealmManagerClass;
-
-enum {
-        REALM_ADDED,
-        NUM_SIGNALS,
-};
-
-static gint signals[NUM_SIGNALS] = { 0, };
-
-G_DEFINE_TYPE (UmRealmManager, um_realm_manager, UM_REALM_TYPE_OBJECT_MANAGER_CLIENT);
-
-GQuark
-um_realm_error_get_quark (void)
-{
-        static GQuark quark = 0;
-        if (quark == 0)
-                quark = g_quark_from_static_string ("um-realm-error");
-        return quark;
-}
-
-static gboolean
-is_realm_with_kerberos_and_membership (gpointer object)
-{
-        GDBusInterface *interface;
-
-        if (!G_IS_DBUS_OBJECT (object))
-                return FALSE;
-
-        interface = g_dbus_object_get_interface (object, "org.freedesktop.realmd.Kerberos");
-        if (interface == NULL)
-                return FALSE;
-        g_object_unref (interface);
-
-        interface = g_dbus_object_get_interface (object, "org.freedesktop.realmd.KerberosMembership");
-        if (interface == NULL)
-                return FALSE;
-        g_object_unref (interface);
-
-        return TRUE;
-}
-
-static void
-on_interface_added (GDBusObjectManager *manager,
-                    GDBusObject *object,
-                    GDBusInterface *interface)
-{
-        g_dbus_proxy_set_default_timeout (G_DBUS_PROXY (interface), G_MAXINT);
-}
-
-static void
-on_object_added (GDBusObjectManager *manager,
-                 GDBusObject *object,
-                 gpointer user_data)
-{
-        GList *interfaces, *l;
-
-        interfaces = g_dbus_object_get_interfaces (object);
-        for (l = interfaces; l != NULL; l = g_list_next (l))
-                on_interface_added (manager, object, l->data);
-        g_list_free_full (interfaces, g_object_unref);
-
-        if (is_realm_with_kerberos_and_membership (object)) {
-                g_debug ("Saw realm: %s", g_dbus_object_get_object_path (object));
-                g_signal_emit (user_data, signals[REALM_ADDED], 0, object);
-        }
-}
-
-static void
-um_realm_manager_init (UmRealmManager *self)
-{
-        g_signal_connect (self, "object-added", G_CALLBACK (on_object_added), self);
-        g_signal_connect (self, "interface-added", G_CALLBACK (on_interface_added), self);
-}
-
-static void
-um_realm_manager_dispose (GObject *obj)
-{
-        UmRealmManager *self = UM_REALM_MANAGER (obj);
-        GDBusConnection *connection;
-
-        g_clear_object (&self->provider);
-
-        if (self->diagnostics_sig) {
-                connection = g_dbus_object_manager_client_get_connection (G_DBUS_OBJECT_MANAGER_CLIENT (self));
-                if (connection != NULL)
-                        g_dbus_connection_signal_unsubscribe (connection, self->diagnostics_sig);
-                self->diagnostics_sig = 0;
-        }
-
-        G_OBJECT_CLASS (um_realm_manager_parent_class)->dispose (obj);
-}
-
-static void
-um_realm_manager_class_init (UmRealmManagerClass *klass)
-{
-        GObjectClass *object_class = G_OBJECT_CLASS (klass);
-
-        object_class->dispose = um_realm_manager_dispose;
-
-        signals[REALM_ADDED] = g_signal_new ("realm-added", UM_TYPE_REALM_MANAGER,
-                                             G_SIGNAL_RUN_FIRST, 0, NULL, NULL,
-                                             g_cclosure_marshal_generic,
-                                             G_TYPE_NONE, 1, UM_REALM_TYPE_OBJECT);
-}
-
-static void
-on_realm_diagnostics (GDBusConnection *connection,
-                      const gchar *sender_name,
-                      const gchar *object_path,
-                      const gchar *interface_name,
-                      const gchar *signal_name,
-                      GVariant *parameters,
-                      gpointer user_data)
-{
-        const gchar *message;
-        const gchar *unused;
-
-        if (g_variant_is_of_type (parameters, G_VARIANT_TYPE ("(ss)"))) {
-                /* Data is already formatted appropriately for stderr */
-                g_variant_get (parameters, "(&s&s)", &message, &unused);
-                g_printerr ("%s", message);
-        }
-}
-
-typedef struct {
-        GCancellable *cancellable;
-        UmRealmManager *manager;
-} NewClosure;
-
-static void
-new_closure_free (gpointer data)
-{
-        NewClosure *closure = data;
-        g_clear_object (&closure->cancellable);
-        g_clear_object (&closure->manager);
-        g_slice_free (NewClosure, closure);
-}
-
-static void
-on_provider_new (GObject *source,
-                 GAsyncResult *result,
-                 gpointer user_data)
-{
-        GSimpleAsyncResult *async = G_SIMPLE_ASYNC_RESULT (user_data);
-        NewClosure *closure = g_simple_async_result_get_op_res_gpointer (async);
-        GError *error = NULL;
-        UmRealmProvider *provider;
-
-        provider = um_realm_provider_proxy_new_finish (result, &error);
-        closure->manager->provider = provider;
-
-        if (error == NULL) {
-                g_dbus_proxy_set_default_timeout (G_DBUS_PROXY (closure->manager->provider), -1);
-                g_debug ("Created realm manager");
-        } else {
-                g_simple_async_result_take_error (async, error);
-        }
-        g_simple_async_result_complete (async);
-
-        g_object_unref (async);
-}
-
-static void
-on_manager_new (GObject *source,
-                GAsyncResult *result,
-                gpointer user_data)
-{
-        GSimpleAsyncResult *async = G_SIMPLE_ASYNC_RESULT (user_data);
-        NewClosure *closure = g_simple_async_result_get_op_res_gpointer (async);
-        GDBusConnection *connection;
-        GError *error = NULL;
-        GObject *object;
-        guint sig;
-
-        object = g_async_initable_new_finish (G_ASYNC_INITABLE (source), result, &error);
-        if (error == NULL) {
-                closure->manager = UM_REALM_MANAGER (object);
-                connection = g_dbus_object_manager_client_get_connection (G_DBUS_OBJECT_MANAGER_CLIENT (object));
-
-                g_debug ("Connected to realmd");
-
-                sig = g_dbus_connection_signal_subscribe (connection,
-                                                          "org.freedesktop.realmd",
-                                                          "org.freedesktop.realmd.Service",
-                                                          "Diagnostics",
-                                                          NULL,
-                                                          NULL,
-                                                          G_DBUS_SIGNAL_FLAGS_NONE,
-                                                          on_realm_diagnostics,
-                                                          NULL,
-                                                          NULL);
-                closure->manager->diagnostics_sig = sig;
-
-                um_realm_provider_proxy_new (connection,
-                                             G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES,
-                                             "org.freedesktop.realmd",
-                                             "/org/freedesktop/realmd",
-                                             closure->cancellable,
-                                             on_provider_new, g_object_ref (async));
-        } else {
-                g_simple_async_result_take_error (async, error);
-                g_simple_async_result_complete (async);
-        }
-
-        g_object_unref (async);
-}
-
-void
-um_realm_manager_new (GCancellable *cancellable,
-                      GAsyncReadyCallback callback,
-                      gpointer user_data)
-{
-        GSimpleAsyncResult *async;
-        NewClosure *closure;
-
-        g_debug ("Connecting to realmd...");
-
-        async = g_simple_async_result_new (NULL, callback, user_data,
-                                           um_realm_manager_new);
-        closure = g_slice_new (NewClosure);
-        closure->cancellable = cancellable ? g_object_ref (cancellable) : NULL;
-        g_simple_async_result_set_op_res_gpointer (async, closure, new_closure_free);
-
-        g_async_initable_new_async (UM_TYPE_REALM_MANAGER, G_PRIORITY_DEFAULT,
-                                    cancellable, on_manager_new, g_object_ref (async),
-                                    "flags", G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE,
-                                    "name", "org.freedesktop.realmd",
-                                    "bus-type", G_BUS_TYPE_SYSTEM,
-                                    "object-path", "/org/freedesktop/realmd",
-                                    "get-proxy-type-func", um_realm_object_manager_client_get_proxy_type,
-                                    NULL);
-
-        g_object_unref (async);
-}
-
-UmRealmManager *
-um_realm_manager_new_finish (GAsyncResult *result,
-                             GError **error)
-{
-        GSimpleAsyncResult *async;
-        NewClosure *closure;
-
-        g_return_val_if_fail (g_simple_async_result_is_valid (result, NULL,
-                                                              um_realm_manager_new), NULL);
-
-        async = G_SIMPLE_ASYNC_RESULT (result);
-        if (g_simple_async_result_propagate_error (async, error))
-                return NULL;
-
-        closure = g_simple_async_result_get_op_res_gpointer (async);
-        return g_object_ref (closure->manager);
-}
-
-typedef struct {
-        GDBusObjectManager *manager;
-        GCancellable *cancellable;
-        GList *realms;
-} DiscoverClosure;
-
-static void
-discover_closure_free (gpointer data)
-{
-        DiscoverClosure *discover = data;
-        g_object_unref (discover->manager);
-        g_clear_object (&discover->cancellable);
-        g_list_free_full (discover->realms, g_object_unref);
-        g_slice_free (DiscoverClosure, discover);
-}
-
-static void
-on_provider_discover (GObject *source,
-                      GAsyncResult *result,
-                      gpointer user_data)
-{
-        GSimpleAsyncResult *async = G_SIMPLE_ASYNC_RESULT (user_data);
-        DiscoverClosure *discover = g_simple_async_result_get_op_res_gpointer (async);
-        GDBusObject *object;
-        GError *error = NULL;
-        gchar **realms;
-        gint relevance;
-        gint i;
-
-        um_realm_provider_call_discover_finish (UM_REALM_PROVIDER (source), &relevance,
-                                                &realms, result, &error);
-        if (error == NULL) {
-                for (i = 0; realms[i]; i++) {
-                        object = g_dbus_object_manager_get_object (discover->manager, realms[i]);
-                        if (object == NULL) {
-                                g_warning ("Realm is not in object manager: %s", realms[i]);
-                        } else {
-                                if (is_realm_with_kerberos_and_membership (object)) {
-                                        g_debug ("Discovered realm: %s", realms[i]);
-                                        discover->realms = g_list_prepend (discover->realms, object);
-                                } else {
-                                        g_debug ("Realm does not support kerberos membership: %s", realms[i]);
-                                        g_object_unref (object);
-                                }
-                        }
-                }
-                g_strfreev (realms);
-
-        } else {
-                g_simple_async_result_take_error (async, error);
-        }
-
-        g_simple_async_result_complete (async);
-        g_object_unref (async);
-}
-
-void
-um_realm_manager_discover (UmRealmManager *self,
-                           const gchar *input,
-                           GCancellable *cancellable,
-                           GAsyncReadyCallback callback,
-                           gpointer user_data)
-{
-        GSimpleAsyncResult *res;
-        DiscoverClosure *discover;
-        GVariant *options;
-
-        g_return_if_fail (UM_IS_REALM_MANAGER (self));
-        g_return_if_fail (input != NULL);
-        g_return_if_fail (cancellable == NULL || G_IS_CANCELLABLE (cancellable));
-
-        g_debug ("Discovering realms for: %s", input);
-
-        res = g_simple_async_result_new (G_OBJECT (self), callback, user_data,
-                                         um_realm_manager_discover);
-        discover = g_slice_new0 (DiscoverClosure);
-        discover->manager = g_object_ref (self);
-        discover->cancellable = cancellable ? g_object_ref (cancellable) : NULL;
-        g_simple_async_result_set_op_res_gpointer (res, discover, discover_closure_free);
-
-	options = g_variant_new_array (G_VARIANT_TYPE ("{sv}"), NULL, 0);
-
-        um_realm_provider_call_discover (self->provider, input, options, cancellable,
-                                         on_provider_discover, g_object_ref (res));
-
-        g_object_unref (res);
-}
-
-GList *
-um_realm_manager_discover_finish (UmRealmManager *self,
-                                  GAsyncResult *result,
-                                  GError **error)
-{
-        GSimpleAsyncResult *async;
-        DiscoverClosure *discover;
-        GList *realms;
-
-        g_return_val_if_fail (UM_IS_REALM_MANAGER (self), NULL);
-        g_return_val_if_fail (g_simple_async_result_is_valid (result, G_OBJECT (self),
-                              um_realm_manager_discover), NULL);
-        g_return_val_if_fail (error == NULL || *error == NULL, NULL);
-
-        async = G_SIMPLE_ASYNC_RESULT (result);
-        if (g_simple_async_result_propagate_error (async, error))
-                return NULL;
-
-        discover = g_simple_async_result_get_op_res_gpointer (async);
-        if (!discover->realms) {
-                g_set_error (error, UM_REALM_ERROR, UM_REALM_ERROR_GENERIC,
-                             _("No such domain or realm found"));
-                return NULL;
-        }
-
-        realms = g_list_reverse (discover->realms);
-        discover->realms = NULL;
-        return realms;
-}
-
-GList *
-um_realm_manager_get_realms (UmRealmManager *self)
-{
-        GList *objects;
-        GList *realms = NULL;
-        GList *l;
-
-        g_return_val_if_fail (UM_IS_REALM_MANAGER (self), NULL);
-
-        objects = g_dbus_object_manager_get_objects (G_DBUS_OBJECT_MANAGER (self));
-        for (l = objects; l != NULL; l = g_list_next (l)) {
-                if (is_realm_with_kerberos_and_membership (l->data))
-                        realms = g_list_prepend (realms, g_object_ref (l->data));
-        }
-
-        g_list_free_full (objects, g_object_unref);
-        return realms;
-}
-
-static void
-string_replace (GString *string,
-                const gchar *find,
-                const gchar *replace)
-{
-        const gchar *at;
-        gssize pos;
-
-        at = strstr (string->str, find);
-        if (at != NULL) {
-                pos = at - string->str;
-                g_string_erase (string, pos, strlen (find));
-                g_string_insert (string, pos, replace);
-        }
-}
-
-gchar *
-um_realm_calculate_login (UmRealmCommon *realm,
-                          const gchar *username)
-{
-        GString *string;
-        const gchar *const *formats;
-        gchar *login = NULL;
-
-        formats = um_realm_common_get_login_formats (realm);
-        if (formats[0] != NULL) {
-                string = g_string_new (formats[0]);
-                string_replace (string, "%U", username);
-                string_replace (string, "%D", um_realm_common_get_name (realm));
-                login = g_string_free (string, FALSE);
-        }
-
-        return login;
-
-}
-
-gboolean
-um_realm_is_configured (UmRealmObject *realm)
-{
-        UmRealmCommon *common;
-        const gchar *configured;
-        gboolean is;
-
-        common = um_realm_object_get_common (realm);
-        configured = um_realm_common_get_configured (common);
-        is = configured != NULL && !g_str_equal (configured, "");
-        g_object_unref (common);
-
-        return is;
-}
-
-static const gchar *
-find_supported_credentials (UmRealmKerberosMembership *membership,
-                            const gchar *owner)
-{
-        const gchar *cred_owner;
-        const gchar *cred_type;
-        GVariant *supported;
-        GVariantIter iter;
-
-        supported = um_realm_kerberos_membership_get_supported_join_credentials (membership);
-        g_return_val_if_fail (supported != NULL, NULL);
-
-        g_variant_iter_init (&iter, supported);
-        while (g_variant_iter_loop (&iter, "(&s&s)", &cred_type, &cred_owner)) {
-                if (g_str_equal (owner, cred_owner)) {
-                        if (g_str_equal (cred_type, "ccache") ||
-                            g_str_equal (cred_type, "password")) {
-                                return g_intern_string (cred_type);
-                        }
-                }
-        }
-
-        return NULL;
-}
-
-static void
-on_realm_join_complete (GObject *source,
-                        GAsyncResult *result,
-                        gpointer user_data)
-{
-	GSimpleAsyncResult *async = G_SIMPLE_ASYNC_RESULT (user_data);
-
-	g_debug ("Completed Join() method call");
-
-	g_simple_async_result_set_op_res_gpointer (async, g_object_ref (result), g_object_unref);
-	g_simple_async_result_complete_in_idle (async);
-	g_object_unref (async);
-}
-
-static gboolean
-realm_join_as_owner (UmRealmObject *realm,
-                     const gchar *owner,
-                     const gchar *login,
-                     const gchar *password,
-                     GBytes *credentials,
-                     GCancellable *cancellable,
-                     GAsyncReadyCallback callback,
-                     gpointer user_data)
-{
-        UmRealmKerberosMembership *membership;
-        GSimpleAsyncResult *async;
-        GVariant *contents;
-        GVariant *options;
-        GVariant *option;
-        GVariant *creds;
-        const gchar *type;
-
-        membership = um_realm_object_get_kerberos_membership (realm);
-        g_return_val_if_fail (membership != NULL, FALSE);
-
-        type = find_supported_credentials (membership, owner);
-        if (type == NULL) {
-                g_debug ("Couldn't find supported credential type for owner: %s", owner);
-                g_object_unref (membership);
-                return FALSE;
-        }
-
-        async = g_simple_async_result_new (G_OBJECT (realm), callback, user_data,
-                                           realm_join_as_owner);
-
-        if (g_str_equal (type, "ccache")) {
-                g_debug ("Using a kerberos credential cache to join the realm");
-                contents = g_variant_new_from_data (G_VARIANT_TYPE ("ay"),
-                                                    g_bytes_get_data (credentials, NULL),
-                                                    g_bytes_get_size (credentials),
-                                                    TRUE, (GDestroyNotify)g_bytes_unref, credentials);
-
-        } else if (g_str_equal (type, "password")) {
-                g_debug ("Using a user/password to join the realm");
-                contents = g_variant_new ("(ss)", login, password);
-
-        } else {
-                g_assert_not_reached ();
-        }
-
-        creds = g_variant_new ("(ssv)", type, owner, contents);
-        option = g_variant_new ("{sv}", "manage-system", g_variant_new_boolean (FALSE));
-        options = g_variant_new_array (G_VARIANT_TYPE ("{sv}"), &option, 1);
-
-        g_debug ("Calling the Join() method with %s credentials", owner);
-
-        um_realm_kerberos_membership_call_join (membership, creds, options,
-                                                cancellable, on_realm_join_complete,
-                                                g_object_ref (async));
-
-        g_object_unref (async);
-        g_object_unref (membership);
-
-        return TRUE;
-}
-
-gboolean
-um_realm_join_as_user (UmRealmObject *realm,
-                       const gchar *login,
-                       const gchar *password,
-                       GBytes *credentials,
-                       GCancellable *cancellable,
-                       GAsyncReadyCallback callback,
-                       gpointer user_data)
-{
-        g_return_val_if_fail (UM_REALM_IS_OBJECT (realm), FALSE);
-        g_return_val_if_fail (credentials != NULL, FALSE);
-        g_return_val_if_fail (cancellable == NULL || G_IS_CANCELLABLE (cancellable), FALSE);
-        g_return_val_if_fail (login != NULL, FALSE);
-        g_return_val_if_fail (password != NULL, FALSE);
-        g_return_val_if_fail (credentials != NULL, FALSE);
-
-        return realm_join_as_owner (realm, "user", login, password,
-                                    credentials, cancellable, callback, user_data);
-}
-
-gboolean
-um_realm_join_as_admin (UmRealmObject *realm,
-                        const gchar *login,
-                        const gchar *password,
-                        GBytes *credentials,
-                        GCancellable *cancellable,
-                        GAsyncReadyCallback callback,
-                        gpointer user_data)
-{
-        g_return_val_if_fail (UM_REALM_IS_OBJECT (realm), FALSE);
-        g_return_val_if_fail (credentials != NULL, FALSE);
-        g_return_val_if_fail (cancellable == NULL || G_IS_CANCELLABLE (cancellable), FALSE);
-        g_return_val_if_fail (login != NULL, FALSE);
-        g_return_val_if_fail (password != NULL, FALSE);
-        g_return_val_if_fail (credentials != NULL, FALSE);
-
-        return realm_join_as_owner (realm, "administrator", login, password, credentials,
-                                    cancellable, callback, user_data);
-}
-
-gboolean
-um_realm_join_finish (UmRealmObject *realm,
-                      GAsyncResult *result,
-                      GError **error)
-{
-        UmRealmKerberosMembership *membership;
-        GError *call_error = NULL;
-        gchar *dbus_error;
-        GAsyncResult *async;
-
-        g_return_val_if_fail (UM_REALM_IS_OBJECT (realm), FALSE);
-        g_return_val_if_fail (error == NULL || *error == NULL, FALSE);
-
-        membership = um_realm_object_get_kerberos_membership (realm);
-        g_return_val_if_fail (membership != NULL, FALSE);
-
-        async = g_simple_async_result_get_op_res_gpointer (G_SIMPLE_ASYNC_RESULT (result));
-        um_realm_kerberos_membership_call_join_finish (membership, async, &call_error);
-        g_object_unref (membership);
-
-        if (call_error == NULL)
-                return TRUE;
-
-        dbus_error = g_dbus_error_get_remote_error (call_error);
-        if (dbus_error == NULL) {
-                g_debug ("Join() failed because of %s", call_error->message);
-                g_propagate_error (error, call_error);
-                return FALSE;
-        }
-
-        g_dbus_error_strip_remote_error (call_error);
-
-        if (g_str_equal (dbus_error, "org.freedesktop.realmd.Error.AuthenticationFailed")) {
-                g_debug ("Join() failed because of invalid/insufficient credentials");
-                g_set_error (error, UM_REALM_ERROR, UM_REALM_ERROR_BAD_LOGIN,
-                             "%s", call_error->message);
-                g_error_free (call_error);
-        } else {
-                g_debug ("Join() failed because of %s", call_error->message);
-                g_propagate_error (error, call_error);
-        }
-
-        g_free (dbus_error);
-        return FALSE;
-}
-
-typedef struct {
-        gchar *domain;
-        gchar *realm;
-        gchar *user;
-        gchar *password;
-        GBytes *credentials;
-} LoginClosure;
-
-static void
-login_closure_free (gpointer data)
-{
-        LoginClosure *login = data;
-        g_free (login->domain);
-        g_free (login->realm);
-        g_free (login->user);
-        g_free (login->password);
-        g_bytes_unref (login->credentials);
-        g_slice_free (LoginClosure, login);
-}
-
-static krb5_error_code
-login_perform_kinit (krb5_context k5,
-                     const gchar *realm,
-                     const gchar *login,
-                     const gchar *password,
-                     const gchar *filename)
-{
-        krb5_get_init_creds_opt *opts;
-        krb5_error_code code;
-        krb5_principal principal;
-        krb5_ccache ccache;
-        krb5_creds creds;
-        gchar *name;
-
-        name = g_strdup_printf ("%s@%s", login, realm);
-        code = krb5_parse_name (k5, name, &principal);
-
-        if (code != 0) {
-                g_debug ("Couldn't parse principal name: %s: %s",
-                         name, krb5_get_error_message (k5, code));
-                g_free (name);
-                return code;
-        }
-
-        g_debug ("Using principal name to kinit: %s", name);
-        g_free (name);
-
-        if (filename == NULL)
-                code = krb5_cc_default (k5, &ccache);
-        else
-                code = krb5_cc_resolve (k5, filename, &ccache);
-
-        if (code != 0) {
-                krb5_free_principal (k5, principal);
-                g_debug ("Couldn't open credential cache: %s: %s",
-                         filename ? filename : "<default>",
-                         krb5_get_error_message (k5, code));
-                return code;
-        }
-
-        code = krb5_get_init_creds_opt_alloc (k5, &opts);
-        g_return_val_if_fail (code == 0, code);
-
-        code = krb5_get_init_creds_opt_set_out_ccache (k5, opts, ccache);
-        g_return_val_if_fail (code == 0, code);
-
-        code = krb5_get_init_creds_password (k5, &creds, principal,
-                                             (char *)password,
-                                             NULL, 0, 0, NULL, opts);
-
-        krb5_get_init_creds_opt_free (k5, opts);
-        krb5_cc_close (k5, ccache);
-        krb5_free_principal (k5, principal);
-
-        if (code == 0) {
-                g_debug ("kinit succeeded");
-                krb5_free_cred_contents (k5, &creds);
-        } else {
-                g_debug ("kinit failed: %s", krb5_get_error_message (k5, code));
-        }
-
-        return code;
-}
-
-static void
-kinit_thread_func (GSimpleAsyncResult *async,
-                   GObject *object,
-                   GCancellable *cancellable)
-{
-        LoginClosure *login = g_simple_async_result_get_op_res_gpointer (async);
-        krb5_context k5 = NULL;
-        krb5_error_code code;
-        GError *error = NULL;
-        gchar *filename = NULL;
-        gchar *contents;
-        gsize length;
-        gint temp_fd;
-
-        filename = g_build_filename (g_get_user_runtime_dir (),
-                                     "um-krb5-creds.XXXXXX", NULL);
-        temp_fd = g_mkstemp_full (filename, O_RDWR, S_IRUSR | S_IWUSR);
-        if (temp_fd == -1) {
-                g_warning ("Couldn't create credential cache file: %s: %s",
-                           filename, g_strerror (errno));
-                g_free (filename);
-                filename = NULL;
-        } else {
-                close (temp_fd);
-        }
-
-        code = krb5_init_context (&k5);
-        if (code == 0) {
-                code = login_perform_kinit (k5, login->realm, login->user,
-                                            login->password, filename);
-        }
-
-        switch (code) {
-        case 0:
-                if (filename != NULL) {
-                        g_file_get_contents (filename, &contents, &length, &error);
-                        if (error == NULL) {
-                                login->credentials = g_bytes_new_take (contents, length);
-                                g_debug ("Read in credential cache: %s", filename);
-                        } else {
-                                g_warning ("Couldn't read credential cache: %s: %s",
-                                           filename, error->message);
-                                g_error_free (error);
-                        }
-                }
-                break;
-
-        case KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN:
-        case KRB5KDC_ERR_POLICY:
-                g_simple_async_result_set_error (async, UM_REALM_ERROR, UM_REALM_ERROR_BAD_LOGIN,
-                                                 _("Cannot log in as %s at the %s domain"),
-                                                 login->user, login->domain);
-                break;
-        case KRB5KDC_ERR_PREAUTH_FAILED:
-        case KRB5KRB_AP_ERR_BAD_INTEGRITY:
-                g_simple_async_result_set_error (async, UM_REALM_ERROR, UM_REALM_ERROR_BAD_PASSWORD,
-                                                 _("Invalid password, please try again"));
-                break;
-        case KRB5_PREAUTH_FAILED:
-        case KRB5KDC_ERR_KEY_EXP:
-        case KRB5KDC_ERR_CLIENT_REVOKED:
-        case KRB5KDC_ERR_ETYPE_NOSUPP:
-        case KRB5_PROG_ETYPE_NOSUPP:
-                g_simple_async_result_set_error (async, UM_REALM_ERROR, UM_REALM_ERROR_CANNOT_AUTH,
-                                                 _("Cannot log in as %s at the %s domain"),
-                                                 login->user, login->domain);
-                break;
-        default:
-                g_simple_async_result_set_error (async, UM_REALM_ERROR, UM_REALM_ERROR_GENERIC,
-                                                 _("Couldn't connect to the %s domain: %s"),
-                                                 login->domain, krb5_get_error_message (k5, code));
-                break;
-        }
-
-        if (filename) {
-                g_unlink (filename);
-                g_debug ("Deleted credential cache: %s", filename);
-                g_free (filename);
-        }
-
-        if (k5)
-                krb5_free_context (k5);
-}
-
-void
-um_realm_login (UmRealmObject *realm,
-                const gchar *user,
-                const gchar *password,
-                GCancellable *cancellable,
-                GAsyncReadyCallback callback,
-                gpointer user_data)
-{
-        GSimpleAsyncResult *async;
-        LoginClosure *login;
-        UmRealmKerberos *kerberos;
-
-        g_return_if_fail (UM_REALM_IS_OBJECT (realm));
-        g_return_if_fail (user != NULL);
-        g_return_if_fail (password != NULL);
-        g_return_if_fail (cancellable == NULL || G_IS_CANCELLABLE (cancellable));
-
-        kerberos = um_realm_object_get_kerberos (realm);
-        g_return_if_fail (kerberos != NULL);
-
-        async = g_simple_async_result_new (NULL, callback, user_data,
-                                           um_realm_login);
-        login = g_slice_new0 (LoginClosure);
-        login->domain = g_strdup (um_realm_kerberos_get_domain_name (kerberos));
-        login->realm = g_strdup (um_realm_kerberos_get_realm_name (kerberos));
-        login->user = g_strdup (user);
-        login->password = g_strdup (password);
-        g_simple_async_result_set_op_res_gpointer (async, login, login_closure_free);
-
-        g_simple_async_result_set_handle_cancellation (async, TRUE);
-        g_simple_async_result_run_in_thread (async, kinit_thread_func,
-                                             G_PRIORITY_DEFAULT, cancellable);
-
-        g_object_unref (async);
-        g_object_unref (kerberos);
-}
-
-gboolean
-um_realm_login_finish (GAsyncResult *result,
-                       GBytes **credentials,
-                       GError **error)
-{
-        GSimpleAsyncResult *async;
-        LoginClosure *login;
-
-        g_return_val_if_fail (g_simple_async_result_is_valid (result, NULL,
-                              um_realm_login), FALSE);
-        g_return_val_if_fail (error == NULL || *error == NULL, FALSE);
-
-        async = G_SIMPLE_ASYNC_RESULT (result);
-        if (g_simple_async_result_propagate_error (async, error))
-                return FALSE;
-
-        login = g_simple_async_result_get_op_res_gpointer (async);
-        if (credentials) {
-                if (login->credentials)
-                        *credentials = g_bytes_ref (login->credentials);
-                else
-                        *credentials = NULL;
-        }
-
-        return TRUE;
-}
diff --git a/panels/user-accounts/um-realm-manager.h b/panels/user-accounts/um-realm-manager.h
deleted file mode 100644
index 2841dff..0000000
--- a/panels/user-accounts/um-realm-manager.h
+++ /dev/null
@@ -1,107 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2012  Red Hat, Inc.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Stef Walter <stefw@gnome.org>
- */
-
-#ifndef __UM_REALM_MANAGER_H__
-#define __UM_REALM_MANAGER_H__
-
-#include "um-realm-generated.h"
-
-G_BEGIN_DECLS
-
-typedef enum {
-	UM_REALM_ERROR_BAD_LOGIN,
-	UM_REALM_ERROR_BAD_PASSWORD,
-	UM_REALM_ERROR_CANNOT_AUTH,
-	UM_REALM_ERROR_GENERIC,
-} UmRealmErrors;
-
-#define UM_REALM_ERROR             (um_realm_error_get_quark ())
-
-GQuark           um_realm_error_get_quark         (void) G_GNUC_CONST;
-
-#define UM_TYPE_REALM_MANAGER      (um_realm_manager_get_type ())
-#define UM_REALM_MANAGER(obj)      (G_TYPE_CHECK_INSTANCE_CAST ((obj), UM_TYPE_REALM_MANAGER, UmRealmManager))
-#define UM_IS_REALM_MANAGER(obj)   (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UM_TYPE_REALM_MANAGER))
-
-typedef struct _UmRealmManager UmRealmManager;
-
-GType            um_realm_manager_get_type        (void) G_GNUC_CONST;
-
-void             um_realm_manager_new             (GCancellable *cancellable,
-                                                   GAsyncReadyCallback callback,
-                                                   gpointer user_data);
-
-UmRealmManager * um_realm_manager_new_finish      (GAsyncResult *result,
-                                                   GError **error);
-
-void             um_realm_manager_discover        (UmRealmManager *self,
-                                                   const gchar *input,
-                                                   GCancellable *cancellable,
-                                                   GAsyncReadyCallback callback,
-                                                   gpointer user_data);
-
-GList *          um_realm_manager_discover_finish (UmRealmManager *self,
-                                                   GAsyncResult *result,
-                                                   GError **error);
-
-GList *          um_realm_manager_get_realms      (UmRealmManager *self);
-
-void             um_realm_login                   (UmRealmObject *realm,
-                                                   const gchar *login,
-                                                   const gchar *password,
-                                                   GCancellable *cancellable,
-                                                   GAsyncReadyCallback callback,
-                                                   gpointer user_data);
-
-gboolean         um_realm_login_finish            (GAsyncResult *result,
-                                                   GBytes **credentials,
-                                                   GError **error);
-
-gboolean         um_realm_join_as_user            (UmRealmObject *realm,
-                                                   const gchar *login,
-                                                   const gchar *password,
-                                                   GBytes *credentials,
-                                                   GCancellable *cancellable,
-                                                   GAsyncReadyCallback callback,
-                                                   gpointer user_data)
-                                                   G_GNUC_WARN_UNUSED_RESULT;
-
-gboolean         um_realm_join_as_admin           (UmRealmObject *realm,
-                                                   const gchar *login,
-                                                   const gchar *password,
-                                                   GBytes *credentials,
-                                                   GCancellable *cancellable,
-                                                   GAsyncReadyCallback callback,
-                                                   gpointer user_data)
-                                                   G_GNUC_WARN_UNUSED_RESULT;
-
-gboolean         um_realm_join_finish             (UmRealmObject *realm,
-                                                   GAsyncResult *result,
-                                                   GError **error);
-
-gboolean         um_realm_is_configured           (UmRealmObject *realm);
-
-gchar *          um_realm_calculate_login         (UmRealmCommon *realm,
-                                                   const gchar *username);
-
-G_END_DECLS
-
-#endif /* __UM_REALM_H__ */
diff --git a/panels/user-accounts/um-user-module.c b/panels/user-accounts/um-user-module.c
deleted file mode 100644
index 2198273..0000000
--- a/panels/user-accounts/um-user-module.c
+++ /dev/null
@@ -1,48 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#include <config.h>
-
-#include "um-user-panel.h"
-
-#include <glib/gi18n.h>
-#ifdef HAVE_CHEESE
-#include <cheese-gtk.h>
-#endif
-
-void
-g_io_module_load (GIOModule *module)
-{
-  bindtextdomain (GETTEXT_PACKAGE, GNOMELOCALEDIR);
-  bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
-
-#ifdef HAVE_CHEESE
-  cheese_gtk_init (NULL, NULL);
-#endif
-
-  /* register the panel */
-  cc_user_panel_register (module);
-}
-
-void
-g_io_module_unload (GIOModule *module)
-{
-}
diff --git a/panels/user-accounts/um-user-panel.c b/panels/user-accounts/um-user-panel.c
deleted file mode 100644
index ec417c0..0000000
--- a/panels/user-accounts/um-user-panel.c
+++ /dev/null
@@ -1,1565 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#include "config.h"
-
-#include "um-user-panel.h"
-
-#include <stdlib.h>
-#include <string.h>
-#include <unistd.h>
-#include <sys/types.h>
-
-#include <glib.h>
-#include <glib/gi18n.h>
-#include <gtk/gtk.h>
-#include <polkit/polkit.h>
-#include <act/act.h>
-
-#ifdef HAVE_CHEESE
-#include <gst/gst.h>
-#endif /* HAVE_CHEESE */
-
-#include "shell/cc-editable-entry.h"
-
-#include "um-editable-button.h"
-#include "um-editable-combo.h"
-
-#include "um-account-dialog.h"
-#include "cc-language-chooser.h"
-#include "um-password-dialog.h"
-#include "um-photo-dialog.h"
-#include "um-fingerprint-dialog.h"
-#include "um-utils.h"
-#include "um-resources.h"
-#include "um-history-dialog.h"
-
-#include "cc-common-language.h"
-
-#define USER_ACCOUNTS_PERMISSION "com.canonical.controlcenter.user-accounts.administration"
-#define INDICATOR_SESSION_SCHEMA "com.canonical.indicator.session"
-
-CC_PANEL_REGISTER (CcUserPanel, cc_user_panel)
-
-#define UM_USER_PANEL_PRIVATE(o) \
-  (G_TYPE_INSTANCE_GET_PRIVATE ((o), UM_TYPE_USER_PANEL, CcUserPanelPrivate))
-
-struct _CcUserPanelPrivate {
-        ActUserManager *um;
-        GtkBuilder *builder;
-
-        GtkWidget *main_box;
-        GPermission *permission;
-        GtkWidget *language_chooser;
-
-        UmPasswordDialog *password_dialog;
-        UmPhotoDialog *photo_dialog;
-        UmHistoryDialog *history_dialog;
-        gint other_accounts;
-        GtkTreeIter *other_iter;
-        
-        UmAccountDialog *account_dialog;
-
-        GSettings *indicator_session_schema;
-};
-
-static GtkWidget *
-get_widget (CcUserPanelPrivate *d, const char *name)
-{
-        return (GtkWidget *)gtk_builder_get_object (d->builder, name);
-}
-
-enum {
-        USER_COL,
-        FACE_COL,
-        NAME_COL,
-        USER_ROW_COL,
-        TITLE_COL,
-        HEADING_ROW_COL,
-        SORT_KEY_COL,
-        AUTOLOGIN_COL,
-        NUM_USER_LIST_COLS
-};
-
-static ActUser *
-get_selected_user (CcUserPanelPrivate *d)
-{
-        GtkTreeView *tv;
-        GtkTreeIter iter;
-        GtkTreeSelection *selection;
-        GtkTreeModel *model;
-        ActUser *user;
-
-        tv = (GtkTreeView *)get_widget (d, "list-treeview");
-        selection = gtk_tree_view_get_selection (tv);
-
-        if (gtk_tree_selection_get_selected (selection, &model, &iter)) {
-                gtk_tree_model_get (model, &iter, USER_COL, &user, -1);
-                return user;
-        }
-
-        return NULL;
-}
-
-static char *
-get_name_col_str (ActUser *user)
-{
-        return g_markup_printf_escaped ("<b>%s</b>\n<small>%s</small>",
-                                        act_user_get_real_name (user),
-                                        act_user_get_user_name (user));
-}
-
-static void
-user_added (ActUserManager *um, ActUser *user, CcUserPanelPrivate *d)
-{
-        GtkWidget *widget;
-        GtkTreeModel *model;
-        GtkListStore *store;
-        GtkTreeIter iter;
-        GtkTreeIter dummy;
-        GdkPixbuf *pixbuf;
-        gchar *text, *title;
-        GtkTreeSelection *selection;
-        gint sort_key;
-        gboolean is_autologin;
-
-        if (act_user_is_system_account (user)) {
-                return;
-        }
-
-        g_debug ("user added: %d %s\n", act_user_get_uid (user), act_user_get_real_name (user));
-        widget = get_widget (d, "list-treeview");
-        model = gtk_tree_view_get_model (GTK_TREE_VIEW (widget));
-        store = GTK_LIST_STORE (model);
-        selection = gtk_tree_view_get_selection (GTK_TREE_VIEW (widget));
-
-        pixbuf = render_user_icon (user, UM_ICON_STYLE_FRAME | UM_ICON_STYLE_STATUS, 48);
-        text = get_name_col_str (user);
-
-        is_autologin = act_user_get_automatic_login (user);
-
-        if (act_user_get_uid (user) == getuid ()) {
-                sort_key = 1;
-        }
-        else {
-                d->other_accounts++;
-                sort_key = 3;
-        }
-        gtk_list_store_append (store, &iter);
-
-        gtk_list_store_set (store, &iter,
-                            USER_COL, user,
-                            FACE_COL, pixbuf,
-                            NAME_COL, text,
-                            USER_ROW_COL, TRUE,
-                            TITLE_COL, NULL,
-                            HEADING_ROW_COL, FALSE,
-                            SORT_KEY_COL, sort_key,
-                            AUTOLOGIN_COL, is_autologin,
-                            -1);
-        g_object_unref (pixbuf);
-        g_free (text);
-
-        if (sort_key == 1 &&
-            !gtk_tree_selection_get_selected (selection, &model, &dummy)) {
-                gtk_tree_selection_select_iter (selection, &iter);
-        }
-
-        /* Show heading for other accounts if new one have been added. */
-        if (d->other_accounts == 1 && sort_key == 3) {
-                title = g_strdup_printf ("<small><span foreground=\"#555555\">%s</span></small>", _("Other Accounts"));
-                gtk_list_store_append (store, &iter);
-                gtk_list_store_set (store, &iter,
-                                    TITLE_COL, title,
-                                    HEADING_ROW_COL, TRUE,
-                                    SORT_KEY_COL, 2,
-                                    -1);
-                d->other_iter = gtk_tree_iter_copy (&iter);
-                g_free (title);
-        }
-}
-
-static void
-get_previous_user_row (GtkTreeModel *model,
-                       GtkTreeIter  *iter,
-                       GtkTreeIter  *prev)
-{
-        GtkTreePath *path;
-        ActUser *user;
-
-        path = gtk_tree_model_get_path (model, iter);
-        while (gtk_tree_path_prev (path)) {
-                gtk_tree_model_get_iter (model, prev, path);
-                gtk_tree_model_get (model, prev, USER_COL, &user, -1);
-                if (user) {
-                        g_object_unref (user);
-                        break;
-                }
-        }
-        gtk_tree_path_free (path);
-}
-
-static gboolean
-get_next_user_row (GtkTreeModel *model,
-                   GtkTreeIter  *iter,
-                   GtkTreeIter  *next)
-{
-        ActUser *user;
-
-        *next = *iter;
-        while (gtk_tree_model_iter_next (model, next)) {
-                gtk_tree_model_get (model, next, USER_COL, &user, -1);
-                if (user) {
-                        g_object_unref (user);
-                        return TRUE;
-                }
-        }
-
-        return FALSE;
-}
-
-static void
-user_removed (ActUserManager *um, ActUser *user, CcUserPanelPrivate *d)
-{
-        GtkTreeView *tv;
-        GtkTreeModel *model;
-        GtkTreeSelection *selection;
-        GtkListStore *store;
-        GtkTreeIter iter, next;
-        ActUser *u;
-        gint key;
-
-        g_debug ("user removed: %s\n", act_user_get_user_name (user));
-        tv = (GtkTreeView *)get_widget (d, "list-treeview");
-        selection = gtk_tree_view_get_selection (tv);
-        model = gtk_tree_view_get_model (tv);
-        store = GTK_LIST_STORE (model);
-        if (gtk_tree_model_get_iter_first (model, &iter)) {
-                do {
-                        gtk_tree_model_get (model, &iter, USER_COL, &u, SORT_KEY_COL, &key, -1);
-
-                        if (u != NULL) {
-                                if (act_user_get_uid (user) == act_user_get_uid (u)) {
-                                        if (!get_next_user_row (model, &iter, &next))
-                                                get_previous_user_row (model, &iter, &next);
-                                        if (key == 3) {
-                                                d->other_accounts--;
-                                        }
-                                        gtk_list_store_remove (store, &iter);
-                                        gtk_tree_selection_select_iter (selection, &next);
-                                        g_object_unref (u);
-                                        break;
-                                }
-                                g_object_unref (u);
-                        }
-                } while (gtk_tree_model_iter_next (model, &iter));
-        }
-
-        /* Hide heading for other accounts if last one have been removed. */
-        if (d->other_iter != NULL && d->other_accounts == 0 && key == 3) {
-                gtk_list_store_remove (store, d->other_iter);
-                gtk_tree_iter_free (d->other_iter);
-                d->other_iter = NULL;
-        }
-}
-
-static void show_user (ActUser *user, CcUserPanelPrivate *d);
-
-static void
-user_changed (ActUserManager *um, ActUser *user, CcUserPanelPrivate *d)
-{
-        GtkTreeView *tv;
-        GtkTreeSelection *selection;
-        GtkTreeModel *model;
-        GtkTreeIter iter;
-        ActUser *current;
-        GdkPixbuf *pixbuf;
-        char *text;
-        gboolean is_autologin;
-
-        tv = (GtkTreeView *)get_widget (d, "list-treeview");
-        model = gtk_tree_view_get_model (tv);
-        selection = gtk_tree_view_get_selection (tv);
-
-        gtk_tree_model_get_iter_first (model, &iter);
-        do {
-                gtk_tree_model_get (model, &iter, USER_COL, &current, -1);
-                if (current == user) {
-                        pixbuf = render_user_icon (user, UM_ICON_STYLE_FRAME | UM_ICON_STYLE_STATUS, 48);
-                        text = get_name_col_str (user);
-                        is_autologin = act_user_get_automatic_login (user);
-
-                        gtk_list_store_set (GTK_LIST_STORE (model), &iter,
-                                            USER_COL, user,
-                                            FACE_COL, pixbuf,
-                                            NAME_COL, text,
-                                            AUTOLOGIN_COL, is_autologin,
-                                            -1);
-                        g_object_unref (pixbuf);
-                        g_free (text);
-                        g_object_unref (current);
-
-                        break;
-                }
-                if (current)
-                        g_object_unref (current);
-
-        } while (gtk_tree_model_iter_next (model, &iter));
-
-        if (gtk_tree_selection_get_selected (selection, &model, &iter)) {
-                gtk_tree_model_get (model, &iter, USER_COL, &current, -1);
-
-                if (current == user) {
-                        show_user (user, d);
-                }
-                if (current)
-                        g_object_unref (current);
-        }
-}
-
-static void
-select_created_user (GObject *object,
-                     GAsyncResult *result,
-                     gpointer user_data)
-{
-        CcUserPanelPrivate *d = user_data;
-        UmAccountDialog *dialog;
-        GtkTreeView *tv;
-        GtkTreeModel *model;
-        GtkTreeSelection *selection;
-        GtkTreeIter iter;
-        ActUser *current;
-        GtkTreePath *path;
-        ActUser *user;
-        uid_t user_uid;
-
-        dialog = UM_ACCOUNT_DIALOG (object);
-        user = um_account_dialog_finish (dialog, result);
-        gtk_widget_destroy (GTK_WIDGET (dialog));
-        d->account_dialog = NULL;
-
-        if (user == NULL)
-                return;
-
-        tv = (GtkTreeView *)get_widget (d, "list-treeview");
-        model = gtk_tree_view_get_model (tv);
-        selection = gtk_tree_view_get_selection (tv);
-        user_uid = act_user_get_uid (user);
-
-        gtk_tree_model_get_iter_first (model, &iter);
-        do {
-                gtk_tree_model_get (model, &iter, USER_COL, &current, -1);
-                if (current) {
-                        if (user_uid == act_user_get_uid (current)) {
-                                path = gtk_tree_model_get_path (model, &iter);
-                                gtk_tree_view_scroll_to_cell (tv, path, NULL, FALSE, 0.0, 0.0);
-                                gtk_tree_selection_select_path (selection, path);
-                                gtk_tree_path_free (path);
-                                g_object_unref (current);
-                                break;
-                        }
-                        g_object_unref (current);
-                }
-        } while (gtk_tree_model_iter_next (model, &iter));
-
-        g_object_unref (user);
-}
-
-static void
-add_user (GtkButton *button, CcUserPanelPrivate *d)
-{
-        d->account_dialog = um_account_dialog_new ();
-        um_account_dialog_show (d->account_dialog, GTK_WINDOW (gtk_widget_get_toplevel (d->main_box)),
-                                d->permission, select_created_user, d);
-}
-
-static void
-delete_user_done (ActUserManager    *manager,
-                  GAsyncResult      *res,
-                  CcUserPanelPrivate *d)
-{
-        GError *error;
-
-        error = NULL;
-        if (!act_user_manager_delete_user_finish (manager, res, &error)) {
-                if (!g_error_matches (error, ACT_USER_MANAGER_ERROR, ACT_USER_MANAGER_ERROR_PERMISSION_DENIED)) {
-                        GtkWidget *dialog;
-
-                        dialog = gtk_message_dialog_new (GTK_WINDOW (gtk_widget_get_toplevel (d->main_box)),
-                                                         GTK_DIALOG_DESTROY_WITH_PARENT,
-                                                         GTK_MESSAGE_ERROR,
-                                                         GTK_BUTTONS_CLOSE,
-                                                         _("Failed to delete user"));
-
-                        gtk_message_dialog_format_secondary_text (GTK_MESSAGE_DIALOG (dialog),
-                                                                  "%s", error->message);
-
-                        g_signal_connect (G_OBJECT (dialog), "response",
-                                          G_CALLBACK (gtk_widget_destroy), NULL);
-                        gtk_window_present (GTK_WINDOW (dialog));
-                }
-                g_error_free (error);
-        }
-}
-
-static void
-delete_user_response (GtkWidget         *dialog,
-                      gint               response_id,
-                      CcUserPanelPrivate *d)
-{
-        ActUser *user;
-        gboolean remove_files;
-
-        gtk_widget_destroy (dialog);
-
-        if (response_id == GTK_RESPONSE_CANCEL) {
-                return;
-        }
-        else if (response_id == GTK_RESPONSE_NO) {
-                remove_files = TRUE;
-        }
-        else {
-                remove_files = FALSE;
-        }
-
-        user = get_selected_user (d);
-
-        /* remove autologin */
-        if (act_user_get_automatic_login (user)) {
-                act_user_set_automatic_login (user, FALSE);
-        }
-
-        act_user_manager_delete_user_async (d->um,
-                                            user,
-                                            remove_files,
-                                            NULL,
-                                            (GAsyncReadyCallback)delete_user_done,
-                                            d);
-
-        g_object_unref (user);
-}
-
-static void
-delete_user (GtkButton *button, CcUserPanelPrivate *d)
-{
-        ActUser *user;
-        GtkWidget *dialog;
-
-        user = get_selected_user (d);
-        if (user == NULL) {
-                return;
-        }
-        else if (act_user_get_uid (user) == getuid ()) {
-                dialog = gtk_message_dialog_new (GTK_WINDOW (gtk_widget_get_toplevel (d->main_box)),
-                                                 0,
-                                                 GTK_MESSAGE_INFO,
-                                                 GTK_BUTTONS_CLOSE,
-                                                 _("You cannot delete your own account."));
-                g_signal_connect (dialog, "response",
-                                  G_CALLBACK (gtk_widget_destroy), NULL);
-        }
-        else if (act_user_is_logged_in_anywhere (user)) {
-                dialog = gtk_message_dialog_new (GTK_WINDOW (gtk_widget_get_toplevel (d->main_box)),
-                                                 0,
-                                                 GTK_MESSAGE_INFO,
-                                                 GTK_BUTTONS_CLOSE,
-                                                 _("%s is still logged in"),
-                                                act_user_get_real_name (user));
-
-                gtk_message_dialog_format_secondary_text (GTK_MESSAGE_DIALOG (dialog),
-                                                          _("Deleting a user while they are logged in can leave the system in an inconsistent state."));
-                g_signal_connect (dialog, "response",
-                                  G_CALLBACK (gtk_widget_destroy), NULL);
-        }
-        else {
-                dialog = gtk_message_dialog_new (GTK_WINDOW (gtk_widget_get_toplevel (d->main_box)),
-                                                 0,
-                                                 GTK_MESSAGE_QUESTION,
-                                                 GTK_BUTTONS_NONE,
-                                                 _("Do you want to keep %s's files?"),
-                                                act_user_get_real_name (user));
-
-                gtk_message_dialog_format_secondary_text (GTK_MESSAGE_DIALOG (dialog),
-                                                          _("It is possible to keep the home directory, mail spool and temporary files around when deleting a user account."));
-
-                gtk_dialog_add_buttons (GTK_DIALOG (dialog),
-                                        _("_Delete Files"), GTK_RESPONSE_NO,
-                                        _("_Keep Files"), GTK_RESPONSE_YES,
-                                        _("_Cancel"), GTK_RESPONSE_CANCEL,
-                                        NULL);
-
-                gtk_window_set_icon_name (GTK_WINDOW (dialog), "system-users");
-
-                g_signal_connect (dialog, "response",
-                                  G_CALLBACK (delete_user_response), d);
-        }
-
-        g_signal_connect (dialog, "close",
-                          G_CALLBACK (gtk_widget_destroy), NULL);
-
-        gtk_window_set_modal (GTK_WINDOW (dialog), TRUE);
-
-        gtk_window_present (GTK_WINDOW (dialog));
-
-        g_object_unref (user);
-}
-
-static const gchar *
-get_invisible_text (void)
-{
-   GtkWidget *entry;
-   gunichar invisible_char;
-   static gchar invisible_text[40];
-   gchar *p;
-   gint i;
-
-   entry = gtk_entry_new ();
-   invisible_char = gtk_entry_get_invisible_char (GTK_ENTRY (entry));
-   if (invisible_char == 0)
-     invisible_char = 0x2022;
-
-   g_object_ref_sink (entry);
-   g_object_unref (entry);
-
-   /* five bullets */
-   p = invisible_text;
-   for (i = 0; i < 5; i++)
-     p += g_unichar_to_utf8 (invisible_char, p);
-   *p = 0;
-
-   return invisible_text;
-}
-
-static const gchar *
-get_password_mode_text (ActUser *user)
-{
-        const gchar *text;
-
-        if (act_user_get_locked (user)) {
-                text = C_("Password mode", "Account disabled");
-        }
-        else {
-                switch (act_user_get_password_mode (user)) {
-                case ACT_USER_PASSWORD_MODE_REGULAR:
-                        text = get_invisible_text ();
-                        break;
-                case ACT_USER_PASSWORD_MODE_SET_AT_LOGIN:
-                        text = C_("Password mode", "To be set at next login");
-                        break;
-                case ACT_USER_PASSWORD_MODE_NONE:
-                        text = C_("Password mode", "None");
-                        break;
-                default:
-                        g_assert_not_reached ();
-                }
-        }
-
-        return text;
-}
-
-static void
-autologin_changed (GObject            *object,
-                   GParamSpec         *pspec,
-                   CcUserPanelPrivate *d)
-{
-        gboolean active;
-        ActUser *user;
-
-        active = gtk_switch_get_active (GTK_SWITCH (object));
-        user = get_selected_user (d);
-
-        if (active != act_user_get_automatic_login (user)) {
-                act_user_set_automatic_login (user, active);
-                if (act_user_get_automatic_login (user)) {
-                        GSList *list;
-                        GSList *l;
-                        list = act_user_manager_list_users (d->um);
-                        for (l = list; l != NULL; l = l->next) {
-                                ActUser *u = l->data;
-                                if (act_user_get_uid (u) != act_user_get_uid (user)) {
-                                        act_user_set_automatic_login (user, FALSE);
-                                }
-                        }
-                        g_slist_free (list);
-                }
-        }
-
-        g_object_unref (user);
-}
-
-static gchar *
-get_login_time_text (ActUser *user)
-{
-        gchar *text, *date_str, *time_str;
-        GDateTime *date_time;
-        gint64 time;
-
-        time = act_user_get_login_time (user);
-        if (act_user_is_logged_in (user)) {
-                text = g_strdup (_("Logged in"));
-        }
-        else if (time > 0) {
-                date_time = g_date_time_new_from_unix_local (time);
-                date_str = get_smart_date (date_time);
-                time_str = g_date_time_format (date_time, "%k:%M");
-
-                text = g_strconcat (date_str, ", ", time_str, NULL);
-
-                g_date_time_unref (date_time);
-                g_free (date_str);
-                g_free (time_str);
-        }
-        else {
-                text = g_strdup ("—");
-        }
-
-        return text;
-}
-
-static gboolean
-get_autologin_possible (ActUser *user)
-{
-        gboolean locked;
-        gboolean set_password_at_login;
-
-        locked = act_user_get_locked (user);
-        set_password_at_login = (act_user_get_password_mode (user) == ACT_USER_PASSWORD_MODE_SET_AT_LOGIN);
-
-        return !(locked || set_password_at_login);
-}
-
-static void on_permission_changed (GPermission *permission, GParamSpec *pspec, gpointer data);
-
-static void
-show_user (ActUser *user, CcUserPanelPrivate *d)
-{
-        GtkWidget *image;
-        GtkWidget *label;
-        GtkWidget *label2;
-        GtkWidget *label3;
-        GdkPixbuf *pixbuf;
-        gchar *lang, *text;
-        GtkWidget *widget;
-        GtkTreeModel *model;
-        GtkTreeIter iter;
-        gboolean show, enable;
-        ActUser *current;
-
-        pixbuf = render_user_icon (user, UM_ICON_STYLE_NONE, 48);
-        image = get_widget (d, "user-icon-image");
-        gtk_image_set_from_pixbuf (GTK_IMAGE (image), pixbuf);
-        image = get_widget (d, "user-icon-image2");
-        gtk_image_set_from_pixbuf (GTK_IMAGE (image), pixbuf);
-        g_object_unref (pixbuf);
-
-        um_photo_dialog_set_user (d->photo_dialog, user);
-
-        widget = get_widget (d, "full-name-entry");
-        cc_editable_entry_set_text (CC_EDITABLE_ENTRY (widget), act_user_get_real_name (user));
-        gtk_widget_set_tooltip_text (widget, act_user_get_user_name (user));
-
-        widget = get_widget (d, "account-type-combo");
-        um_editable_combo_set_active (UM_EDITABLE_COMBO (widget), act_user_get_account_type (user));
-
-        widget = get_widget (d, "account-password-button");
-        um_editable_button_set_text (UM_EDITABLE_BUTTON (widget), get_password_mode_text (user));
-        enable = act_user_is_local_account (user);
-        gtk_widget_set_sensitive (widget, enable);
-
-        widget = get_widget (d, "autologin-switch");
-        g_signal_handlers_block_by_func (widget, autologin_changed, d);
-        gtk_switch_set_active (GTK_SWITCH (widget), act_user_get_automatic_login (user));
-        g_signal_handlers_unblock_by_func (widget, autologin_changed, d);
-        gtk_widget_set_sensitive (widget, get_autologin_possible (user));
-
-        widget = get_widget (d, "account-language-combo");
-        model = um_editable_combo_get_model (UM_EDITABLE_COMBO (widget));
-        cc_add_user_languages (model);
-
-        lang = g_strdup (act_user_get_language (user));
-        if (!lang)
-                lang = cc_common_language_get_current_language ();
-        if (cc_common_language_get_iter_for_language (model, lang, &iter))
-          um_editable_combo_set_active_iter (UM_EDITABLE_COMBO (widget), &iter);
-        g_free (lang);
-
-        /* Fingerprint: show when self, possible, and local account */
-        widget = get_widget (d, "account-fingerprint-notebook");
-        label = get_widget (d, "account-fingerprint-label");
-        label2 = get_widget (d, "account-fingerprint-value-label");
-        label3 = get_widget (d, "account-fingerprint-button-label");
-        show = (act_user_get_uid (user) == getuid() &&
-                act_user_is_local_account (user) &&
-                set_fingerprint_label (label2, label3));
-        gtk_widget_set_visible (label, show);
-        gtk_widget_set_visible (widget, show);
-
-        /* Autologin: show when local account */
-        widget = get_widget (d, "autologin-switch");
-        label = get_widget (d, "autologin-label");
-        /* Don't show autologin option if ecryptfs is in use, because it won't
-           work if user turns it on. */
-        show = act_user_is_local_account (user) &&
-               !is_using_ecryptfs (act_user_get_user_name (user));
-        gtk_widget_set_visible (widget, show);
-        gtk_widget_set_visible (label, show);
-
-        /* Menu bar: show when self and have indicator schema */
-        widget = get_widget (d, "show-login-name-checkbutton");
-        label = get_widget (d, "show-login-name-spacer");
-        show = act_user_get_uid (user) == getuid() &&
-               d->indicator_session_schema;
-        gtk_widget_set_visible (widget, show);
-        gtk_widget_set_visible (label, show);
-
-        /* Last login: show when administrator or current user */
-        widget = get_widget (d, "last-login-value-label");
-        label = get_widget (d, "last-login-label");
-
-        current = act_user_manager_get_user_by_id (d->um, getuid ());
-        show = act_user_get_uid (user) == getuid () ||
-               act_user_get_account_type (current) == ACT_USER_ACCOUNT_TYPE_ADMINISTRATOR;
-        if (show) {
-                text = get_login_time_text (user);
-                gtk_label_set_text (GTK_LABEL (widget), text);
-                g_free (text);
-        }
-        gtk_widget_set_visible (widget, show);
-        gtk_widget_set_visible (label, show);
-
-        enable = act_user_get_login_history (user) != NULL;
-        widget = get_widget (d, "last-login-history-button");
-        gtk_widget_set_visible (widget, show);
-        gtk_widget_set_sensitive (widget, enable);
-
-        if (d->permission != NULL)
-                on_permission_changed (d->permission, NULL, d);
-}
-
-static void
-selected_user_changed (GtkTreeSelection *selection, CcUserPanelPrivate *d)
-{
-        GtkTreeModel *model;
-        GtkTreeIter iter;
-        ActUser *user;
-
-        if (gtk_tree_selection_get_selected (selection, &model, &iter)) {
-                gtk_tree_model_get (model, &iter, USER_COL, &user, -1);
-                show_user (user, d);
-                gtk_widget_set_sensitive (get_widget (d, "main-user-vbox"), TRUE);
-                g_object_unref (user);
-        } else {
-                gtk_widget_set_sensitive (get_widget (d, "main-user-vbox"), FALSE);
-        }
-}
-
-static void
-change_name_done (GtkWidget          *entry,
-                  CcUserPanelPrivate *d)
-{
-        const gchar *text;
-        ActUser *user;
-
-        user = get_selected_user (d);
-
-        text = cc_editable_entry_get_text (CC_EDITABLE_ENTRY (entry));
-        if (g_strcmp0 (text, act_user_get_real_name (user)) != 0 &&
-            is_valid_name (text)) {
-                act_user_set_real_name (user, text);
-        }
-
-        g_object_unref (user);
-}
-
-static void
-account_type_changed (UmEditableCombo    *combo,
-                      CcUserPanelPrivate *d)
-{
-        ActUser *user;
-        GtkTreeModel *model;
-        GtkTreeIter iter;
-        gint account_type;
-
-        user = get_selected_user (d);
-
-        model = um_editable_combo_get_model (combo);
-        um_editable_combo_get_active_iter (combo, &iter);
-        gtk_tree_model_get (model, &iter, 1, &account_type, -1);
-
-        if (account_type != act_user_get_account_type (user)) {
-                act_user_set_account_type (user, account_type);
-        }
-
-        g_object_unref (user);
-}
-
-static void
-language_response (GtkDialog         *dialog,
-                   gint               response_id,
-                   CcUserPanelPrivate *d)
-{
-        GtkWidget *combo;
-        ActUser *user;
-        gchar *lang;
-        GtkTreeModel *model;
-        GtkTreeIter iter;
-
-        user = get_selected_user (d);
-
-        combo = get_widget (d, "account-language-combo");
-        model = um_editable_combo_get_model (UM_EDITABLE_COMBO (combo));
-
-        if (response_id == GTK_RESPONSE_OK) {
-                lang = cc_language_chooser_get_language (GTK_WIDGET (dialog));
-                act_user_set_language (user, lang);
-        }
-        else {
-                lang = g_strdup (act_user_get_language (user));
-                if (!lang)
-                        lang = cc_common_language_get_current_language ();
-        }
-        cc_common_language_get_iter_for_language (model, lang, &iter);
-        um_editable_combo_set_active_iter (UM_EDITABLE_COMBO (combo), &iter);
-        g_free (lang);
-
-        gtk_widget_hide (GTK_WIDGET (dialog));
-        gtk_widget_set_sensitive (combo, TRUE);
-
-        g_object_unref (user);
-}
-
-static void
-language_changed (UmEditableCombo    *combo,
-                  CcUserPanelPrivate *d)
-{
-        GtkTreeModel *model;
-        GtkTreeIter iter;
-        gchar *lang;
-        ActUser *user;
-
-        if (!um_editable_combo_get_active_iter (combo, &iter))
-                 return;
-
-        user = get_selected_user (d);
-
-        model = um_editable_combo_get_model (combo);
-
-        gtk_tree_model_get (model, &iter, 0, &lang, -1);
-        if (lang) {
-                if (g_strcmp0 (lang, act_user_get_language (user)) != 0) {
-                        act_user_set_language (user, lang);
-                }
-                g_free (lang);
-                goto out;
-        }
-
-        if (d->language_chooser) {
-		cc_language_chooser_clear_filter (d->language_chooser);
-                gtk_window_present (GTK_WINDOW (d->language_chooser));
-                gtk_widget_set_sensitive (GTK_WIDGET (combo), FALSE);
-                goto out;
-        }
-
-        d->language_chooser = cc_language_chooser_new (gtk_widget_get_toplevel (d->main_box), FALSE);
-
-        g_signal_connect (d->language_chooser, "response",
-                          G_CALLBACK (language_response), d);
-        g_signal_connect (d->language_chooser, "delete-event",
-                          G_CALLBACK (gtk_widget_hide_on_delete), NULL);
-
-        gdk_window_set_cursor (gtk_widget_get_window (gtk_widget_get_toplevel (d->main_box)), NULL);
-        gtk_window_present (GTK_WINDOW (d->language_chooser));
-        gtk_widget_set_sensitive (GTK_WIDGET (combo), FALSE);
-
-out:
-        g_object_unref (user);
-}
-
-static void
-change_password (GtkButton *button, CcUserPanelPrivate *d)
-{
-        ActUser *user;
-
-        user = get_selected_user (d);
-
-        um_password_dialog_set_user (d->password_dialog, user);
-        um_password_dialog_show (d->password_dialog,
-                                  GTK_WINDOW (gtk_widget_get_toplevel (d->main_box)));
-
-        g_object_unref (user);
-}
-
-static void
-change_fingerprint (GtkButton *button, CcUserPanelPrivate *d)
-{
-        GtkWidget *label, *label2;
-        ActUser *user;
-
-        user = get_selected_user (d);
-
-        g_assert (g_strcmp0 (g_get_user_name (), act_user_get_user_name (user)) == 0);
-
-        label = get_widget (d, "account-fingerprint-value-label");
-        label2 = get_widget (d, "account-fingerprint-button-label");
-        fingerprint_button_clicked (GTK_WINDOW (gtk_widget_get_toplevel (d->main_box)), label, label2, user);
-
-        g_object_unref (user);
-}
-
-static void
-show_history (GtkButton *button, CcUserPanelPrivate *d)
-{
-        ActUser *user;
-
-        user = get_selected_user (d);
-
-        um_history_dialog_set_user (d->history_dialog, user);
-        um_history_dialog_show (d->history_dialog, GTK_WINDOW (gtk_widget_get_toplevel (d->main_box)));
-
-        g_object_unref (user);
-}
-
-static gint
-sort_users (GtkTreeModel *model,
-            GtkTreeIter  *a,
-            GtkTreeIter  *b,
-            gpointer      data)
-{
-        ActUser *ua, *ub;
-        gint sa, sb;
-        gint result;
-
-        gtk_tree_model_get (model, a, USER_COL, &ua, SORT_KEY_COL, &sa, -1);
-        gtk_tree_model_get (model, b, USER_COL, &ub, SORT_KEY_COL, &sb, -1);
-
-        if (sa < sb) {
-                result = -1;
-        }
-        else if (sa > sb) {
-                result = 1;
-        }
-        else {
-                result = act_user_collate (ua, ub);
-        }
-
-        if (ua) {
-                g_object_unref (ua);
-        }
-        if (ub) {
-                g_object_unref (ub);
-        }
-
-        return result;
-}
-
-static gboolean
-dont_select_headings (GtkTreeSelection *selection,
-                      GtkTreeModel     *model,
-                      GtkTreePath      *path,
-                      gboolean          selected,
-                      gpointer          data)
-{
-        GtkTreeIter iter;
-        gboolean is_user;
-
-        gtk_tree_model_get_iter (model, &iter, path);
-        gtk_tree_model_get (model, &iter, USER_ROW_COL, &is_user, -1);
-
-        return is_user;
-}
-
-static void
-users_loaded (ActUserManager     *manager,
-              GParamSpec         *pspec,
-              CcUserPanelPrivate *d)
-{
-        GSList *list, *l;
-        ActUser *user;
-        GtkWidget *dialog;
-
-        if (act_user_manager_no_service (d->um)) {
-                dialog = gtk_message_dialog_new (GTK_WINDOW (gtk_widget_get_toplevel (d->main_box)),
-                                                 GTK_DIALOG_MODAL,
-                                                 GTK_MESSAGE_OTHER,
-                                                 GTK_BUTTONS_CLOSE,
-                                                 _("Failed to contact the accounts service"));
-                gtk_message_dialog_format_secondary_text (GTK_MESSAGE_DIALOG (dialog),
-                                                          _("Please make sure that the AccountService is installed and enabled."));
-                g_signal_connect_swapped (dialog, "response",
-                                          G_CALLBACK (gtk_widget_destroy),
-                                          dialog);
-                gtk_widget_show (dialog);
-
-                gtk_widget_set_sensitive (d->main_box, FALSE);
-        }
-
-        list = act_user_manager_list_users (d->um);
-        g_debug ("Got %d users\n", g_slist_length (list));
-
-        g_signal_connect (d->um, "user-changed", G_CALLBACK (user_changed), d);
-        g_signal_connect (d->um, "user-is-logged-in-changed", G_CALLBACK (user_changed), d);
-
-        for (l = list; l; l = l->next) {
-                user = l->data;
-                g_debug ("adding user %s\n", act_user_get_real_name (user));
-                user_added (d->um, user, d);
-        }
-        g_slist_free (list);
-
-        g_signal_connect (d->um, "user-added", G_CALLBACK (user_added), d);
-        g_signal_connect (d->um, "user-removed", G_CALLBACK (user_removed), d);
-}
-
-static void
-add_unlock_tooltip (GtkWidget *button)
-{
-        gchar *names[3];
-        GIcon *icon;
-
-        names[0] = "changes-allow-symbolic";
-        names[1] = "changes-allow";
-        names[2] = NULL;
-        icon = (GIcon *)g_themed_icon_new_from_names (names, -1);
-        /* Translator comments:
-         * We split the line in 2 here to "make it look good", as there's
-         * no good way to do this in GTK+ for tooltips. See:
-         * https://bugzilla.gnome.org/show_bug.cgi?id=657168 */
-        setup_tooltip_with_embedded_icon (button,
-                                          _("To make changes,\nclick the * icon first"),
-                                          "*",
-                                          icon);
-        g_object_unref (icon);
-        g_signal_connect (button, "button-release-event",
-                           G_CALLBACK (show_tooltip_now), NULL);
-}
-
-static void
-remove_unlock_tooltip (GtkWidget *button)
-{
-        setup_tooltip_with_embedded_icon (button, NULL, NULL, NULL);
-        g_signal_handlers_disconnect_by_func (button,
-                                              G_CALLBACK (show_tooltip_now), NULL);
-}
-
-static void
-on_permission_changed (GPermission *permission,
-                       GParamSpec  *pspec,
-                       gpointer     data)
-{
-        CcUserPanelPrivate *d = data;
-        gboolean is_authorized;
-        gboolean self_selected;
-        ActUser *user;
-        GtkWidget *widget;
-
-        user = get_selected_user (d);
-        if (!user) {
-                return;
-        }
-
-        is_authorized = g_permission_get_allowed (G_PERMISSION (d->permission));
-        self_selected = act_user_get_uid (user) == geteuid ();
-
-        widget = get_widget (d, "add-user-toolbutton");
-        gtk_widget_set_sensitive (widget, is_authorized);
-        if (is_authorized) {
-                setup_tooltip_with_embedded_icon (widget, _("Create a user account"), NULL, NULL);
-        }
-        else {
-                gchar *names[3];
-                GIcon *icon;
-
-                names[0] = "changes-allow-symbolic";
-                names[1] = "changes-allow";
-                names[2] = NULL;
-                icon = (GIcon *)g_themed_icon_new_from_names (names, -1);
-                setup_tooltip_with_embedded_icon (widget,
-                                                  _("To create a user account,\nclick the * icon first"),
-                                                  "*",
-                                                  icon);
-                g_object_unref (icon);
-        }
-
-        widget = get_widget (d, "remove-user-toolbutton");
-        gtk_widget_set_sensitive (widget, is_authorized && !self_selected
-                                  && !would_demote_only_admin (user));
-        if (is_authorized) {
-                setup_tooltip_with_embedded_icon (widget, _("Delete the selected user account"), NULL, NULL);
-        }
-        else {
-                gchar *names[3];
-                GIcon *icon;
-
-                names[0] = "changes-allow-symbolic";
-                names[1] = "changes-allow";
-                names[2] = NULL;
-                icon = (GIcon *)g_themed_icon_new_from_names (names, -1);
-
-                setup_tooltip_with_embedded_icon (widget,
-                                                  _("To delete the selected user account,\nclick the * icon first"),
-                                                  "*",
-                                                  icon);
-                g_object_unref (icon);
-        }
-
-        if (!act_user_is_local_account (user)) {
-                um_editable_combo_set_editable (UM_EDITABLE_COMBO (get_widget (d, "account-type-combo")), FALSE);
-                remove_unlock_tooltip (get_widget (d, "account-type-combo"));
-                gtk_widget_set_sensitive (GTK_WIDGET (get_widget (d, "autologin-switch")), FALSE);
-                remove_unlock_tooltip (get_widget (d, "autologin-switch"));
-
-        } else if (is_authorized && act_user_is_local_account (user)) {
-                if (would_demote_only_admin (user)) {
-                        um_editable_combo_set_editable (UM_EDITABLE_COMBO (get_widget (d, "account-type-combo")), FALSE);
-                } else {
-                        um_editable_combo_set_editable (UM_EDITABLE_COMBO (get_widget (d, "account-type-combo")), TRUE);
-                }
-                remove_unlock_tooltip (get_widget (d, "account-type-combo"));
-
-                gtk_widget_set_sensitive (GTK_WIDGET (get_widget (d, "autologin-switch")), get_autologin_possible (user));
-                remove_unlock_tooltip (get_widget (d, "autologin-switch"));
-        }
-        else {
-                um_editable_combo_set_editable (UM_EDITABLE_COMBO (get_widget (d, "account-type-combo")), FALSE);
-                if (would_demote_only_admin (user)) {
-                        remove_unlock_tooltip (get_widget (d, "account-type-combo"));
-                } else {
-                        add_unlock_tooltip (get_widget (d, "account-type-combo"));
-                }
-                gtk_widget_set_sensitive (GTK_WIDGET (get_widget (d, "autologin-switch")), FALSE);
-                add_unlock_tooltip (get_widget (d, "autologin-switch"));
-        }
-
-        /* The full name entry: insensitive if remote or not authorized and not self */
-        widget = get_widget (d, "full-name-entry");
-        if (!act_user_is_local_account (user)) {
-                cc_editable_entry_set_editable (CC_EDITABLE_ENTRY (widget), FALSE);
-                remove_unlock_tooltip (widget);
-
-        } else if (is_authorized || self_selected) {
-                cc_editable_entry_set_editable (CC_EDITABLE_ENTRY (widget), TRUE);
-                remove_unlock_tooltip (widget);
-
-        } else {
-                cc_editable_entry_set_editable (CC_EDITABLE_ENTRY (widget), FALSE);
-                add_unlock_tooltip (widget);
-        }
-
-        if (is_authorized || self_selected) {
-                gtk_widget_show (get_widget (d, "user-icon-button"));
-                gtk_widget_hide (get_widget (d, "user-icon-nonbutton"));
-
-                um_editable_combo_set_editable (UM_EDITABLE_COMBO (get_widget (d, "account-language-combo")), TRUE);
-                remove_unlock_tooltip (get_widget (d, "account-language-combo"));
-
-                um_editable_button_set_editable (UM_EDITABLE_BUTTON (get_widget (d, "account-password-button")), TRUE);
-                remove_unlock_tooltip (get_widget (d, "account-password-button"));
-
-                gtk_notebook_set_current_page (GTK_NOTEBOOK (get_widget (d, "account-fingerprint-notebook")), 1);
-        }
-        else {
-                gtk_widget_hide (get_widget (d, "user-icon-button"));
-                gtk_widget_show (get_widget (d, "user-icon-nonbutton"));
-
-                um_editable_combo_set_editable (UM_EDITABLE_COMBO (get_widget (d, "account-language-combo")), FALSE);
-                add_unlock_tooltip (get_widget (d, "account-language-combo"));
-
-                um_editable_button_set_editable (UM_EDITABLE_BUTTON (get_widget (d, "account-password-button")), FALSE);
-                add_unlock_tooltip (get_widget (d, "account-password-button"));
-
-                gtk_notebook_set_current_page (GTK_NOTEBOOK (get_widget (d, "account-fingerprint-notebook")), 0);
-        }
-
-        um_password_dialog_set_user (d->password_dialog, user);
-        um_password_dialog_set_privileged (d->password_dialog, is_authorized);
-
-        g_object_unref (user);
-}
-
-static gboolean
-match_user (GtkTreeModel *model,
-            gint          column,
-            const gchar  *key,
-            GtkTreeIter  *iter,
-            gpointer      search_data)
-{
-        ActUser *user;
-        const gchar *name;
-        gchar *normalized_key = NULL;
-        gchar *normalized_name = NULL;
-        gchar *case_normalized_key = NULL;
-        gchar *case_normalized_name = NULL;
-        gchar *p;
-        gboolean result = TRUE;
-        gint i;
-
-        gtk_tree_model_get (model, iter, USER_COL, &user, -1);
-
-        if (!user) {
-                goto out;
-        }
-
-        normalized_key = g_utf8_normalize (key, -1, G_NORMALIZE_ALL);
-        if (!normalized_key) {
-                goto out;
-        }
-
-        case_normalized_key = g_utf8_casefold (normalized_key, -1);
-
-        for (i = 0; i < 2; i++) {
-                if (i == 0) {
-                        name = act_user_get_real_name (user);
-                }
-                else {
-                        name = act_user_get_user_name (user);
-                }
-                g_free (normalized_name);
-                normalized_name = g_utf8_normalize (name, -1, G_NORMALIZE_ALL);
-                if (normalized_name) {
-                        g_free (case_normalized_name);
-                        case_normalized_name = g_utf8_casefold (normalized_name, -1);
-                        p = strstr (case_normalized_name, case_normalized_key);
-
-                        /* poor man's \b */
-                        if (p == case_normalized_name || (p && p[-1] == ' ')) {
-                                result = FALSE;
-                                break;
-                        }
-                }
-        }
-
- out:
-        if (user) {
-                g_object_unref (user);
-        }
-        g_free (normalized_key);
-        g_free (case_normalized_key);
-        g_free (normalized_name);
-        g_free (case_normalized_name);
-
-        return result;
-}
-
-static void
-autologin_cell_data_func (GtkTreeViewColumn    *tree_column,
-                          GtkCellRenderer      *cell,
-                          GtkTreeModel         *model,
-                          GtkTreeIter          *iter,
-                          CcUserPanelPrivate   *d)
-{
-        gboolean is_autologin;
-
-        gtk_tree_model_get (model, iter, AUTOLOGIN_COL, &is_autologin, -1);
-
-        if (is_autologin) {
-                g_object_set (cell, "icon-name", "emblem-default-symbolic", NULL);
-        } else {
-                g_object_set (cell, "icon-name", NULL, NULL);
-        }
-}
-
-static void
-setup_main_window (CcUserPanelPrivate *d)
-{
-        GtkWidget *userlist;
-        GtkTreeModel *model;
-        GtkListStore *store;
-        GtkTreeViewColumn *column;
-        GtkCellRenderer *cell;
-        GtkTreeSelection *selection;
-        GtkWidget *button;
-        GtkTreeIter iter;
-        gint expander_size;
-        gchar *title;
-        GIcon *icon;
-        GError *error = NULL;
-        gchar *names[3];
-        gboolean loaded;
-
-        userlist = get_widget (d, "list-treeview");
-        store = gtk_list_store_new (NUM_USER_LIST_COLS,
-                                    ACT_TYPE_USER,
-                                    GDK_TYPE_PIXBUF,
-                                    G_TYPE_STRING,
-                                    G_TYPE_BOOLEAN,
-                                    G_TYPE_STRING,
-                                    G_TYPE_BOOLEAN,
-                                    G_TYPE_INT,
-                                    G_TYPE_BOOLEAN);
-        model = (GtkTreeModel *)store;
-        gtk_tree_sortable_set_default_sort_func (GTK_TREE_SORTABLE (model), sort_users, NULL, NULL);
-        gtk_tree_sortable_set_sort_column_id (GTK_TREE_SORTABLE (model), GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID, GTK_SORT_ASCENDING);
-        gtk_tree_view_set_model (GTK_TREE_VIEW (userlist), model);
-        gtk_tree_view_set_search_column (GTK_TREE_VIEW (userlist), USER_COL);
-        gtk_tree_view_set_search_equal_func (GTK_TREE_VIEW (userlist),
-                                             match_user, NULL, NULL);
-        g_object_unref (model);
-
-        gtk_widget_style_get (userlist, "expander-size", &expander_size, NULL);
-        gtk_tree_view_set_level_indentation (GTK_TREE_VIEW (userlist), - (expander_size + 6));
-
-        title = g_strdup_printf ("<small><span foreground=\"#555555\">%s</span></small>", _("My Account"));
-        gtk_list_store_append (store, &iter);
-        gtk_list_store_set (store, &iter,
-                            TITLE_COL, title,
-                            HEADING_ROW_COL, TRUE,
-                            SORT_KEY_COL, 0,
-                            AUTOLOGIN_COL, FALSE,
-                            -1);
-        g_free (title);
-
-        d->other_accounts = 0;
-        d->other_iter = NULL;
-
-        column = gtk_tree_view_column_new ();
-        cell = gtk_cell_renderer_pixbuf_new ();
-        gtk_cell_layout_pack_start (GTK_CELL_LAYOUT (column), cell, FALSE);
-        gtk_cell_layout_add_attribute (GTK_CELL_LAYOUT (column), cell, "pixbuf", FACE_COL);
-        gtk_cell_layout_add_attribute (GTK_CELL_LAYOUT (column), cell, "visible", USER_ROW_COL);
-        cell = gtk_cell_renderer_text_new ();
-        g_object_set (cell, "ellipsize", PANGO_ELLIPSIZE_END, NULL);
-        gtk_cell_layout_pack_start (GTK_CELL_LAYOUT (column), cell, TRUE);
-        gtk_cell_layout_add_attribute (GTK_CELL_LAYOUT (column), cell, "markup", NAME_COL);
-        gtk_cell_layout_add_attribute (GTK_CELL_LAYOUT (column), cell, "visible", USER_ROW_COL);
-        cell = gtk_cell_renderer_text_new ();
-        gtk_cell_layout_pack_start (GTK_CELL_LAYOUT (column), cell, TRUE);
-        gtk_cell_layout_add_attribute (GTK_CELL_LAYOUT (column), cell, "markup", TITLE_COL);
-        gtk_cell_layout_add_attribute (GTK_CELL_LAYOUT (column), cell, "visible", HEADING_ROW_COL);
-        cell = gtk_cell_renderer_pixbuf_new ();
-        g_object_set (cell, "follow-state", TRUE, NULL);
-        gtk_tree_view_column_pack_start (column, cell, FALSE);
-        gtk_cell_layout_add_attribute (GTK_CELL_LAYOUT (column), cell, "visible", USER_ROW_COL);
-        gtk_tree_view_column_set_cell_data_func (column,
-                                                 cell,
-                                                 (GtkTreeCellDataFunc) autologin_cell_data_func,
-                                                 d,
-                                                 NULL);
-
-        gtk_tree_view_append_column (GTK_TREE_VIEW (userlist), column);
-
-        selection = gtk_tree_view_get_selection (GTK_TREE_VIEW (userlist));
-        gtk_tree_selection_set_mode (selection, GTK_SELECTION_BROWSE);
-        g_signal_connect (selection, "changed", G_CALLBACK (selected_user_changed), d);
-        gtk_tree_selection_set_select_function (selection, dont_select_headings, NULL, NULL);
-
-        gtk_scrolled_window_set_min_content_width (GTK_SCROLLED_WINDOW (get_widget (d, "list-scrolledwindow")), 300);
-        gtk_widget_set_size_request (get_widget (d, "list-scrolledwindow"), 200, -1);
-
-        button = get_widget (d, "add-user-toolbutton");
-        g_signal_connect (button, "clicked", G_CALLBACK (add_user), d);
-
-        button = get_widget (d, "remove-user-toolbutton");
-        g_signal_connect (button, "clicked", G_CALLBACK (delete_user), d);
-
-        button = get_widget (d, "user-icon-nonbutton");
-        add_unlock_tooltip (button);
-
-        button = get_widget (d, "full-name-entry");
-        g_signal_connect (button, "editing-done", G_CALLBACK (change_name_done), d);
-
-        button = get_widget (d, "account-type-combo");
-        g_signal_connect (button, "editing-done", G_CALLBACK (account_type_changed), d);
-
-        button = get_widget (d, "account-password-button");
-        g_signal_connect (button, "start-editing", G_CALLBACK (change_password), d);
-
-        button = get_widget (d, "account-language-combo");
-        g_signal_connect (button, "editing-done", G_CALLBACK (language_changed), d);
-
-        button = get_widget (d, "autologin-switch");
-        g_signal_connect (button, "notify::active", G_CALLBACK (autologin_changed), d);
-
-        button = get_widget (d, "account-fingerprint-button");
-        g_signal_connect (button, "clicked",
-                          G_CALLBACK (change_fingerprint), d);
-
-        button = get_widget (d, "last-login-history-button");
-        g_signal_connect (button, "clicked",
-                          G_CALLBACK (show_history), d);
-
-        d->permission = (GPermission *)polkit_permission_new_sync (USER_ACCOUNTS_PERMISSION, NULL, NULL, &error);
-        if (d->permission != NULL) {
-                g_signal_connect (d->permission, "notify",
-                                  G_CALLBACK (on_permission_changed), d);
-                on_permission_changed (d->permission, NULL, d);
-        } else {
-                g_warning ("Cannot create '%s' permission: %s", USER_ACCOUNTS_PERMISSION, error->message);
-                g_error_free (error);
-        }
-
-        button = get_widget (d, "add-user-toolbutton");
-        names[0] = "changes-allow-symbolic";
-        names[1] = "changes-allow";
-        names[2] = NULL;
-        icon = (GIcon *)g_themed_icon_new_from_names (names, -1);
-        setup_tooltip_with_embedded_icon (button,
-                                          _("To create a user account,\nclick the * icon first"),
-                                          "*",
-                                          icon);
-        button = get_widget (d, "remove-user-toolbutton");
-        setup_tooltip_with_embedded_icon (button,
-                                          _("To delete the selected user account,\nclick the * icon first"),
-                                          "*",
-                                          icon);
-        g_object_unref (icon);
-
-        g_object_get (d->um, "is-loaded", &loaded, NULL);
-        if (loaded)
-                users_loaded (d->um, NULL, d);
-        else
-                g_signal_connect (d->um, "notify::is-loaded", G_CALLBACK (users_loaded), d);
-}
-
-static void
-cc_user_panel_init (CcUserPanel *self)
-{
-        CcUserPanelPrivate *d;
-        GError *error;
-        volatile GType type G_GNUC_UNUSED;
-        GtkWidget *button;
-        GtkStyleContext *context;
-        GSettingsSchema *schema;
-
-        d = self->priv = UM_USER_PANEL_PRIVATE (self);
-        g_resources_register (um_get_resource ());
-
-        /* register types that the builder might need */
-        type = um_editable_button_get_type ();
-        type = cc_editable_entry_get_type ();
-        type = um_editable_combo_get_type ();
-
-        gtk_widget_set_size_request (GTK_WIDGET (self), -1, 350);
-
-        d->builder = gtk_builder_new ();
-        d->um = act_user_manager_get_default ();
-
-        error = NULL;
-        if (!gtk_builder_add_from_resource (d->builder,
-                                            "/org/gnome/control-center/user-accounts/user-accounts-dialog.ui",
-                                            &error)) {
-                g_error ("%s", error->message);
-                g_error_free (error);
-                return;
-        }
-
-        d->password_dialog = um_password_dialog_new ();
-        button = get_widget (d, "user-icon-button");
-        d->photo_dialog = um_photo_dialog_new (button);
-        d->main_box = get_widget (d, "accounts-vbox");
-        gtk_widget_reparent (d->main_box, GTK_WIDGET (self));
-        d->history_dialog = um_history_dialog_new ();
-        setup_main_window (d);
-
-        context = gtk_widget_get_style_context (get_widget (d, "list-scrolledwindow"));
-        gtk_style_context_set_junction_sides (context, GTK_JUNCTION_BOTTOM);
-        context = gtk_widget_get_style_context (get_widget (d, "add-remove-toolbar"));
-        gtk_style_context_set_junction_sides (context, GTK_JUNCTION_TOP);
-
-        schema = g_settings_schema_source_lookup (g_settings_schema_source_get_default (), INDICATOR_SESSION_SCHEMA, TRUE);
-        if (schema) {
-                d->indicator_session_schema = g_settings_new (INDICATOR_SESSION_SCHEMA);
-                g_settings_bind (d->indicator_session_schema, "show-real-name-on-panel", get_widget (d, "show-login-name-checkbutton"), "active", G_SETTINGS_BIND_DEFAULT);
-                g_settings_schema_unref (schema);
-        }
-}
-
-static void
-cc_user_panel_dispose (GObject *object)
-{
-        CcUserPanelPrivate *priv = UM_USER_PANEL (object)->priv;
-
-        if (priv->um) {
-                g_signal_handlers_disconnect_by_data (priv->um, priv);
-                priv->um = NULL;
-        }
-        if (priv->builder) {
-                g_object_unref (priv->builder);
-                priv->builder = NULL;
-        }
-        if (priv->password_dialog) {
-                um_password_dialog_free (priv->password_dialog);
-                priv->password_dialog = NULL;
-        }
-        if (priv->photo_dialog) {
-                um_photo_dialog_free (priv->photo_dialog);
-                priv->photo_dialog = NULL;
-        }
-        if (priv->history_dialog) {
-                um_history_dialog_free (priv->history_dialog);
-                priv->history_dialog = NULL;
-        }
-        if (priv->account_dialog) {
-                gtk_dialog_response (GTK_DIALOG (priv->account_dialog), GTK_RESPONSE_DELETE_EVENT);
-                priv->account_dialog = NULL;
-        }
-        if (priv->language_chooser) {
-                gtk_widget_destroy (priv->language_chooser);
-                priv->language_chooser = NULL;
-        }
-        if (priv->permission) {
-                g_object_unref (priv->permission);
-                priv->permission = NULL;
-        }
-        if (priv->other_iter) {
-                gtk_tree_iter_free (priv->other_iter);
-                priv->other_iter = NULL;
-        }
-        G_OBJECT_CLASS (cc_user_panel_parent_class)->dispose (object);
-}
-
-static GPermission *
-cc_user_panel_get_permission (CcPanel *panel)
-{
-        CcUserPanelPrivate *priv = UM_USER_PANEL (panel)->priv;
-
-        return priv->permission;
-}
-
-static const char *
-cc_user_panel_get_help_uri (CcPanel *panel)
-{
- if (!g_strcmp0(g_getenv("XDG_CURRENT_DESKTOP"), "Unity"))
-   return "help:ubuntu-help/user-accounts";
- else
- return "help:gnome-help/user-accounts";
-}
-
-static void
-cc_user_panel_class_init (CcUserPanelClass *klass)
-{
-        GObjectClass *object_class = G_OBJECT_CLASS (klass);
-        CcPanelClass *panel_class = CC_PANEL_CLASS (klass);
-
-        object_class->dispose = cc_user_panel_dispose;
-
-        panel_class->get_permission = cc_user_panel_get_permission;
-        panel_class->get_help_uri = cc_user_panel_get_help_uri;
-
-        g_type_class_add_private (klass, sizeof (CcUserPanelPrivate));
-}
-
-void
-cc_user_panel_register (GIOModule *module)
-{
-        cc_user_panel_register_type (G_TYPE_MODULE (module));
-        g_io_extension_point_implement (CC_SHELL_PANEL_EXTENSION_POINT,
-                                        UM_TYPE_USER_PANEL, "user-accounts", 0);
-}
diff --git a/panels/user-accounts/um-user-panel.h b/panels/user-accounts/um-user-panel.h
deleted file mode 100644
index d44c4cb..0000000
--- a/panels/user-accounts/um-user-panel.h
+++ /dev/null
@@ -1,57 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#ifndef _UM_USER_PANEL_H
-#define _UM_USER_PANEL_H
-
-#include <shell/cc-panel.h>
-
-G_BEGIN_DECLS
-
-#define UM_TYPE_USER_PANEL cc_user_panel_get_type()
-
-#define UM_USER_PANEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UM_TYPE_USER_PANEL, CcUserPanel))
-#define UM_USER_PANEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UM_TYPE_USER_PANEL, CcUserPanelClass))
-#define UM_IS_USER_PANEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UM_TYPE_USER_PANEL))
-#define UM_IS_USER_PANEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UM_TYPE_USER_PANEL))
-#define UM_USER_PANEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UM_TYPE_USER_PANEL, CcUserPanelClass))
-
-typedef struct _CcUserPanel CcUserPanel;
-typedef struct _CcUserPanelClass CcUserPanelClass;
-typedef struct _CcUserPanelPrivate CcUserPanelPrivate;
-
-struct _CcUserPanel
-{
-  CcPanel parent;
-
-  CcUserPanelPrivate *priv;
-};
-
-struct _CcUserPanelClass
-{
-  CcPanelClass parent_class;
-};
-
-GType cc_user_panel_get_type (void) G_GNUC_CONST;
-
-G_END_DECLS
-
-#endif /* _UM_USER_PANEL_H */
diff --git a/panels/user-accounts/um-utils.c b/panels/user-accounts/um-utils.c
deleted file mode 100644
index 3968e37..0000000
--- a/panels/user-accounts/um-utils.c
+++ /dev/null
@@ -1,1100 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#include "config.h"
-
-#include <math.h>
-#include <stdlib.h>
-#include <sys/types.h>
-#include <pwd.h>
-#include <utmp.h>
-
-#include <gio/gio.h>
-#include <gio/gunixoutputstream.h>
-#include <glib/gi18n.h>
-#include <sys/stat.h>
-#include <glib/gstdio.h>
-
-#include "um-utils.h"
-
-typedef struct {
-        gchar *text;
-        gchar *placeholder_str;
-        GIcon *icon;
-        gunichar placeholder;
-        gulong query_id;
-} IconShapeData;
-
-static IconShapeData *
-icon_shape_data_new (const gchar *text,
-                     const gchar *placeholder,
-                     GIcon       *icon)
-{
-        IconShapeData *data;
-
-        data = g_new0 (IconShapeData, 1);
-
-        data->text = g_strdup (text);
-        data->placeholder_str = g_strdup (placeholder);
-        data->placeholder = g_utf8_get_char_validated (placeholder, -1);
-        data->icon = g_object_ref (icon);
-
-        return data;
-}
-
-static void
-icon_shape_data_free (gpointer user_data)
-{
-        IconShapeData *data = user_data;
-
-        g_free (data->text);
-        g_free (data->placeholder_str);
-        g_object_unref (data->icon);
-        g_free (data);
-}
-
-static void
-icon_shape_renderer (cairo_t        *cr,
-                     PangoAttrShape *attr,
-                     gboolean        do_path,
-                     gpointer        user_data)
-{
-        IconShapeData *data = user_data;
-        gdouble x, y;
-
-        cairo_get_current_point (cr, &x, &y);
-        if (GPOINTER_TO_UINT (attr->data) == data->placeholder) {
-                gdouble ascent;
-                gdouble height;
-                GdkPixbuf *pixbuf;
-                GtkIconInfo *info;
-
-                ascent = pango_units_to_double (attr->ink_rect.y);
-                height = pango_units_to_double (attr->ink_rect.height);
-                info = gtk_icon_theme_lookup_by_gicon (gtk_icon_theme_get_default (),
-                                                       data->icon,
-                                                       (gint)height,
-                                                       GTK_ICON_LOOKUP_FORCE_SIZE | GTK_ICON_LOOKUP_USE_BUILTIN);
-                pixbuf = gtk_icon_info_load_icon (info, NULL);
-                g_object_unref (info);
-
-                cairo_set_operator (cr, CAIRO_OPERATOR_OVER);
-                cairo_reset_clip (cr);
-                gdk_cairo_set_source_pixbuf (cr, pixbuf, x, y + ascent);
-                cairo_paint (cr);
-                g_object_unref (pixbuf);
-        }
-}
-
-static PangoAttrList *
-create_shape_attr_list_for_layout (PangoLayout   *layout,
-                                   IconShapeData *data)
-{
-        PangoAttrList *attrs;
-        PangoFontMetrics *metrics;
-        gint ascent, descent;
-        PangoRectangle ink_rect, logical_rect;
-        const gchar *p;
-        const gchar *text;
-        gint placeholder_len;
-
-        /* Get font metrics and prepare fancy shape size */
-        metrics = pango_context_get_metrics (pango_layout_get_context (layout),
-                                             pango_layout_get_font_description (layout),
-                                             NULL);
-        ascent = pango_font_metrics_get_ascent (metrics);
-        descent = pango_font_metrics_get_descent (metrics);
-        pango_font_metrics_unref (metrics);
-
-        logical_rect.x = 0;
-        logical_rect.y = - ascent;
-        logical_rect.width = ascent + descent;
-        logical_rect.height = ascent + descent;
-
-        ink_rect = logical_rect;
-
-        attrs = pango_attr_list_new ();
-        text = pango_layout_get_text (layout);
-        placeholder_len = strlen (data->placeholder_str);
-        for (p = text; (p = strstr (p, data->placeholder_str)); p += placeholder_len) {
-                PangoAttribute *attr;
-
-                attr = pango_attr_shape_new_with_data (&ink_rect,
-                                                       &logical_rect,
-                                                       GUINT_TO_POINTER (g_utf8_get_char (p)),
-                                                       NULL, NULL);
-
-                attr->start_index = p - text;
-                attr->end_index = attr->start_index + placeholder_len;
-
-                pango_attr_list_insert (attrs, attr);
-        }
-
-        return attrs;
-}
-
-static gboolean
-query_unlock_tooltip (GtkWidget  *widget,
-                      gint        x,
-                      gint        y,
-                      gboolean    keyboard_tooltip,
-                      GtkTooltip *tooltip,
-                      gpointer    user_data)
-{
-        GtkWidget *label;
-        PangoLayout *layout;
-        PangoAttrList *attrs;
-        IconShapeData *data;
-
-        data = g_object_get_data (G_OBJECT (widget), "icon-shape-data");
-        label = g_object_get_data (G_OBJECT (widget), "tooltip-label");
-        if (label == NULL) {
-                label = gtk_label_new (data->text);
-                g_object_ref_sink (label);
-                g_object_set_data_full (G_OBJECT (widget),
-                                        "tooltip-label", label, g_object_unref);
-        }
-
-        layout = gtk_label_get_layout (GTK_LABEL (label));
-        pango_cairo_context_set_shape_renderer (pango_layout_get_context (layout),
-                                                icon_shape_renderer,
-                                                data, NULL);
-
-        attrs = create_shape_attr_list_for_layout (layout, data);
-        gtk_label_set_attributes (GTK_LABEL (label), attrs);
-        pango_attr_list_unref (attrs);
-
-        gtk_tooltip_set_custom (tooltip, label);
-
-        return TRUE;
-}
-
-void
-setup_tooltip_with_embedded_icon (GtkWidget   *widget,
-                                  const gchar *text,
-                                  const gchar *placeholder,
-                                  GIcon       *icon)
-{
-        IconShapeData *data;
-
-        data = g_object_get_data (G_OBJECT (widget), "icon-shape-data");
-        if (data) {
-                gtk_widget_set_has_tooltip (widget, FALSE);
-                g_signal_handler_disconnect (widget, data->query_id);
-                g_object_set_data (G_OBJECT (widget), "icon-shape-data", NULL);
-                g_object_set_data (G_OBJECT (widget), "tooltip-label", NULL);
-        }
-
-        if (!placeholder) {
-                gtk_widget_set_tooltip_text (widget, text);
-                return;
-        }
-
-        data = icon_shape_data_new (text, placeholder, icon);
-        g_object_set_data_full (G_OBJECT (widget),
-                                "icon-shape-data",
-                                data,
-                                icon_shape_data_free);
-
-        gtk_widget_set_has_tooltip (widget, TRUE);
-        data->query_id = g_signal_connect (widget, "query-tooltip",
-                                           G_CALLBACK (query_unlock_tooltip), NULL);
-
-}
-
-gboolean
-show_tooltip_now (GtkWidget *widget,
-                  GdkEvent  *event)
-{
-        GtkSettings *settings;
-        gint timeout;
-
-        settings = gtk_widget_get_settings (widget);
-
-        g_object_get (settings, "gtk-tooltip-timeout", &timeout, NULL);
-        g_object_set (settings, "gtk-tooltip-timeout", 1, NULL);
-        gtk_tooltip_trigger_tooltip_query (gtk_widget_get_display (widget));
-        g_object_set (settings, "gtk-tooltip-timeout", timeout, NULL);
-
-        return FALSE;
-}
-
-static gboolean
-query_tooltip (GtkWidget  *widget,
-               gint        x,
-               gint        y,
-               gboolean    keyboard_mode,
-               GtkTooltip *tooltip,
-               gpointer    user_data)
-{
-        gchar *tip;
-
-        if (GTK_ENTRY_ICON_SECONDARY == gtk_entry_get_icon_at_pos (GTK_ENTRY (widget), x, y)) {
-                tip = gtk_entry_get_icon_tooltip_text (GTK_ENTRY (widget),
-                                                       GTK_ENTRY_ICON_SECONDARY);
-                gtk_tooltip_set_text (tooltip, tip);
-                g_free (tip);
-
-                return TRUE;
-        }
-        else {
-                return FALSE;
-        }
-}
-
-static void
-icon_released (GtkEntry             *entry,
-              GtkEntryIconPosition  pos,
-              GdkEvent             *event,
-              gpointer              user_data)
-{
-        GtkSettings *settings;
-        gint timeout;
-
-        settings = gtk_widget_get_settings (GTK_WIDGET (entry));
-
-        g_object_get (settings, "gtk-tooltip-timeout", &timeout, NULL);
-        g_object_set (settings, "gtk-tooltip-timeout", 1, NULL);
-        gtk_tooltip_trigger_tooltip_query (gtk_widget_get_display (GTK_WIDGET (entry)));
-        g_object_set (settings, "gtk-tooltip-timeout", timeout, NULL);
-}
-
-
-
-void
-set_entry_validation_error (GtkEntry    *entry,
-                            const gchar *text)
-{
-        g_object_set (entry, "caps-lock-warning", FALSE, NULL);
-        gtk_entry_set_icon_from_icon_name (entry,
-                                           GTK_ENTRY_ICON_SECONDARY,
-                                           "dialog-error-symbolic");
-        gtk_entry_set_icon_activatable (entry,
-                                        GTK_ENTRY_ICON_SECONDARY,
-                                        TRUE);
-        g_signal_connect (entry, "icon-release",
-                          G_CALLBACK (icon_released), FALSE);
-        g_signal_connect (entry, "query-tooltip",
-                          G_CALLBACK (query_tooltip), NULL);
-        g_object_set (entry, "has-tooltip", TRUE, NULL);
-        gtk_entry_set_icon_tooltip_text (entry,
-                                         GTK_ENTRY_ICON_SECONDARY,
-                                         text);
-}
-
-void
-clear_entry_validation_error (GtkEntry *entry)
-{
-        gboolean warning;
-
-        g_object_get (entry, "caps-lock-warning", &warning, NULL);
-
-        if (warning)
-                return;
-
-        g_object_set (entry, "has-tooltip", FALSE, NULL);
-        gtk_entry_set_icon_from_pixbuf (entry,
-                                        GTK_ENTRY_ICON_SECONDARY,
-                                        NULL);
-        g_object_set (entry, "caps-lock-warning", TRUE, NULL);
-}
-
-void
-popup_menu_below_button (GtkMenu   *menu,
-                         gint      *x,
-                         gint      *y,
-                         gboolean  *push_in,
-                         GtkWidget *button)
-{
-        GtkRequisition menu_req;
-        GtkTextDirection direction;
-        GtkAllocation allocation;
-
-	gtk_widget_get_preferred_size (GTK_WIDGET (menu), NULL, &menu_req);
-
-        direction = gtk_widget_get_direction (button);
-
-        gdk_window_get_origin (gtk_widget_get_window (button), x, y);
-        gtk_widget_get_allocation (button, &allocation);
-        *x += allocation.x;
-        *y += allocation.y + allocation.height;
-
-        if (direction == GTK_TEXT_DIR_LTR)
-                *x += MAX (allocation.width - menu_req.width, 0);
-        else if (menu_req.width > allocation.width)
-                *x -= menu_req.width - allocation.width;
-
-        *push_in = TRUE;
-}
-
-void
-rounded_rectangle (cairo_t *cr,
-                   gdouble  aspect,
-                   gdouble  x,
-                   gdouble  y,
-                   gdouble  corner_radius,
-                   gdouble  width,
-                   gdouble  height)
-{
-        gdouble radius;
-        gdouble degrees;
-
-        radius = corner_radius / aspect;
-        degrees = G_PI / 180.0;
-
-        cairo_new_sub_path (cr);
-        cairo_arc (cr,
-                   x + width - radius,
-                   y + radius,
-                   radius,
-                   -90 * degrees,
-                   0 * degrees);
-        cairo_arc (cr,
-                   x + width - radius,
-                   y + height - radius,
-                   radius,
-                   0 * degrees,
-                   90 * degrees);
-        cairo_arc (cr,
-                   x + radius,
-                   y + height - radius,
-                   radius,
-                   90 * degrees,
-                   180 * degrees);
-        cairo_arc (cr,
-                   x + radius,
-                   y + radius,
-                   radius,
-                   180 * degrees,
-                   270 * degrees);
-        cairo_close_path (cr);
-}
-
-void
-down_arrow (GtkStyleContext *context,
-            cairo_t         *cr,
-            gint             x,
-            gint             y,
-            gint             width,
-            gint             height)
-{
-        GtkStateFlags flags;
-        GdkRGBA fg_color;
-        GdkRGBA outline_color;
-        gdouble vertical_overshoot;
-        gint diameter;
-        gdouble radius;
-        gdouble x_double, y_double;
-        gdouble angle;
-        gint line_width;
-
-        flags = gtk_style_context_get_state (context);
-
-        gtk_style_context_get_color (context, flags, &fg_color);
-        gtk_style_context_get_border_color (context, flags, &outline_color);
-
-        line_width = 1;
-        angle = G_PI / 2;
-        vertical_overshoot = line_width / 2.0 * (1. / tan (G_PI / 8));
-        if (line_width % 2 == 1)
-                vertical_overshoot = ceil (0.5 + vertical_overshoot) - 0.5;
-        else
-                vertical_overshoot = ceil (vertical_overshoot);
-        diameter = (gint) MAX (3, width - 2 * vertical_overshoot);
-        diameter -= (1 - (diameter + line_width) % 2);
-        radius = diameter / 2.;
-        x_double = floor ((x + width / 2) - (radius + line_width) / 2.) + (radius + line_width) / 2.;
-
-        y_double = (y + height / 2) - 0.5;
-
-        cairo_save (cr);
-
-        cairo_translate (cr, x_double, y_double);
-        cairo_rotate (cr, angle);
-
-        cairo_move_to (cr, - radius / 2., - radius);
-        cairo_line_to (cr,   radius / 2.,   0);
-        cairo_line_to (cr, - radius / 2.,   radius);
-
-        cairo_close_path (cr);
-
-        cairo_set_line_width (cr, line_width);
-
-        gdk_cairo_set_source_rgba (cr, &fg_color);
-
-        cairo_fill_preserve (cr);
-
-        gdk_cairo_set_source_rgba (cr, &outline_color);
-        cairo_stroke (cr);
-
-        cairo_restore (cr);
-}
-
-
-#define MAXNAMELEN  (UT_NAMESIZE - 1)
-
-static gboolean
-is_username_used (const gchar *username)
-{
-        struct passwd *pwent;
-
-        if (username == NULL || username[0] == '\0') {
-                return FALSE;
-        }
-
-        pwent = getpwnam (username);
-
-        return pwent != NULL;
-}
-
-gboolean
-is_valid_name (const gchar *name)
-{
-        gboolean is_empty = TRUE;
-        const gchar *c;
-
-        /* Valid names must contain:
-         *   1) at least one character.
-         *   2) at least one non-"space" character.
-         */
-        for (c = name; *c; c++) {
-                gunichar unichar;
-
-                unichar = g_utf8_get_char_validated (c, -1);
-
-                /* Partial UTF-8 sequence or end of string */
-                if (unichar == (gunichar) -1 || unichar == (gunichar) -2)
-                        break;
-
-                /* Check for non-space character */
-                if (!g_unichar_isspace (unichar)) {
-                        is_empty = FALSE;
-                        break;
-                }
-        }
-
-        return !is_empty;
-}
-
-gboolean
-is_valid_username (const gchar *username, gchar **tip)
-{
-        gboolean empty;
-        gboolean in_use;
-        gboolean too_long;
-        gboolean valid;
-        const gchar *c;
-
-        if (username == NULL || username[0] == '\0') {
-                empty = TRUE;
-                in_use = FALSE;
-                too_long = FALSE;
-        } else {
-                empty = FALSE;
-                in_use = is_username_used (username);
-                too_long = strlen (username) > MAXNAMELEN;
-        }
-        valid = TRUE;
-
-        if (!in_use && !empty && !too_long) {
-                /* First char must be a letter, and it must only composed
-                 * of ASCII letters, digits, and a '.', '-', '_'
-                 */
-                for (c = username; *c; c++) {
-                        if (! ((*c >= 'a' && *c <= 'z') ||
-                               (*c >= 'A' && *c <= 'Z') ||
-                               (*c >= '0' && *c <= '9') ||
-                               (*c == '_') || (*c == '.') ||
-                               (*c == '-' && c != username)))
-                           valid = FALSE;
-                }
-        }
-
-        valid = !empty && !in_use && !too_long && valid;
-
-        if (!empty && (in_use || too_long || !valid)) {
-                if (in_use) {
-                        *tip = g_strdup_printf (_("A user with the username '%s' already exists"),
-                                               username);
-                }
-                else if (too_long) {
-                        *tip = g_strdup_printf (_("The username is too long"));
-                }
-                else if (username[0] == '-') {
-                        *tip = g_strdup (_("The username cannot start with a '-'"));
-                }
-                else {
-                        *tip = g_strdup (_("The username must only consist of:\n"
-                                          " \xe2\x9e\xa3 letters from the English alphabet\n"
-                                          " \xe2\x9e\xa3 digits\n"
-                                          " \xe2\x9e\xa3 any of the characters '.', '-' and '_'"));
-                }
-        }
-        else {
-                *tip = NULL;
-        }
-
-        return valid;
-}
-
-void
-generate_username_choices (const gchar  *name,
-                           GtkListStore *store)
-{
-        gboolean in_use;
-        char *lc_name, *ascii_name, *stripped_name;
-        char **words1;
-        char **words2 = NULL;
-        char **w1, **w2;
-        char *c;
-        char *unicode_fallback = "?";
-        GString *first_word, *last_word;
-        GString *item0, *item1, *item2, *item3, *item4;
-        int len;
-        int nwords1, nwords2, i;
-        GHashTable *items;
-        GtkTreeIter iter;
-
-        gtk_list_store_clear (store);
-
-        ascii_name = g_convert_with_fallback (name, -1, "ASCII//TRANSLIT", "UTF-8",
-                                              unicode_fallback, NULL, NULL, NULL);
-
-        lc_name = g_ascii_strdown (ascii_name, -1);
-
-        /* Remove all non ASCII alphanumeric chars from the name,
-         * apart from the few allowed symbols.
-         *
-         * We do remove '.', even though it is usually allowed,
-         * since it often comes in via an abbreviated middle name,
-         * and the dot looks just wrong in the proposals then.
-         */
-        stripped_name = g_strnfill (strlen (lc_name) + 1, '\0');
-        i = 0;
-        for (c = lc_name; *c; c++) {
-                if (!(g_ascii_isdigit (*c) || g_ascii_islower (*c) ||
-                    *c == ' ' || *c == '-' || *c == '_' ||
-                    /* used to track invalid words, removed below */
-                    *c == '?') )
-                        continue;
-
-                    stripped_name[i] = *c;
-                    i++;
-        }
-
-        if (strlen (stripped_name) == 0) {
-                g_free (ascii_name);
-                g_free (lc_name);
-                g_free (stripped_name);
-                return;
-        }
-
-        /* we split name on spaces, and then on dashes, so that we can treat
-         * words linked with dashes the same way, i.e. both fully shown, or
-         * both abbreviated
-         */
-        words1 = g_strsplit_set (stripped_name, " ", -1);
-        len = g_strv_length (words1);
-
-        /* The default item is a concatenation of all words without ? */
-        item0 = g_string_sized_new (strlen (stripped_name));
-
-        g_free (ascii_name);
-        g_free (lc_name);
-        g_free (stripped_name);
-
-        /* Concatenate the whole first word with the first letter of each
-         * word (item1), and the last word with the first letter of each
-         * word (item2). item3 and item4 are symmetrical respectively to
-         * item1 and item2.
-         *
-         * Constant 5 is the max reasonable number of words we may get when
-         * splitting on dashes, since we can't guess it at this point,
-         * and reallocating would be too bad.
-         */
-        item1 = g_string_sized_new (strlen (words1[0]) + len - 1 + 5);
-        item3 = g_string_sized_new (strlen (words1[0]) + len - 1 + 5);
-
-        item2 = g_string_sized_new (strlen (words1[len - 1]) + len - 1 + 5);
-        item4 = g_string_sized_new (strlen (words1[len - 1]) + len - 1 + 5);
-
-        /* again, guess at the max size of names */
-        first_word = g_string_sized_new (20);
-        last_word = g_string_sized_new (20);
-
-        nwords1 = 0;
-        nwords2 = 0;
-        for (w1 = words1; *w1; w1++) {
-                if (strlen (*w1) == 0)
-                        continue;
-
-                /* skip words with string '?', most likely resulting
-                 * from failed transliteration to ASCII
-                 */
-                if (strstr (*w1, unicode_fallback) != NULL)
-                        continue;
-
-                nwords1++; /* count real words, excluding empty string */
-
-                item0 = g_string_append (item0, *w1);
-
-                words2 = g_strsplit_set (*w1, "-", -1);
-                /* reset last word if a new non-empty word has been found */
-                if (strlen (*words2) > 0)
-                        last_word = g_string_set_size (last_word, 0);
-
-                for (w2 = words2; *w2; w2++) {
-                        if (strlen (*w2) == 0)
-                                continue;
-
-                        nwords2++;
-
-                        /* part of the first "toplevel" real word */
-                        if (nwords1 == 1) {
-                                item1 = g_string_append (item1, *w2);
-                                first_word = g_string_append (first_word, *w2);
-                        }
-                        else {
-                                item1 = g_string_append_unichar (item1,
-                                                                 g_utf8_get_char (*w2));
-                                item3 = g_string_append_unichar (item3,
-                                                                 g_utf8_get_char (*w2));
-                        }
-
-                        /* not part of the last "toplevel" word */
-                        if (w1 != words1 + len - 1) {
-                                item2 = g_string_append_unichar (item2,
-                                                                 g_utf8_get_char (*w2));
-                                item4 = g_string_append_unichar (item4,
-                                                                 g_utf8_get_char (*w2));
-                        }
-
-                        /* always save current word so that we have it if last one reveals empty */
-                        last_word = g_string_append (last_word, *w2);
-                }
-
-                g_strfreev (words2);
-        }
-        item2 = g_string_append (item2, last_word->str);
-        item3 = g_string_append (item3, first_word->str);
-        item4 = g_string_prepend (item4, last_word->str);
-
-        items = g_hash_table_new (g_str_hash, g_str_equal);
-
-        in_use = is_username_used (item0->str);
-        if (!in_use && !g_ascii_isdigit (item0->str[0])) {
-                gtk_list_store_append (store, &iter);
-                gtk_list_store_set (store, &iter, 0, item0->str, -1);
-                g_hash_table_insert (items, item0->str, item0->str);
-        }
-
-        in_use = is_username_used (item1->str);
-        if (nwords2 > 0 && !in_use && !g_ascii_isdigit (item1->str[0])) {
-                gtk_list_store_append (store, &iter);
-                gtk_list_store_set (store, &iter, 0, item1->str, -1);
-                g_hash_table_insert (items, item1->str, item1->str);
-        }
-
-        /* if there's only one word, would be the same as item1 */
-        if (nwords2 > 1) {
-                /* add other items */
-                in_use = is_username_used (item2->str);
-                if (!in_use && !g_ascii_isdigit (item2->str[0]) &&
-                    !g_hash_table_lookup (items, item2->str)) {
-                        gtk_list_store_append (store, &iter);
-                        gtk_list_store_set (store, &iter, 0, item2->str, -1);
-                        g_hash_table_insert (items, item2->str, item2->str);
-                }
-
-                in_use = is_username_used (item3->str);
-                if (!in_use && !g_ascii_isdigit (item3->str[0]) &&
-                    !g_hash_table_lookup (items, item3->str)) {
-                        gtk_list_store_append (store, &iter);
-                        gtk_list_store_set (store, &iter, 0, item3->str, -1);
-                        g_hash_table_insert (items, item3->str, item3->str);
-                }
-
-                in_use = is_username_used (item4->str);
-                if (!in_use && !g_ascii_isdigit (item4->str[0]) &&
-                    !g_hash_table_lookup (items, item4->str)) {
-                        gtk_list_store_append (store, &iter);
-                        gtk_list_store_set (store, &iter, 0, item4->str, -1);
-                        g_hash_table_insert (items, item4->str, item4->str);
-                }
-
-                /* add the last word */
-                in_use = is_username_used (last_word->str);
-                if (!in_use && !g_ascii_isdigit (last_word->str[0]) &&
-                    !g_hash_table_lookup (items, last_word->str)) {
-                        gtk_list_store_append (store, &iter);
-                        gtk_list_store_set (store, &iter, 0, last_word->str, -1);
-                        g_hash_table_insert (items, last_word->str, last_word->str);
-                }
-
-                /* ...and the first one */
-                in_use = is_username_used (first_word->str);
-                if (!in_use && !g_ascii_isdigit (first_word->str[0]) &&
-                    !g_hash_table_lookup (items, first_word->str)) {
-                        gtk_list_store_append (store, &iter);
-                        gtk_list_store_set (store, &iter, 0, first_word->str, -1);
-                        g_hash_table_insert (items, first_word->str, first_word->str);
-                }
-        }
-
-        g_hash_table_destroy (items);
-        g_strfreev (words1);
-        g_string_free (first_word, TRUE);
-        g_string_free (last_word, TRUE);
-        g_string_free (item0, TRUE);
-        g_string_free (item1, TRUE);
-        g_string_free (item2, TRUE);
-        g_string_free (item3, TRUE);
-        g_string_free (item4, TRUE);
-}
-
-gboolean
-is_using_ecryptfs (const gchar *name)
-{
-        gboolean using_ecryptfs = FALSE;
-        int status;
-        gchar *prog;
-        gchar *cmd;
-        gchar *nostdout = NULL;
-
-        prog = g_find_program_in_path ("ecryptfs-verify");
-        if (prog != NULL) {
-                gchar *cmd = g_strdup_printf("'%s' -h -u '%s'", prog, name);
-
-                if (g_spawn_command_line_sync (cmd, &nostdout, NULL, &status, NULL)) {
-                        if (status == 0)
-                                using_ecryptfs = TRUE;
-                }
-
-                g_free (prog);
-                g_free (cmd);
-                g_free (nostdout);
-        }
-
-        return using_ecryptfs;
-}
-
-gchar *
-get_smart_date (GDateTime *date)
-{
-        gchar *label;
-        GDateTime *today, *local;
-        GTimeSpan span;
-
-        /* Set today date */
-        local = g_date_time_new_now_local ();
-        today = g_date_time_new_local (g_date_time_get_year (local),
-                                       g_date_time_get_month (local),
-                                       g_date_time_get_day_of_month (local),
-                                       0, 0, 0);
-
-        span = g_date_time_difference (today, date);
-        if (span <= 0) {
-                label = g_strdup (_("Today"));
-        }
-        else if (span <= G_TIME_SPAN_DAY) {
-                label = g_strdup (_("Yesterday"));
-        }
-        else {
-                if (g_date_time_get_year (date) == g_date_time_get_year (today)) {
-                        label = g_date_time_format (date, "%b %e");
-                }
-                else {
-                        label = g_date_time_format (date, "%b %e, %Y");
-                }
-        }
-
-        g_date_time_unref (local);
-        g_date_time_unref (today);
-
-        return label;
-}
-
-
-static gboolean
-check_user_file (const char *filename,
-                 gssize      max_file_size)
-{
-        struct stat fileinfo;
-
-        if (max_file_size < 0) {
-                max_file_size = G_MAXSIZE;
-        }
-
-        /* Exists/Readable? */
-        if (stat (filename, &fileinfo) < 0) {
-                g_debug ("File does not exist");
-                return FALSE;
-        }
-
-        /* Is a regular file */
-        if (G_UNLIKELY (!S_ISREG (fileinfo.st_mode))) {
-                g_debug ("File is not a regular file");
-                return FALSE;
-        }
-
-        /* Size is sane? */
-        if (G_UNLIKELY (fileinfo.st_size > max_file_size)) {
-                g_debug ("File is too large");
-                return FALSE;
-        }
-
-        return TRUE;
-}
-
-static GdkPixbuf *
-frame_pixbuf (GdkPixbuf *source)
-{
-        GdkPixbuf       *dest;
-        cairo_t         *cr;
-        cairo_surface_t *surface;
-        guint            w;
-        guint            h;
-        int              frame_width;
-        double           radius;
-
-        frame_width = 2;
-
-        w = gdk_pixbuf_get_width (source) + frame_width * 2;
-        h = gdk_pixbuf_get_height (source) + frame_width * 2;
-        radius = w / 10;
-
-        surface = cairo_image_surface_create (CAIRO_FORMAT_ARGB32,
-                                              w, h);
-        cr = cairo_create (surface);
-        cairo_surface_destroy (surface);
-
-        /* set up image */
-        cairo_rectangle (cr, 0, 0, w, h);
-        cairo_set_source_rgba (cr, 1.0, 1.0, 1.0, 0.0);
-        cairo_fill (cr);
-
-        rounded_rectangle (cr, 1.0, 0.5, 0.5, radius, w - 1, h - 1);
-        cairo_set_source_rgba (cr, 0.5, 0.5, 0.5, 0.3);
-        cairo_fill_preserve (cr);
-
-        gdk_cairo_set_source_pixbuf (cr, source, frame_width, frame_width);
-        cairo_fill (cr);
-
-        dest = gdk_pixbuf_get_from_surface (surface, 0, 0, w, h);
-
-        cairo_destroy (cr);
-
-        return dest;
-}
-
-static GdkPixbuf *
-logged_in_pixbuf (GdkPixbuf *pixbuf)
-{
-        cairo_format_t format;
-        cairo_surface_t *surface;
-        cairo_pattern_t *pattern;
-        cairo_t *cr;
-        gint width, height;
-        GdkRGBA color;
-
-        width = gdk_pixbuf_get_width (pixbuf);
-        height = gdk_pixbuf_get_height (pixbuf);
-
-        g_return_val_if_fail (width > 15 && height > 15, pixbuf);
-
-        format = gdk_pixbuf_get_has_alpha (pixbuf) ? CAIRO_FORMAT_ARGB32 : CAIRO_FORMAT_RGB24;
-        surface = cairo_image_surface_create (format, width, height);
-        cr = cairo_create (surface);
-
-        gdk_cairo_set_source_pixbuf (cr, pixbuf, 0, 0);
-        cairo_paint (cr);
-
-        /* Draw pattern */
-        cairo_rectangle (cr, 0, 0, width, height);
-        pattern = cairo_pattern_create_radial (width - 9.5, height - 10, 0, width - 8.5, height - 7.5, 7.7);
-        cairo_pattern_add_color_stop_rgb (pattern, 0, 0.4, 0.9, 0);
-        cairo_pattern_add_color_stop_rgb (pattern, 0.7, 0.3, 0.6, 0);
-        cairo_pattern_add_color_stop_rgb (pattern, 0.8, 0.4, 0.4, 0.4);
-        cairo_pattern_add_color_stop_rgba (pattern, 1.0, 0, 0, 0, 0);
-        cairo_set_source (cr, pattern);
-        cairo_fill (cr);
-
-        /* Draw border */
-        cairo_set_line_width (cr, 0.9);
-        cairo_arc (cr, width - 8.5, height - 8.5, 6, 0, 2 * G_PI);
-        gdk_rgba_parse (&color, "#ffffff");
-        gdk_cairo_set_source_rgba (cr, &color);
-        cairo_stroke (cr);
-
-        pixbuf = gdk_pixbuf_get_from_surface (surface, 0, 0, width, height);
-
-        cairo_surface_finish (surface);
-        cairo_destroy (cr);
-
-        return pixbuf;
-}
-
-#define MAX_FILE_SIZE     65536
-
-GdkPixbuf *
-render_user_icon (ActUser     *user,
-                  UmIconStyle  style,
-                  gint         icon_size)
-{
-        GdkPixbuf    *pixbuf;
-        GdkPixbuf    *framed;
-        gboolean      res;
-        GError       *error;
-        const gchar  *icon_file;
-
-        g_return_val_if_fail (ACT_IS_USER (user), NULL);
-        g_return_val_if_fail (icon_size > 12, NULL);
-
-        icon_file = act_user_get_icon_file (user);
-        pixbuf = NULL;
-        if (icon_file) {
-                res = check_user_file (icon_file, MAX_FILE_SIZE);
-                if (res) {
-                        pixbuf = gdk_pixbuf_new_from_file_at_size (icon_file,
-                                                                   icon_size,
-                                                                   icon_size,
-                                                                   NULL);
-                }
-                else {
-                        pixbuf = NULL;
-                }
-        }
-
-        if (pixbuf != NULL) {
-                goto out;
-        }
-
-        error = NULL;
-        pixbuf = gtk_icon_theme_load_icon (gtk_icon_theme_get_default (),
-
-                                           "avatar-default",
-                                           icon_size,
-                                           GTK_ICON_LOOKUP_FORCE_SIZE,
-                                           &error);
-        if (error) {
-                g_warning ("%s", error->message);
-                g_error_free (error);
-        }
-
- out:
-
-        if (pixbuf != NULL && (style & UM_ICON_STYLE_FRAME)) {
-                framed = frame_pixbuf (pixbuf);
-                if (framed != NULL) {
-                        g_object_unref (pixbuf);
-                        pixbuf = framed;
-                }
-        }
-
-        if (pixbuf != NULL && (style & UM_ICON_STYLE_STATUS) && act_user_is_logged_in (user)) {
-                framed = logged_in_pixbuf (pixbuf);
-                if (framed != NULL) {
-                        g_object_unref (pixbuf);
-                        pixbuf = framed;
-                }
-        }
-
-        return pixbuf;
-}
-
-void
-set_user_icon_data (ActUser   *user,
-                    GdkPixbuf *pixbuf)
-{
-        gchar *path;
-        gint fd;
-        GOutputStream *stream;
-        GError *error;
-
-        path = g_build_filename (g_get_tmp_dir (), "gnome-control-center-user-icon-XXXXXX", NULL);
-        fd = g_mkstemp (path);
-
-        if (fd == -1) {
-                g_warning ("failed to create temporary file for image data");
-                g_free (path);
-                return;
-        }
-
-        stream = g_unix_output_stream_new (fd, TRUE);
-
-        error = NULL;
-        if (!gdk_pixbuf_save_to_stream (pixbuf, stream, "png", NULL, &error, NULL)) {
-                g_warning ("failed to save image: %s", error->message);
-                g_error_free (error);
-                g_object_unref (stream);
-                return;
-        }
-
-        g_object_unref (stream);
-
-        act_user_set_icon_file (user, path);
-
-        /* if we ever make the dbus call async, the g_remove call needs
-         * to wait for its completion
-         */
-        g_remove (path);
-
-        g_free (path);
-}
-
-static guint
-get_num_active_admin (ActUserManager *um)
-{
-        GSList *list;
-        GSList *l;
-        guint num_admin = 0;
-
-        list = act_user_manager_list_users (um);
-        for (l = list; l != NULL; l = l->next) {
-                ActUser *u = l->data;
-                if (act_user_get_account_type (u) == ACT_USER_ACCOUNT_TYPE_ADMINISTRATOR && !act_user_get_locked (u)) {
-                        num_admin++;
-                }
-        }
-        g_slist_free (list);
-
-        return num_admin;
-}
-
-gboolean
-would_demote_only_admin (ActUser *user)
-{
-
-        ActUserManager *um = act_user_manager_get_default ();
-
-        /* Prevent the user from demoting the only admin account.
-         * Returns TRUE when user is an administrator and there is only
-         * one enabled administrator. */
-
-        if (act_user_get_account_type (user) == ACT_USER_ACCOUNT_TYPE_STANDARD
-            ||  act_user_get_locked (user))
-                return FALSE;
-
-        if (get_num_active_admin (um) > 1)
-                return FALSE;
-
-        return TRUE;
-}
diff --git a/panels/user-accounts/um-utils.h b/panels/user-accounts/um-utils.h
deleted file mode 100644
index 9c418ab..0000000
--- a/panels/user-accounts/um-utils.h
+++ /dev/null
@@ -1,90 +0,0 @@
-/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
- *
- * Copyright 2009-2010  Red Hat, Inc,
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * Written by: Matthias Clasen <mclasen@redhat.com>
- */
-
-#ifndef __UM_UTILS_H__
-#define __UM_UTILS_H__
-
-#include <gtk/gtk.h>
-#include <act/act.h>
-
-G_BEGIN_DECLS
-
-typedef enum {
-        UM_ICON_STYLE_NONE   = 0,
-        UM_ICON_STYLE_FRAME  = 1 << 0,
-        UM_ICON_STYLE_STATUS = 1 << 1
-} UmIconStyle;
-
-void     setup_tooltip_with_embedded_icon (GtkWidget   *widget,
-                                           const gchar *text,
-                                           const gchar *placeholder,
-                                           GIcon       *icon);
-gboolean show_tooltip_now                 (GtkWidget   *widget,
-                                           GdkEvent    *event);
-
-void     set_entry_validation_error       (GtkEntry    *entry,
-                                           const gchar *text);
-void     clear_entry_validation_error     (GtkEntry    *entry);
-
-void     popup_menu_below_button          (GtkMenu     *menu,
-                                           gint        *x,
-                                           gint        *y,
-                                           gboolean    *push_in,
-                                           GtkWidget   *button);
-
-void     rounded_rectangle                (cairo_t     *cr,
-                                           gdouble      aspect,
-                                           gdouble      x,
-                                           gdouble      y,
-                                           gdouble      corner_radius,
-                                           gdouble      width,
-                                           gdouble      height);
-
-void     down_arrow                       (GtkStyleContext *context,
-                                           cairo_t         *cr,
-                                           gint             x,
-                                           gint             y,
-                                           gint             width,
-                                           gint             height);
-
-gboolean is_valid_name                    (const gchar     *name);
-gboolean is_valid_username                (const gchar     *name,
-                                           gchar          **tip);
-
-void     generate_username_choices        (const gchar     *name,
-                                           GtkListStore    *store);
-
-gboolean is_using_ecryptfs                (const gchar     *name);
-
-gchar *  get_smart_date                   (GDateTime *date);
-
-GdkPixbuf * render_user_icon              (ActUser         *user,
-                                           UmIconStyle      style,
-                                           gint             icon_size);
-
-void     set_user_icon_data               (ActUser         *user,
-                                           GdkPixbuf       *pixbuf);
-
-gboolean would_demote_only_admin          (ActUser *user);
-
-G_END_DECLS
-
-#endif
diff --git a/panels/user-accounts/user-accounts.gresource.xml b/panels/user-accounts/user-accounts.gresource.xml
deleted file mode 100644
index 5a47577..0000000
--- a/panels/user-accounts/user-accounts.gresource.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<gresources>
-  <gresource prefix="/org/gnome/control-center/user-accounts">
-    <file alias="account-dialog.ui" preprocess="xml-stripblanks">data/account-dialog.ui</file>
-    <file alias="account-fingerprint.ui" preprocess="xml-stripblanks">data/account-fingerprint.ui</file>
-    <file alias="password-dialog.ui" preprocess="xml-stripblanks">data/password-dialog.ui</file>
-    <file alias="photo-dialog.ui" preprocess="xml-stripblanks">data/photo-dialog.ui</file>
-    <file alias="history-dialog.ui" preprocess="xml-stripblanks">data/history-dialog.ui</file>
-    <file alias="user-accounts-dialog.ui" preprocess="xml-stripblanks">data/user-accounts-dialog.ui</file>
-    <file alias="left-index-finger.png">data/icons/left-index-finger.png</file>
-    <file alias="left-middle-finger.png">data/icons/left-middle-finger.png</file>
-    <file alias="left-little-finger.png">data/icons/left-little-finger.png</file>
-    <file alias="left-ring-finger.png">data/icons/left-ring-finger.png</file>
-    <file alias="left-thumb.png">data/icons/left-thumb.png</file>
-    <file alias="print_error.png">data/icons/print_error.png</file>
-    <file alias="print_ok.png">data/icons/print_ok.png</file>
-    <file alias="right-index-finger.png">data/icons/right-index-finger.png</file>
-    <file alias="right-middle-finger.png">data/icons/right-middle-finger.png</file>
-    <file alias="right-little-finger.png">data/icons/right-little-finger.png</file>
-    <file alias="right-ring-finger.png">data/icons/right-ring-finger.png</file>
-    <file alias="right-thumb.png">data/icons/right-thumb.png</file>
-  </gresource>
-</gresources>
diff --git a/po/POTFILES.in b/po/POTFILES.in
index 11a0265..61f911a 100644
--- a/po/POTFILES.in
+++ b/po/POTFILES.in
@@ -42,25 +42,6 @@ panels/universal-access/unity-universal-access-panel.desktop.in.in
 [type: gettext/glade]panels/universal-access/uap.ui
 panels/universal-access/zoom-options.c
 [type: gettext/glade]panels/universal-access/zoom-options.ui
-[type: gettext/glade]panels/user-accounts/data/account-dialog.ui
-[type: gettext/glade]panels/user-accounts/data/account-fingerprint.ui
-panels/user-accounts/data/unity-user-accounts-panel.desktop.in.in
-[type: gettext/glade]panels/user-accounts/data/history-dialog.ui
-[type: gettext/glade]panels/user-accounts/data/password-dialog.ui
-[type: gettext/glade]panels/user-accounts/data/photo-dialog.ui
-[type: gettext/glade]panels/user-accounts/data/user-accounts-dialog.ui
-panels/user-accounts/com.canonical.controlcenter.user-accounts.policy.in
-panels/user-accounts/pw-utils.c
-panels/user-accounts/run-passwd.c
-panels/user-accounts/um-account-dialog.c
-panels/user-accounts/um-account-type.c
-panels/user-accounts/um-fingerprint-dialog.c
-panels/user-accounts/um-history-dialog.c
-panels/user-accounts/um-password-dialog.c
-panels/user-accounts/um-photo-dialog.c
-panels/user-accounts/um-realm-manager.c
-panels/user-accounts/um-user-panel.c
-panels/user-accounts/um-utils.c
 shell/cc-shell-nav-bar.c
 shell/control-center.c
 shell/unity-control-center.desktop.in.in
diff --git a/po/POTFILES.skip b/po/POTFILES.skip
index 7094a39..f70ea44 100644
--- a/po/POTFILES.skip
+++ b/po/POTFILES.skip
@@ -9,6 +9,4 @@ panels/sound/data/gnome-sound-panel.desktop.in
 panels/sound/data/sounds/gnome-sounds-default.xml.in
 panels/sound/gvc/gvc-mixer-control.c
 panels/universal-access/gnome-universal-access-panel.desktop.in
-panels/user-accounts/data/gnome-user-accounts-panel.desktop.in
-panels/user-accounts/fingerprint-strings.h
 shell/gnome-control-center.desktop.in
-- 
1.9.2

