#!/bin/sh
# Generated by Alien's SlackBuild Toolkit: http://slackware.com/~alien/AST
# Copyright 2009, 2010, 2011, 2012  Eric Hameleers, Eindhoven, Netherlands

# Slackware build script for banshee-community-extensions

# Written by Ronny Schmatzler <schmatzler@hirnschwund.net>

# Based on http://slackbuilds.org/template.SlackBuild

# (add license information here if you desire; otherwise,
# all submissions are considered to be in the public domain)
# Some licenses may incorporate the "Written by" information
# above, and if so, that line can be omitted
# We strongly suggest *not* using GPL for scripts, as it requires
# a copy of the GPL to be distributed with it.  Since the GPL
# itself is longer than any build script will be, this just doesn't
# make good sense...

PRGNAM=banshee-community-extensions	# replace with name of program
VERSION=${VERSION:-ae73224}
BUILD=${BUILD:-1}
TAG=${TAG:-_banpack}	# "_SBo" is required for submission to slackbuilds.org
ARCH=${ARCH:-i486}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}	# For consistency's sake, use this
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}	# Drop the package in /tmp

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e # Exit on most errors
# If you prefer to do selective error checking with
#   command || exit 1
# then that's also acceptable.

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
git clone https://github.com/BansheeMediaPlayer/banshee-community-extensions.git -b stable-2.6 $PRGNAM-$VERSION
cd $PRGNAM-$VERSION
git reset --hard $VERSION
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# add various patches
git apply < $CWD/patches/streamrecorder-gst1.0.patch 
patch -p1 < $CWD/patches/streamrecorder-fix-build.patch
patch -p1 < $CWD/patches/karaoke-fix-build.patch
patch -p1 < $CWD/patches/fix-build-order.patch

# User Note
# added:
#   --disable-coverwallpaper
#  --disable-openvp
# End User Note

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
#add /opt to path for gstreamer1.0
export PKG_CONFIG_PATH=/opt/gstreamer1-banshee/usr/lib/pkgconfig
./autogen.sh MCS=/usr/bin/dmcs \
  --enable-streamrecorder \
  --enable-karaoke \
  --enable-openvp \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --disable-coverwallpaper \
  --disable-openvp \
  --build=$ARCH-slackware-linux

# Compile the application and install it into the $PKG directory
make
make install DESTDIR=$PKG

# Strip binaries and libraries - this can be done with 'make install-strip'
# in many source trees, and that's usually acceptable if so, but if not,
# use this:
find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Copy the slack-desc (and a custom doinst.sh if necessary) into ./install
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
[ -f $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh

# Make the package; be sure to leave it in $OUTPUT
# If package symlinks need to be created during install *before*
# your custom contents of doinst.sh runs, then add the -p switch to
# the makepkg command below -- see makepkg(8) for details
cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
