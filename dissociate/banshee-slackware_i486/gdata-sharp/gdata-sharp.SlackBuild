#!/bin/sh
# Heavily based on the Slackware 13.7 SlackBuild
# http://code.google.com/p/google-gdata/
# Packager Andrea Sciucca ( gohanz at infinito.it)
# http://www.slacky.eu
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Required: mono
#
# Exit on most errors
set -e
 


# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=gdata-sharp
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-2.2.0.0}
ARCH=${ARCH:-i686} # i686 or x86_64
BUILD=${BUILD:-1}
TAG=${TAG:-_banpack}

SOURCE="http://google-gdata.googlecode.com/files/libgoogle-data-mono-$VERSION.tar.gz"

# Download sorce tarball if still not present
if [ ! -e $CWD/libgoogle-data-mono-$VERSION.tar.gz ]; then
wget -c $SOURCE
fi


# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

# Decompress the source tarball
cd $TMP
tar xvzf $CWD/libgoogle-data-mono-$VERSION.tar.gz
#svn checkout -r {2011-10-27} http://google-gdata.googlecode.com/svn/trunk/ google-gdata-read-only 

echo -e "\E[0;32m+------------------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild Gdata Sharp |\E[0;0m"
echo -e "\E[0;32m+------------------------------+\E[0;0m"

# Adjust permissions and ownerships

cd libgoogle-data-mono-$VERSION
chmod -R u+w,go+r-w,a-s .
chown -R root:root .
#sed -i '25d' Makefile
#cd misc
#sed -i -e 's|/lib|/lib64|' *.pc.*

sed -i 's|-r:System.dll -r:System.Xml.dll -r:System.Configuration.dll|-r:System.dll -r:System.Xml.dll -r:System.Configuration.dll -r:/usr/lib/mono/newtonsoft-json/Newtonsoft.Json.dll|' Makefile

# Building Gdata Sharp package
#cd ../
#Fixing install prefix
sed -i 's/PREFIX=\/usr\/local/PREFIX=\/usr/' Makefile
# && sed -i 's/lib/lib64/' Makefile && sed -i 's/library/library/' Makefile
#Suppress installation of tests and docs
make
make install DESTDIR=$PKG
#mkdir $PKG/usr/lib64
#mkdir $PKG/usr/lib64/pkgconfig
#ln -s /usr/lib/pkgconfig/gdata-sharp-acl.pc $PKG/usr/lib64/pkgconfig/gdata-sharp-acl.pc
#ln -s /usr/lib/pkgconfig/gdata-sharp-analytics.pc $PKG/usr/lib64/pkgconfig/gdata-sharp-analytics.pc
#ln -s /usr/lib/pkgconfig/gdata-sharp-apps.pc $PKG/usr/lib64/pkgconfig/gdata-sharp-apps.pc
#ln -s /usr/lib/pkgconfig/gdata-sharp-blogger.pc $PKG/usr/lib64/pkgconfig/gdata-sharp-blogger.pc
#ln -s /usr/lib/pkgconfig/gdata-sharp-calendar.pc $PKG/usr/lib64/pkgconfig/gdata-sharp-calendar.pc
#ln -s /usr/lib/pkgconfig/gdata-sharp-codesearch.pc $PKG/usr/lib64/pkgconfig/gdata-sharp-codesearch.pc
#ln -s /usr/lib/pkgconfig/gdata-sharp-contacts.pc $PKG/usr/lib64/pkgconfig/gdata-sharp-contacts.pc
#ln -s /usr/lib/pkgconfig/gdata-sharp-core.pc $PKG/usr/lib64/pkgconfig/gdata-sharp-core.pc
#ln -s /usr/lib/pkgconfig/gdata-sharp-documents.pc $PKG/usr/lib64/pkgconfig/gdata-sharp-documents.pc
#ln -s /usr/lib/pkgconfig/gdata-sharp-health.pc $PKG/usr/lib64/pkgconfig/gdata-sharp-health.pc
#ln -s /usr/lib/pkgconfig/gdata-sharp-photos.pc $PKG/usr/lib64/pkgconfig/gdata-sharp-photos.pc
#ln -s /usr/lib/pkgconfig/gdata-sharp-spreadsheets.pc $PKG/usr/lib64/pkgconfig/gdata-sharp-spreadsheets.pc
#ln -s /usr/lib/pkgconfig/gdata-sharp-youtube.pc $PKG/usr/lib64/pkgconfig/gdata-sharp-youtube.pc
#cd -


# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)


#Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
cp -a *.txt  $PKG/usr/doc/$PKGNAME-$VERSION
chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/*



# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild





# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x /usr/bin/requiredbuilder ];then
ADD=$(ls /var/log/packages/ | sed -ne 's/\(mono\)-\([^-]\+-[^-]\+-[^-]\+\)/\1 >= \2/p') \
requiredbuilder -y -v -s  $CWD $PKG
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}


# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi



